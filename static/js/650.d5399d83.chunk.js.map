{"version":3,"file":"static/js/650.d5399d83.chunk.js","mappings":"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","sources":["Redux/selectors/profile_selectors.ts","webpack://react-vadim/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.tsx","webpack://react-vadim/./src/components/Profile/MyPosts/MyPosts.module.css?831b","components/Profile/MyPosts/MyPostsForm.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","webpack://react-vadim/./src/components/Profile/Profile.module.css?b512","components/Profile/ProfileInfo/ProfileStatus.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","components/hoc/witAuthNavigate.tsx"],"sourcesContent":["import {RootState} from \"../reduxStore\";\r\n\r\nexport const getProfile = (state: RootState) => {\r\n    return state.profile.profile\r\n}\r\nexport const getPosts = (state: RootState) => {\r\n    return state.profile.posts\r\n}\r\nexport const getNewPostText = (state: RootState) => {\r\n    return state.profile.newPostText\r\n}\r\nexport const getStatusProfile = (state: RootState) => {\r\n    return state.profile.status\r\n}\r\nexport const getFollow = (state: RootState) => {\r\n    return state.profile.follow\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"post\":\"Post_post__akrs7\",\"img\":\"Post_img__LCZ5K\",\"messageBlock\":\"Post_messageBlock__DTacw\",\"message\":\"Post_message__WRFZD\",\"like\":\"Post_like__wbWe1\",\"likeActive\":\"Post_likeActive__cinax\",\"likeIcon\":\"Post_likeIcon__rVuhL\"};","import React, {useEffect, useState} from 'react';\r\nimport s from './Post.module.css';\r\nimport {useAppDispatch, useAppSelector} from \"../../../../Redux/reduxStore\";\r\nimport {setLikePostActionCreator} from \"../../../../Redux/reducers/profile_reducer\";\r\nimport {Card} from \"@mui/material\";\r\n\r\nconst Post = (props: { message: string, likeCount: number, ownerLike: boolean, id: number}) => {\r\n    let [likeActive, setLikeActive] = useState<boolean>(props.ownerLike)\r\n    let [likeCount, setLikeCount] = useState<number>(props.likeCount)\r\n    const dispatch = useAppDispatch()\r\n    useEffect(() => {\r\n        setLikeActive(props.ownerLike)\r\n        setLikeCount(props.likeCount)\r\n        console.log(props.ownerLike)\r\n    }, [props.ownerLike])\r\n    let onClickChange = () => {\r\n        dispatch(setLikePostActionCreator(props.id))\r\n    }\r\n    return (\r\n        <Card>\r\n            <img className={s.img}\r\n                 src='https://shapka-youtube.ru/wp-content/uploads/2021/02/avatarka-dlya-skaypa-dlya-parney.jpg'/>\r\n            <div className={s.messageBlock}>\r\n                <div className={s.message}>{props.message}</div>\r\n                <div className={likeActive ? s.likeActive : s.like}>{likeCount}<img\r\n                    className={s.likeIcon}\r\n                    src={likeActive ? process.env.PUBLIC_URL + '/likeActive.png' : process.env.PUBLIC_URL + '/like.png'}\r\n                    onClick={() => onClickChange()}\r\n                    alt={'like'}/>\r\n                </div>\r\n            </div>\r\n\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Post","// extracted by mini-css-extract-plugin\nexport default {\"createText\":\"MyPosts_createText__T-jsH\",\"buttonAddPost\":\"MyPosts_buttonAddPost__QtbW7\",\"addpost\":\"MyPosts_addpost__+irvX\"};","import React, {Dispatch} from 'react'\r\nimport Post from './Post/Post'\r\nimport s from './MyPosts.module.css'\r\nimport {profilePageType} from \"../../../Redux/reducers/profile_reducer\";\r\nimport {Formik} from \"formik\";\r\nimport {Box, Button, TextField} from \"@mui/material\";\r\n\r\nexport const MyPostsForm = React.memo((props: {\r\n    createNewPost: (newPost: string) => void,\r\n}) => {\r\n    return <Formik\r\n        initialValues={{\r\n            newPost: '' as string\r\n        }}\r\n        validateOnBlur\r\n        onSubmit={(values, {resetForm}) => {\r\n            props.createNewPost(values.newPost)\r\n            resetForm({values: undefined})\r\n        }}\r\n    >\r\n        {({\r\n              values,\r\n              handleBlur,\r\n              handleChange,\r\n              isValid,\r\n              handleSubmit,\r\n              dirty\r\n          }) => (\r\n            <Box display={\"flex\"} flexDirection={'row'} width={'100%'}\r\n                 maxWidth={'600px'} m={'auto'} sx={{flexGrow: 1,}} mb={3}>\r\n                <TextField\r\n                    type={'input'}\r\n                    name={'newPost'}\r\n                    onChange={handleChange}\r\n                    value={values.newPost}\r\n                    onBlur={handleBlur}\r\n                    color={'info'}\r\n                    label={'Add post'}\r\n                    id={'newPost'}\r\n                    variant={'outlined'}\r\n                    fullWidth={true}\r\n                    sx={{\r\n                        \"& .MuiOutlinedInput-root\":{\"& > fieldset\": {border: '1px solid grey'}},\r\n                        input: {color: '#D0D3D4'}\r\n                }}\r\n                    InputLabelProps={{\r\n                        sx: { color: \"grey\"/*, \"&.Mui-focused\": { color: \"green\" } */},\r\n                    }}\r\n\r\n                />\r\n                {/*<input\r\n                    type={'input'}\r\n                    name={'newPost'}\r\n                    onChange={handleChange}\r\n                    placeholder={'Add text'}\r\n                    className={s.createText}\r\n                    value={values.newPost}\r\n                    onBlur={handleBlur}\r\n                />*/}\r\n                <Button\r\n                    variant={!dirty ? 'outlined' : 'contained'}\r\n                    color={'warning'}\r\n                    disabled={!dirty}\r\n                    onClick={() => {handleSubmit()}}\r\n                    type={'submit'}\r\n                >Send\r\n                </Button>\r\n            </Box>\r\n        )}\r\n\r\n    </Formik>\r\n})","import React, {Dispatch, FC, useEffect} from 'react'\r\nimport Post from './Post/Post'\r\nimport s from './MyPosts.module.css'\r\nimport {postsType} from \"../../../Redux/reducers/profile_reducer\";\r\nimport {MyPostsForm} from \"./MyPostsForm\";\r\nimport {Box} from \"@mui/material\";\r\n\r\ntype PropsType = {\r\n    posts: Array<postsType>,\r\n    createNewPost: (NewPost: string) => void,\r\n}\r\n\r\nconst MyPosts: FC<PropsType> = (props) => {\r\n    let postElements = props.posts.map(\r\n        (p) => <Post message={p.message} likeCount={p.likeCount}\r\n                     key={p.id} ownerLike={p.ownerLike} id={p.id}/>\r\n    );\r\n    console.log('Rerender')\r\n    return (\r\n        <Box display={'flex'} flexDirection={'column'} mt={3}>\r\n            <MyPostsForm\r\n                createNewPost={props.createNewPost}\r\n            />\r\n            <div className={s.post}>\r\n                {postElements}\r\n            </div>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default MyPosts","import React, {Dispatch} from 'react'\r\nimport {\r\n    AddPostActionCreator,\r\n} from \"../../../Redux/reducers/profile_reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {RootState} from \"../../../Redux/reduxStore\";\r\n\r\nlet mapStateToProps = (state: RootState) => {\r\n    return {\r\n        posts: state.profile.posts,\r\n        newPostText: state.profile.newPostText\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch: Dispatch<any>) => {\r\n    return {\r\n        createNewPost: (newPost: string) => {\r\n            dispatch(AddPostActionCreator(newPost))\r\n        },\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer","// extracted by mini-css-extract-plugin\nexport default {\"profileClass\":\"Profile_profileClass__eq7lO\",\"profileInfo\":\"Profile_profileInfo__OVCEI\",\"avatarSide\":\"Profile_avatarSide__M2bsj\",\"avatarImg\":\"Profile_avatarImg__3Egiz\",\"fullPhoto\":\"Profile_fullPhoto__Yz2Tr\",\"inputPhoto\":\"Profile_inputPhoto__RonUU\",\"labelUpdatePhoto\":\"Profile_labelUpdatePhoto__rIkOS\",\"name\":\"Profile_name__7N8LX\",\"status\":\"Profile_status__pnE9e\",\"aboutMe\":\"Profile_aboutMe__UjygN\",\"editMode\":\"Profile_editMode__71+RX\",\"informationUser\":\"Profile_informationUser__7qzE9\",\"buttonFollow\":\"Profile_buttonFollow__w3i6m\",\"buttonUnfollow\":\"Profile_buttonUnfollow__wXenc\",\"buttonEditInfo\":\"Profile_buttonEditInfo__iPGTb\",\"profilePost\":\"Profile_profilePost__xVBaE\",\"statusEditImg\":\"Profile_statusEditImg__xboN9\"};","import s from './../Profile.module.css';\r\nimport React, {ChangeEvent, FC, useEffect, useState} from 'react';\r\nimport {useAppDispatch} from \"../../../Redux/reduxStore\";\r\nimport {putStatusThunkCreator} from \"../../../Redux/reducers/profile_reducer\";\r\nimport {Box, TextField, Typography} from \"@mui/material\";\r\nimport ModeEditIcon from '@mui/icons-material/ModeEdit';\r\n\r\ntype PropsType = {\r\n    status: string\r\n    isOwner: boolean\r\n    ownerId: number\r\n    userId: number\r\n}\r\n\r\nexport const ProfileStatus: FC<PropsType> = (props) => {\r\n    const dispatch = useAppDispatch()\r\n    let [editMode, setEditMode] = useState(false)\r\n\r\n    let activeStatusInput = () => setEditMode(!props.isOwner)\r\n\r\n    let deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        if (status !== props.status) {\r\n            dispatch(putStatusThunkCreator(status))\r\n        }\r\n    }\r\n\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    let onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setStatus(e.currentTarget.value)\r\n    };\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status]);\r\n\r\n    useEffect(() => {\r\n        console.log(props.ownerId === props.userId)\r\n    }, [props.userId])\r\n    return (\r\n        <Box>  {\r\n            !editMode && <Box display={'flex'}\r\n                              flexDirection={'row'}\r\n                              alignItems='center'\r\n                              m={'0 auto'}\r\n                              justifyContent={'center'}\r\n            >\r\n                <Typography\r\n                    variant={'subtitle1'}\r\n                    color={'#D0D3D4'}\r\n\r\n                >{props.status || ''}</Typography>\r\n\r\n                <span onClick={activeStatusInput}>{(props.ownerId === props.userId) &&\r\n                    <ModeEditIcon color={'info'} sx={{ml: '10px'}}/>}</span>\r\n            </Box>\r\n        }\r\n            <Box display={'flex'} justifyContent={'center'} margin={'auto'}>{editMode &&\r\n                    <TextField\r\n                        id=\"status\"\r\n                        label=\"Status\"\r\n                        variant=\"standard\"\r\n                        onChange={onStatusChange}\r\n                        autoFocus={true}\r\n                        value={status}\r\n                        onBlur={deactivateEditMode}\r\n                        color={'info'}\r\n                        fullWidth={true}\r\n                        sx={{m: '0 20px', maxWidth: '300px'}}\r\n                    />\r\n            }\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\n/*\r\nexport class ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activeStatusInput = () => {\r\n        this.setState(\r\n            {editMode: true}\r\n        )\r\n    }\r\n\r\n    deactivateEditMode = () => {\r\n        this.setState(\r\n            {editMode: false}\r\n        );\r\n        this.props.putStatusThunkCreator(this.state.status)\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        });\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div>  {\r\n                !this.state.editMode &&\r\n                <div>\r\n                    <span onDoubleClick={this.activeStatusInput} >{this.props.status || 'status'}</span>\r\n                </div>\r\n            }\r\n                { this.state.editMode &&\r\n                <div>\r\n                    <input\r\n                        onChange={this.onStatusChange}\r\n                        autoFocus={true}\r\n                        onBlur={this.deactivateEditMode}\r\n                        value={this.state.status}/>\r\n                </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}*/\r\n","import React, {FC, useEffect, useState} from 'react';\r\nimport s from './../Profile.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport {ProfileStatus} from \"./ProfileStatus\";\r\nimport {ProfileType} from \"../../../Redux/reducers/profile_reducer\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport profile from \"../Profile\";\r\nimport {useAppSelector} from \"../../../Redux/reduxStore\";\r\nimport {getOwnerId} from \"../../../Redux/selectors/auth_selectors\";\r\nimport {Box, Button, Card, CardMedia, TextField, Typography} from \"@mui/material\";\r\nimport PersonAddIcon from '@mui/icons-material/PersonAdd';\r\nimport PersonRemoveIcon from '@mui/icons-material/PersonRemove';\r\nimport RateReviewIcon from '@mui/icons-material/RateReview';\r\n\r\ntype PropsType = {\r\n    profile: ProfileType\r\n    status: string\r\n    isOwner: boolean\r\n    follow: boolean\r\n    onFollowProfileChange: (userId: number, follow: boolean) => void\r\n    onPutDialogOnProfileChange: (userId: number) => void\r\n}\r\n\r\nconst ProfileInfo: FC<PropsType> = (props) => {\r\n    const ownerId = useAppSelector(getOwnerId)\r\n    const defaultPhoto = useAppSelector(state => state.auth.defaultPhoto)\r\n    let [showFullPhoto, setShowFullPhoto] = useState(false)\r\n\r\n    useEffect(() => {\r\n        setShowFullPhoto(false)\r\n    }, [props.profile.userId])\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n    return <Card sx={{\r\n        display: 'flex',\r\n        borderRadius: '5px',\r\n        flexDirection: {xs: 'column', sm: 'row'},\r\n        background: 'rgba(0, 0, 0, 0)',\r\n        gap: 1,\r\n        flexGrow: 1\r\n    }}><Box display={'flex'} flexDirection={'column'}>\r\n        <CardMedia component='img'\r\n                   image={props.profile.photos.large ? props.profile.photos.large : defaultPhoto}\r\n                   sx={{width: '300px', height: '300px',\r\n                   borderRadius: '5px', m: 'auto'\r\n                   }}\r\n        />\r\n        <Box display={'flex'}\r\n             flexDirection={'row'}\r\n             m={'5px auto'} width={'300px'}\r\n             gap={'5px'}\r\n\r\n        >{(ownerId !== props.profile.userId) && props.isOwner &&\r\n            <Button\r\n                color={props.follow ? 'info' : 'warning'}\r\n                variant={props.follow ? 'outlined' : 'contained'}\r\n                onClick={() => {\r\n                    props.onFollowProfileChange(props.profile.userId, props.follow)\r\n                }}>{props.follow ? <PersonRemoveIcon /> : <PersonAddIcon />}</Button>}\r\n\r\n            {(ownerId !== props.profile.userId) && props.isOwner &&\r\n                <Button\r\n                    color={'info'}\r\n                    variant={'contained'}\r\n                    startIcon={<RateReviewIcon />}\r\n                    fullWidth={true}\r\n                    onClick={() => {\r\n                    props.onPutDialogOnProfileChange(props.profile.userId)\r\n                }}>Write new message</Button>}\r\n        </Box>\r\n    </Box>\r\n        <Box display='flex' flexDirection='column'\r\n             sx={{flexGrow: 1}} width={'100%'} >\r\n            <Typography color='#D0D3D4'\r\n                        sx={{m: '10px auto'}}\r\n                        variant={'h5'}\r\n            >\r\n                {props.profile.fullName}\r\n            </Typography>\r\n                <ProfileStatus status={props.status} isOwner={props.isOwner} ownerId={ownerId}\r\n                               userId={props.profile.userId}/>\r\n\r\n                <Information\r\n                    profile={props.profile}\r\n                    isOwner={props.isOwner}\r\n                />\r\n        </Box>\r\n    </Card>\r\n}\r\n\r\nconst Contact: FC<{ contactTitle: string, contactValue: string }> = ({contactTitle, contactValue}) => {\r\n    return <Typography>\r\n        <b>{contactTitle}:</b> {contactValue}\r\n    </Typography>\r\n}\r\n\r\ntype InfoProps = {\r\n    profile: any\r\n    isOwner: boolean\r\n}\r\n\r\nconst Information: FC<InfoProps> = ({profile, isOwner}) => {\r\n    return <Box color={'#D0D3D4'}>\r\n        <div>\r\n            <div>\r\n                <div><b>looking for a job:</b> {profile.lookingForAJob ? \" yes\" : ' no'}</div>\r\n                {profile.lookingForAJob &&\r\n                    <div><b>looking for a job description:</b> {profile.lookingForAJobDescription}</div>}\r\n            </div>\r\n            <div className={s.aboutMe}><b>About me:</b> {profile.aboutMe}</div>\r\n        </div>\r\n        <div className={s.contacts}>{Object.keys(profile.contacts).filter(i =>\r\n            profile.contacts[i]).map(i => {\r\n            return <Contact key={i} contactTitle={i} contactValue={profile.contacts[i]}/>\r\n        })}</div>\r\n    </Box>\r\n}\r\n\r\nexport default ProfileInfo","import React, {FC} from 'react';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer'\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport {postsType, ProfileType} from \"../../Redux/reducers/profile_reducer\";\r\nimport s from \"./Profile.module.css\"\r\nimport { Box } from '@mui/material';\r\n\r\ntype PropsType = {\r\n    profile: ProfileType\r\n    status: string\r\n    isOwner: boolean\r\n    follow: boolean\r\n    onFollowProfileChange: (userId: number, follow: boolean) => void\r\n    onPutDialogOnProfileChange: (userId: number) => void\r\n}\r\n\r\n\r\n\r\nconst Profile: FC<PropsType> = (props) => {\r\n    return <Box display={'flex'} flexGrow={1} flexDirection={'column'}>\r\n        <ProfileInfo\r\n                     isOwner={props.isOwner}\r\n                     profile={props.profile}\r\n                     status={props.status}\r\n                     follow={props.follow}\r\n                     onFollowProfileChange={props.onFollowProfileChange}\r\n                     onPutDialogOnProfileChange={props.onPutDialogOnProfileChange}\r\n        />\r\n\r\n        <MyPostsContainer />\r\n    </Box>\r\n}\r\n\r\nexport default Profile","import React, {FC, useEffect} from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    getStatusThunkCreator,\r\n    putStatusThunkCreator,\r\n    setUserProfile,\r\n    userProfileThunkCreator,\r\n    savePhotoTC,\r\n    getFollowThunkCreator,\r\n    onFollowProfileChangeThunkCreator,\r\n} from \"../../Redux/reducers/profile_reducer\";\r\nimport {RootState, useAppDispatch, useAppSelector} from \"../../Redux/reduxStore\";\r\nimport {\r\n    useLocation,\r\n    useNavigate,\r\n    useParams,\r\n} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthNavigate} from \"../hoc/witAuthNavigate\";\r\nimport {getSubscriptionsThunkCreator} from \"../../Redux/reducers/subscriptions_reducers\";\r\nimport {putDialogUserThunkCreator} from \"../../Redux/reducers/dialogs_reducer\";\r\nimport {getFollow, getProfile, getStatusProfile} from \"../../Redux/selectors/profile_selectors\";\r\nimport {getOwnerId} from \"../../Redux/selectors/auth_selectors\";\r\n\r\n/*function withRouter(Component: FC) {\r\n    function ComponentWithRouterProp(props: any) {\r\n        let location = useLocation();\r\n        let navigate = useNavigate();\r\n        let params = useParams();\r\n        return (\r\n            <Component\r\n                {...props}\r\n                router={{ location, navigate, params }}\r\n            />\r\n        );\r\n    }\r\n\r\n    return ComponentWithRouterProp;\r\n}\r\n\r\ntype PropsType = {\r\n    router: any\r\n}*/\r\n\r\nconst ProfileContainer = () => {\r\n    let { userId }= useParams<{ userId: string | undefined}>()\r\n    let id: number = Number(userId)\r\n    console.log(useParams())\r\n    const dispatch = useAppDispatch()\r\n    const profile = useAppSelector(getProfile)\r\n    const status = useAppSelector(getStatusProfile)\r\n    const follow = useAppSelector(getFollow)\r\n    const authorizedUserId = useAppSelector((getOwnerId))\r\n\r\n    const navigate = useNavigate()\r\n\r\n    console.log(userId)\r\n    useEffect(() => {\r\n        if (!id) {id = authorizedUserId}\r\n        dispatch(userProfileThunkCreator(id))\r\n        dispatch(getStatusThunkCreator(id))\r\n        dispatch(getFollowThunkCreator(id))\r\n    }, [userId])\r\n\r\n    useEffect(() => {\r\n\r\n    }, [])\r\n\r\n    let onFollowProfileChange = (userId: number, follow: boolean) => {\r\n        dispatch(onFollowProfileChangeThunkCreator(userId, follow))\r\n        dispatch(getSubscriptionsThunkCreator(true))\r\n    }\r\n\r\n    let onPutDialogOnProfileChange = (userId: number) => {\r\n        navigate(`/dialogs/${userId}`)\r\n        dispatch(putDialogUserThunkCreator(userId))\r\n    }\r\n\r\n        return <Profile\r\n                        isOwner={!!userId}\r\n                        profile={profile}\r\n                        status={status}\r\n                        follow={follow}\r\n                        onFollowProfileChange={onFollowProfileChange}\r\n                        onPutDialogOnProfileChange={onPutDialogOnProfileChange}\r\n        />\r\n\r\n}\r\n\r\nexport default withAuthNavigate(ProfileContainer)","import React, {FC} from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {Navigate} from 'react-router-dom';\r\nimport {RootState} from \"../../Redux/reduxStore\";\r\n\r\nlet mapStateToProps = (state: RootState) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\nexport const withAuthNavigate = (Component: FC<any>) => {\r\n\r\n    class NavigateComponent extends React.Component<{isAuth: boolean}> {\r\n        render() {\r\n            if (!this.props.isAuth) {\r\n                return <Navigate to={'/login'}/>\r\n            }\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectWithAuthNavigate = connect(mapStateToProps)(NavigateComponent)\r\n\r\n    return ConnectWithAuthNavigate\r\n}\r\n"],"names":["getProfile","state","profile","getStatusProfile","status","getFollow","follow","props","_useState","useState","ownerLike","_useState2","_slicedToArray","likeActive","setLikeActive","_useState3","likeCount","_useState4","setLikeCount","dispatch","useAppDispatch","useEffect","console","log","_jsxs","Card","children","_jsx","className","s","src","message","process","onClick","setLikePostActionCreator","id","alt","MyPostsForm","React","Formik","initialValues","newPost","validateOnBlur","onSubmit","values","_ref","resetForm","createNewPost","undefined","_ref2","handleBlur","handleChange","handleSubmit","isValid","dirty","Box","display","flexDirection","width","maxWidth","m","sx","flexGrow","mb","TextField","type","name","onChange","value","onBlur","color","label","variant","fullWidth","border","input","InputLabelProps","Button","disabled","postElements","posts","map","p","Post","mt","connect","newPostText","AddPostActionCreator","MyPosts","ProfileStatus","editMode","setEditMode","setStatus","ownerId","userId","alignItems","justifyContent","Typography","isOwner","ModeEditIcon","ml","margin","e","currentTarget","autoFocus","putStatusThunkCreator","Contact","contactTitle","contactValue","Information","lookingForAJob","lookingForAJobDescription","aboutMe","Object","keys","contacts","filter","i","useAppSelector","getOwnerId","defaultPhoto","auth","setShowFullPhoto","borderRadius","xs","sm","background","gap","CardMedia","component","image","photos","large","height","onFollowProfileChange","PersonRemoveIcon","PersonAddIcon","startIcon","RateReviewIcon","onPutDialogOnProfileChange","fullName","Preloader","ProfileInfo","MyPostsContainer","withAuthNavigate","useParams","Number","authorizedUserId","navigate","useNavigate","userProfileThunkCreator","getStatusThunkCreator","getFollowThunkCreator","Profile","onFollowProfileChangeThunkCreator","getSubscriptionsThunkCreator","concat","putDialogUserThunkCreator","mapStateToProps","isAuth","Component","NavigateComponent","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","this","_objectSpread","Navigate","to"],"sourceRoot":""}
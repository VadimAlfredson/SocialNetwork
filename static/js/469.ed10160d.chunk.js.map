{"version":3,"file":"static/js/469.ed10160d.chunk.js","mappings":"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","sources":["Redux/selectors/profile_selectors.ts","webpack://react-vadim/./src/components/Setting/Setting.module.css?cb72","components/Setting/formProfileInfo.tsx","components/Setting/Setting.tsx","components/Setting/SettingContainer.tsx","components/hoc/witAuthNavigate.tsx"],"sourcesContent":["import {RootState} from \"../reduxStore\";\r\n\r\nexport const getProfile = (state: RootState) => {\r\n    return state.profile.profile\r\n}\r\nexport const getPosts = (state: RootState) => {\r\n    return state.profile.posts\r\n}\r\nexport const getNewPostText = (state: RootState) => {\r\n    return state.profile.newPostText\r\n}\r\nexport const getStatusProfile = (state: RootState) => {\r\n    return state.profile.status\r\n}\r\nexport const getFollow = (state: RootState) => {\r\n    return state.profile.follow\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"profileInfoForm\":\"Setting_profileInfoForm__0zC+k\",\"itemFormInput\":\"Setting_itemFormInput__T1BVl\",\"inputUploadPhoto\":\"Setting_inputUploadPhoto__p3uZS\",\"blockUploadPhoto\":\"Setting_blockUploadPhoto__522c0\",\"textUploadPhoto\":\"Setting_textUploadPhoto__8gA17\"};","import React, {FC, useEffect, useState} from \"react\";\r\nimport {Field, Formik, FormikProps} from \"formik\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    ProfileThunkCreator,\r\n    userProfileThunkCreator,\r\n} from \"../../Redux/reducers/profile_reducer\";\r\nimport s from \"./Setting.module.css\"\r\nimport {RootState, useAppDispatch, useAppSelector} from \"../../Redux/reduxStore\";\r\nimport {getProfile} from \"../../Redux/selectors/profile_selectors\";\r\n\r\n\r\nconst ProfileInfoForm: React.FC<{}> = () => {\r\n    const profile = useAppSelector(getProfile)\r\n    const dispatch = useAppDispatch()\r\n    let [disabledSave, setDisabledSave] = useState(true)\r\n\r\n\r\n    /*const validationSchema = yup.object().shape({\r\n        email: yup.string().typeError('Incorrect email').required('required to fill out')\r\n    })*/\r\n\r\n    return <Formik\r\n        enableReinitialize={true}\r\n        initialValues={{\r\n            fullName: profile.fullName,\r\n            lookingForAJob: profile.lookingForAJob,\r\n            lookingForAJobDescription: profile.lookingForAJobDescription,\r\n            aboutMe: profile.aboutMe,\r\n            contacts: profile.contacts,\r\n        }}\r\n        validateOnBlur\r\n        onSubmit={(values => {\r\n            dispatch(ProfileThunkCreator(values))\r\n        })}\r\n        /*validationSchema={validationSchema}*/\r\n    >\r\n        {({\r\n              enableReinitialize,\r\n              values,\r\n              errors,\r\n              touched,\r\n              handleBlur,\r\n              handleChange,\r\n              isValid,\r\n              handleSubmit,\r\n              dirty\r\n          }) => (\r\n            <div>\r\n                <input\r\n                    className={s.itemFormInput}\r\n                    type={'text'}\r\n                    name={'fullName'}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    disabled={true}\r\n                    value={values.fullName || profile.fullName || ''}\r\n                /><br/>\r\n                <b>Looking for a job:</b>\r\n                <input\r\n                    type={'checkbox'}\r\n                    name={'lookingForAJob'}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    value={values.lookingForAJob ? [\"lookingForAJob\"] : []}\r\n                /><br/>\r\n                <b>Looking for a job description:</b>\r\n                <input\r\n                    className={s.itemFormInput}\r\n                    type={'text'}\r\n                    name={'lookingForAJobDescription'}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    value={values.lookingForAJobDescription || ''}\r\n                    disabled={!values.lookingForAJob}\r\n                /><br/>\r\n                <b>About Me:</b>\r\n                <input\r\n                    className={s.itemFormInput}\r\n                    type={'text'}\r\n                    name={'aboutMe'}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    value={values.aboutMe || ''}\r\n                /><br/>\r\n                <b>contacts:</b><br/>\r\n                <b>github:</b><input\r\n                className={s.itemFormInput}\r\n                type={'text'}\r\n                name={'contacts.github'}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                value={values.contacts.github || ''}\r\n            /><br/>\r\n                <b>vk:</b><input\r\n                className={s.itemFormInput}\r\n                type={'text'}\r\n                name={'contacts.vk'}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                value={values.contacts.vk || ''}\r\n            /><br/>\r\n                <b>facebook:</b><input\r\n                className={s.itemFormInput}\r\n                type={'text'}\r\n                name={'contacts.facebook'}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                value={values.contacts.facebook || ''}\r\n            /><br/>\r\n                <b>instagram:</b><input\r\n                className={s.itemFormInput}\r\n                type={'text'}\r\n                name={'contacts.instagram'}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                value={values.contacts.instagram || ''}\r\n            /><br/>\r\n                <b>twitter:</b><input\r\n                className={s.itemFormInput}\r\n                type={'text'}\r\n                name={'contacts.twitter'}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                value={values.contacts.twitter || ''}\r\n            /><br/>\r\n                <b>website:</b><input\r\n                className={s.itemFormInput}\r\n                type={'text'}\r\n                name={'contacts.website'}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                value={values.contacts.website || ''}\r\n            /><br/>\r\n                <b>youtube:</b><input\r\n                className={s.itemFormInput}\r\n                type={'text'}\r\n                name={'contacts.youtube'}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                value={values.contacts.youtube || ''}\r\n            /><br/>\r\n                <b>mainLink:</b><input\r\n                className={s.itemFormInput}\r\n                type={'text'}\r\n                name={'contacts.mainLink'}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                value={values.contacts.mainLink || ''}\r\n            /><br/>\r\n                <button\r\n                    disabled={!dirty}\r\n                    onClick={() => {\r\n                        handleSubmit()\r\n                    }}\r\n                    type={'submit'}\r\n                >Save\r\n                </button>\r\n            </div>\r\n        )}\r\n    </Formik>\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({})\r\n\r\nexport default connect(mapStateToProps, {ProfileThunkCreator, userProfileThunkCreator})(ProfileInfoForm)","import React from \"react\";\r\nimport s from './Setting.module.css';\r\nimport ProfileInfoForm from \"./formProfileInfo\";\r\nimport {useAppDispatch, useAppSelector} from \"../../Redux/reduxStore\";\r\nimport {savePhotoTC} from \"../../Redux/reducers/profile_reducer\";\r\nimport {getProfile} from \"../../Redux/selectors/profile_selectors\";\r\n\r\ntype PropsType = {\r\n    defaultPhoto: string\r\n}\r\nconst Setting = (props: PropsType) => {\r\n    const dispatch = useAppDispatch()\r\n    const profile =  useAppSelector(getProfile)\r\n    const onMainPhotoSelected = (e: any) => {\r\n        if (e.target.files.length) {\r\n            dispatch(savePhotoTC(e.target.files[0]))\r\n        }\r\n    }\r\n    return (<div className={s.profileInfoForm}>\r\n            <h3>Profile setting</h3>\r\n        <div>\r\n            <label className={s.blockUploadPhoto}>\r\n                <a className={s.textUploadPhoto}>Upload photo</a>\r\n            <img  src={profile.photos.large || props.defaultPhoto} alt={'avatar'}/>\r\n            <input type={\"file\"} onChange={onMainPhotoSelected} className={s.inputUploadPhoto}/>\r\n            </label>\r\n        </div>\r\n        <div>\r\n            <ProfileInfoForm />\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Setting","import React, {FC, useEffect} from \"react\";\r\nimport Setting from \"./Setting\";\r\nimport { connect } from \"react-redux\";\r\nimport {RootState, useAppDispatch, useAppSelector} from \"../../Redux/reduxStore\";\r\nimport {savePhotoTC, userProfileThunkCreator} from \"../../Redux/reducers/profile_reducer\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthNavigate} from \"../hoc/witAuthNavigate\";\r\nimport {getDefaultPhoto, getOwnerId} from \"../../Redux/selectors/auth_selectors\";\r\nimport {getProfile} from \"../../Redux/selectors/profile_selectors\";\r\n\r\nconst SettingContainer: FC<{}> = () => {\r\n    const dispatch = useAppDispatch()\r\n    const ownerId = useAppSelector(getOwnerId)\r\n    const profile = useAppSelector(getProfile)\r\n    const defaultPhoto = useAppSelector(getDefaultPhoto)\r\n    useEffect(() => {\r\n        (ownerId !== profile.userId) && dispatch(userProfileThunkCreator(ownerId))\r\n    }, [])\r\n    return (\r\n        <Setting defaultPhoto={defaultPhoto}/>\r\n    )\r\n}\r\n\r\n\r\nexport default compose(withAuthNavigate)(SettingContainer)","import React, {FC} from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {Navigate} from 'react-router-dom';\r\nimport {RootState} from \"../../Redux/reduxStore\";\r\n\r\nlet mapStateToProps = (state: RootState) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\nexport const withAuthNavigate = (Component: FC<any>) => {\r\n\r\n    class NavigateComponent extends React.Component<{isAuth: boolean}> {\r\n        render() {\r\n            if (!this.props.isAuth) {\r\n                return <Navigate to={'/login'}/>\r\n            }\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectWithAuthNavigate = connect(mapStateToProps)(NavigateComponent)\r\n\r\n    return ConnectWithAuthNavigate\r\n}\r\n"],"names":["getProfile","state","profile","getStatusProfile","status","getFollow","follow","connect","ProfileThunkCreator","userProfileThunkCreator","useAppSelector","dispatch","useAppDispatch","_useState","useState","_useState2","_slicedToArray","_jsx","Formik","enableReinitialize","initialValues","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contacts","validateOnBlur","onSubmit","values","children","_ref","handleBlur","errors","touched","handleChange","handleSubmit","isValid","dirty","_jsxs","className","s","type","name","onChange","onBlur","disabled","value","github","vk","facebook","instagram","twitter","website","youtube","mainLink","onClick","props","src","photos","large","defaultPhoto","alt","e","target","files","length","savePhotoTC","ProfileInfoForm","compose","withAuthNavigate","ownerId","getOwnerId","getDefaultPhoto","useEffect","userId","Setting","mapStateToProps","isAuth","auth","Component","NavigateComponent","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","this","_objectSpread","Navigate","to","React"],"sourceRoot":""}
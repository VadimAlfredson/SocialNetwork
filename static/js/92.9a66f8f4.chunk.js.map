{"version":3,"file":"static/js/92.9a66f8f4.chunk.js","mappings":"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","sources":["webpack://react-vadim/./src/components/Users/users.module.css?9211","webpack://react-vadim/./src/components/common/Paginator/paginator.module.css?28dc","components/common/Paginator/Paginator.tsx","components/Users/formSearchUsers.tsx","components/Users/Users.tsx","components/Users/UsersContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"usersComponent\":\"users_usersComponent__8nRZo\",\"itemUser\":\"users_itemUser__x5owb\",\"avatar\":\"users_avatar__erVMZ\",\"infoUser\":\"users_infoUser__y2HtR\",\"followButton\":\"users_followButton__ExoVv\",\"massageButton\":\"users_massageButton__-K1Un\",\"buttonStyle\":\"users_buttonStyle__jG05x\",\"nameUser\":\"users_nameUser__9hBV1\",\"statusUser\":\"users_statusUser__F2WyE\",\"navLinkToLogin\":\"users_navLinkToLogin__wH+jC\",\"formSearchBlock\":\"users_formSearchBlock__2WRRL\",\"searchInput\":\"users_searchInput__2r7sY\",\"searchButton\":\"users_searchButton__ZGCpm\",\"searchCheckbox\":\"users_searchCheckbox__LqUAR\",\"searchText\":\"users_searchText__DnfT0\"};","// extracted by mini-css-extract-plugin\nexport default {\"activePage\":\"paginator_activePage__eWc4N\",\"paginator\":\"paginator_paginator__QVHI9\",\"pageNumber\":\"paginator_pageNumber__7A1XW\"};","import React, {FC, useState} from \"react\";\r\nimport s from \"../Paginator/paginator.module.css\"\r\n\r\ntype PropsType = {\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onPageChange: (p: number, pageSize: number, term: string, friend?: boolean) => void\r\n    term: string\r\n    friend: boolean\r\n}\r\n\r\n/*let Paginator: FC<PropsType> = (props) => {\r\n    let pageCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pageCount; i++) {\r\n        pages.push(i)\r\n    }\r\n    ;\r\n    let portionSize = 5\r\n    let portionCount = Math.ceil(pageCount / portionSize)\r\n    let [portionNumber, setPortionNumber] = useState(1)\r\n    let leftPortionNumber = (portionNumber - 1) * portionSize + 1\r\n    let rightPortionNumber = portionNumber * portionSize\r\n    return (\r\n            <div className={s.paginator}>\r\n                {portionNumber > 1 &&\r\n                <button className={s.pageNumber} onClick={() => {setPortionNumber(portionNumber - 1)}}>left</button>\r\n                }\r\n                {pages\r\n                    .filter(p => p >= leftPortionNumber && p <= rightPortionNumber)\r\n                    .map(p => {\r\n                        // @ts-ignore\r\n                        return <span className={props.currentPage === p ? s.activePage : s.pageNumber}\r\n                                     onClick={() => {\r\n                                         if (props.friend) {\r\n                                         props.onPageChange(p, props.pageSize, props.term, props.friend)}\r\n                                         else {props.onPageChange(p, props.pageSize, props.term)}\r\n                                     }} key={p}\r\n                        >{p}</span>\r\n                    }\r\n                )} ...\r\n                {portionCount > portionNumber &&\r\n                    pages\r\n                        .filter(p => p === pageCount)\r\n                        .map(p => {\r\n                            // @ts-ignore\r\n                            return <span className={props.currentPage === p ? s.activePage : s.pageNumber}\r\n                                         onClick={() => {\r\n                                             props.onPageChange(p, props.pageSize, props.term)\r\n                                         }} key={p}\r\n                            >{p}</span>\r\n                        }\r\n                        )}\r\n                {portionCount > portionNumber &&\r\n                <button className={s.pageNumber}\r\n                onClick={() => {setPortionNumber(portionNumber + 1)}}\r\n                >right</button>\r\n                }\r\n            </div>\r\n    )\r\n};*/\r\n\r\n\r\nlet Paginator: FC<PropsType> = (props) => {\r\n    let pageCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pageCount; i++) {\r\n        pages.push(i)\r\n    }\r\n    ;\r\n    let portionSize = 5\r\n    let portionCount = Math.ceil(pageCount / portionSize)\r\n    let [portionNumber, setPortionNumber] = useState(1)\r\n    let leftPortionNumber = (portionNumber - 1) * portionSize + 1\r\n    let rightPortionNumber = portionNumber * portionSize\r\n    return (\r\n        <div className={s.paginator}>\r\n            {portionNumber > 1 &&\r\n                pages\r\n                    .filter(p => p === 1)\r\n                    .map(p => {\r\n                            // @ts-ignore\r\n                            return <span className={props.currentPage === p ? s.activePage : s.pageNumber}\r\n                                         onClick={() => {\r\n                                             props.onPageChange(p, props.pageSize, props.term)\r\n                                         }} key={p}\r\n                            >{p}</span>\r\n                        }\r\n                    )\r\n            }\r\n            {portionNumber > 1 &&\r\n                <button className={s.pageNumber} onClick={() => {setPortionNumber(portionNumber - 1)}}>-5</button>\r\n            }\r\n            {pages\r\n                .filter(p => p >= leftPortionNumber && p <= rightPortionNumber)\r\n                .map(p => {\r\n                        // @ts-ignore\r\n                        return <span className={props.currentPage === p ? s.activePage : s.pageNumber}\r\n                                     onClick={() => {\r\n                                         if (props.friend) {\r\n                                             props.onPageChange(p, props.pageSize, props.term, props.friend)}\r\n                                         else {props.onPageChange(p, props.pageSize, props.term)}\r\n                                     }} key={p}\r\n                        >{p}</span>\r\n                    }\r\n                )}\r\n\r\n            {portionCount > portionNumber &&\r\n                <button className={s.pageNumber}\r\n                        onClick={() => {setPortionNumber(portionNumber + 1)}}\r\n                >+5</button>\r\n            }\r\n            {portionCount > portionNumber &&\r\n                pages\r\n                    .filter(p => p === pageCount)\r\n                    .map(p => {\r\n                            // @ts-ignore\r\n                            return <span className={props.currentPage === p ? s.activePage : s.pageNumber}\r\n                                         onClick={() => {\r\n                                             props.onPageChange(p, props.pageSize, props.term)\r\n                                         }} key={p}\r\n                            >{p}</span>\r\n                        }\r\n                    )}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Paginator","import React, {FC, useEffect, useState} from \"react\";\r\nimport {Formik} from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport s from './users.module.css';\r\n\r\ntype PropsType = {\r\n    onUsersChange: (pageNumber: number, pageSize: number, term: string, friends: boolean) => void\r\n    pageSize: number\r\n}\r\n\r\nconst FormSearchUsers: FC<PropsType> = (props) => {\r\n    const validationSchema = yup.object().shape({\r\n        search: yup.string(),\r\n    })\r\n\r\n    return <Formik\r\n        initialValues={{\r\n            search: '',\r\n            subscriptionsCheckbox: false,\r\n        }}\r\n        validateOnBlur\r\n        onSubmit={(values => {\r\n            console.log(values)\r\n            props.onUsersChange(1, props.pageSize, values.search, values.subscriptionsCheckbox)\r\n        })}\r\n        validationSchema={validationSchema}\r\n    >\r\n        {({\r\n              values,\r\n              errors,\r\n              touched,\r\n              handleBlur,\r\n              handleChange,\r\n              isValid,\r\n              handleSubmit,\r\n              dirty\r\n          }) => (\r\n            <div className={s.formSearchBlock}>\r\n                <input\r\n                    className={s.searchInput}\r\n                    type={'text'}\r\n                    name={'search'}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    value={values.search}\r\n                    placeholder={'text'}\r\n                />\r\n                <button\r\n                    className={s.searchButton}\r\n                    /*disabled={!isValid}*/\r\n                    onClick={() => {\r\n                        handleSubmit()\r\n                    }}\r\n                    type={'submit'}\r\n                >Search\r\n                </button>\r\n                <div className={s.searchCheckbox}>\r\n                    <div className={''}>\r\n                        <input\r\n                            type={'checkbox'}\r\n                            name={'subscriptionsCheckbox'}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className={s.searchText}>Only subscriptions</div>\r\n            </div>\r\n        )}\r\n    </Formik>\r\n};\r\n\r\nexport default FormSearchUsers\r\n","import React, {FC, useEffect, useState} from \"react\";\r\nimport {UserType} from \"../../Redux/users_reducers\";\r\nimport s from \"../Users/users.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {putDialogUserThunkCreator} from \"../../Redux/dialogs_reducer\";\r\nimport FormSearchUsers from \"./formSearchUsers\";\r\n\r\ntype PropsType = {\r\n    users: Array<UserType>\r\n    totalUsersCount: number\r\n    followingInProgress: Array<number>\r\n    pageSize: number\r\n    currentPage: number\r\n    onUsersChange: (pageNumber: number, pageSize: number, term: string, friend?: boolean) => void\r\n    onFollowChange: (id: number, followed: boolean) => void\r\n    isFetching: boolean\r\n    isAuth: boolean\r\n    onDialogUserChange: (userId: number) => void\r\n    term: string\r\n    friend: boolean\r\n}\r\n\r\nlet Users: FC<PropsType> = (props) => {\r\n    const [state, setState] = useState(false)\r\n    useEffect(() => {\r\n        state != props.isAuth ? setState(props.isAuth) : console.log('useEffect')\r\n    }, [props.isAuth])\r\n    return (\r\n        <div className={s.usersComponent}>\r\n            <Paginator\r\n                totalUsersCount={props.totalUsersCount}\r\n                pageSize={props.pageSize}\r\n                currentPage={props.currentPage}\r\n                onPageChange={props.onUsersChange}\r\n                term={props.term}\r\n                friend={props.friend}\r\n            />\r\n            <FormSearchUsers\r\n                onUsersChange={props.onUsersChange}\r\n                pageSize={props.pageSize}\r\n            />\r\n            {props.isFetching ? <Preloader/> :\r\n                <div>\r\n                    {\r\n                        props.users.map((u: UserType) => <div className={s.itemUser} key={u.id}>\r\n                            <div className={s.avatar}>\r\n                                <NavLink to={'/profile/' + u.id}>\r\n                                    <img src={u.photos.small !== null ? u.photos.small :\r\n                                        'https://shapka-youtube.ru/wp-content/uploads/2021/02/avatarka-dlya-skaypa-dlya-parney.jpg'\r\n                                    } alt={'картинка'}/>\r\n                                </NavLink>\r\n                            </div>\r\n                            <div className={s.followButton}>\r\n                                {props.isAuth ?\r\n                                    <button className={s.buttonStyle}\r\n                                            disabled={props.followingInProgress.includes(u.id)}\r\n                                            onClick={() => (props.onFollowChange(u.id, u.followed))\r\n                                            }>{u.followed ? 'Unfollow' : 'Follow'}\r\n                                    </button> : <NavLink className={s.navLinkToLogin} to={\"../login\"}>\r\n                                        Register to subscribe\r\n                                    </NavLink>}\r\n                            </div>\r\n                            <div className={s.massageButton}>\r\n                                {props.isAuth &&\r\n                                    <button className={s.buttonStyle}\r\n                                            onClick={() => {\r\n                                                props.onDialogUserChange(u.id)\r\n                                            }}>Message\r\n                                    </button>}\r\n                            </div>\r\n\r\n                            <div className={s.infoUser}>\r\n                                <div className={s.nameUser}>{u.name}</div>\r\n                                <div className={s.statusUser}>{u.status}</div>\r\n                            </div>\r\n                        </div>)}\r\n                </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Users from \"./Users\";\r\nimport {AddStateType} from \"../../Redux/reduxStore\";\r\nimport {\r\n    followed,\r\n    setCurrentPage,\r\n    toggleIsFetching,\r\n    setTotalUsersCount,\r\n    setUsers,\r\n    toggleIsFollowing,\r\n    getUsersThunkCreator,\r\n    onChangeUsersThunkCreator,\r\n    onFollowChangeThunkCreator, UserType,\r\n} from \"../../Redux/users_reducers\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {withAuthNavigate} from \"../hoc/witAuthNavigate\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress, getFriends, getIsAuth, getIsFetching,\r\n    getPageSize, getTerm,\r\n    getTotalUsersCount,\r\n    getUsers\r\n} from \"../../Redux/users_selectors\";\r\nimport {putDialogUserThunkCreator} from \"../../Redux/dialogs_reducer\";\r\n\r\ntype PropsType = {\r\n    currentPage: number\r\n    pageSize: number\r\n    isFetching: boolean\r\n    users: Array<UserType>\r\n    totalUsersCount: number\r\n    isAuth: boolean\r\n    term: string,\r\n    friends: boolean\r\n\r\n    getUsersThunkCreator: (currentPage: number, pageSize: number) => void\r\n    onChangeUsersThunkCreator: (pageNumber: number, pageSize: number, term: string, friend?: boolean) => void\r\n    onFollowChangeThunkCreator: (userId: number, follow: boolean) => void\r\n    followingInProgress: Array<number>\r\n    putDialogUserThunkCreator: (userId: number) => {}\r\n}\r\n\r\n\r\nclass UsersContainer extends React.Component<PropsType> {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsersThunkCreator(this.props.currentPage, this.props.pageSize)\r\n    }\r\n\r\n    onUsersChange = (pageNumber: number, pageSize: number, term: string, friend?: boolean) => {\r\n        debugger\r\n        this.props.onChangeUsersThunkCreator(pageNumber, pageSize, term, friend)\r\n    }\r\n\r\n    onFollowChange = (userId: number, follow: boolean) => {\r\n        this.props.onFollowChangeThunkCreator(userId, follow)\r\n    }\r\n\r\n    onDialogUserChange = (userId: number) => {\r\n        this.props.putDialogUserThunkCreator(userId)\r\n    }\r\n\r\n    render(): React.ReactNode {\r\n        return <>\r\n            <Users\r\n                isAuth={this.props.isAuth}\r\n                isFetching={this.props.isFetching}\r\n                users={this.props.users}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                totalUsersCount={this.props.totalUsersCount}\r\n                onUsersChange={this.onUsersChange}\r\n                onFollowChange={this.onFollowChange}\r\n                followingInProgress={this.props.followingInProgress}\r\n                onDialogUserChange={this.onDialogUserChange}\r\n                term={this.props.term}\r\n                friend={this.props.friends}\r\n            />\r\n        </>\r\n    }\r\n\r\n}\r\n\r\nlet mapStateToProps = (state: AddStateType) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n        isAuth: getIsAuth(state),\r\n        isFetching: getIsFetching(state),\r\n        term: getTerm(state),\r\n        friends: getFriends(state)\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,\r\n        {\r\n            followed,\r\n            setUsers,\r\n            setCurrentPage,\r\n            setTotalUsersCount,\r\n            toggleIsFetching,\r\n            toggleIsFollowing,\r\n            getUsersThunkCreator,\r\n            onChangeUsersThunkCreator,\r\n            onFollowChangeThunkCreator,\r\n            putDialogUserThunkCreator,\r\n        })\r\n)(UsersContainer)"],"names":["props","pageCount","Math","ceil","totalUsersCount","pageSize","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionNumber","rightPortionNumber","className","s","filter","p","map","currentPage","onClick","onPageChange","term","friend","validationSchema","yup","shape","search","initialValues","subscriptionsCheckbox","validateOnBlur","onSubmit","values","console","log","onUsersChange","handleBlur","errors","touched","handleChange","handleSubmit","isValid","dirty","type","name","onChange","onBlur","value","placeholder","state","setState","useEffect","isAuth","isFetching","Preloader","users","u","to","id","src","photos","small","alt","disabled","followingInProgress","includes","onFollowChange","followed","onDialogUserChange","status","UsersContainer","pageNumber","onChangeUsersThunkCreator","userId","follow","onFollowChangeThunkCreator","putDialogUserThunkCreator","this","getUsersThunkCreator","friends","React","compose","connect","getUsers","getPageSize","getTotalUsersCount","getCurrentPage","getFollowingInProgress","getIsAuth","getIsFetching","getTerm","getFriends","setUsers","setCurrentPage","setTotalUsersCount","toggleIsFetching","toggleIsFollowing"],"sourceRoot":""}
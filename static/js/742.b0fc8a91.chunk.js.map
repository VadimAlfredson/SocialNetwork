{"version":3,"file":"static/js/742.b0fc8a91.chunk.js","mappings":"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","sources":["webpack://react-vadim/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/MessagesItem/MessagesItem.tsx","components/Dialogs/AddMessage/AddMessageForm.tsx","components/Dialogs/AddMessage/AddMessage.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx","components/hoc/witAuthNavigate.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__GBcEp\",\"dialogsTitle\":\"Dialogs_dialogsTitle__bxfTn\",\"dialogsUsers\":\"Dialogs_dialogsUsers__LBmt6\",\"dialogDiv\":\"Dialogs_dialogDiv__uycfj\",\"dialogItem\":\"Dialogs_dialogItem__k9CuM\",\"active\":\"Dialogs_active__zK1A-\",\"titleMessages\":\"Dialogs_titleMessages__2oe-t\",\"messages\":\"Dialogs_messages__Ly6dr\",\"addMessage\":\"Dialogs_addMessage__+SI4K\",\"inputAddMessage\":\"Dialogs_inputAddMessage__KTTQa\",\"buttonAddMessage\":\"Dialogs_buttonAddMessage__gnvoU\",\"divAddMessage\":\"Dialogs_divAddMessage__EcDqL\",\"iconMessage\":\"Dialogs_iconMessage__L+5-e\",\"message\":\"Dialogs_message__pyaWz\",\"divMessage\":\"Dialogs_divMessage__lpG8t\",\"messageForm\":\"Dialogs_messageForm__5uYWH\"};","import s from \"../Dialogs.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\n\r\nexport const DialogItem = (props: {id: number, name: string}) => {\r\n    return <NavLink to={\"/dialogs/\" + props.id}\r\n                 className={dialogsData => dialogsData.isActive ? s.active : s.dialogItem}><div className={s.dialogDiv}>{props.name}</div></NavLink>\r\n};","import React from \"react\";\r\nimport s from \"../Dialogs.module.css\";\r\nimport {messagesType} from \"../../../Redux/dialogs_reducer\";\r\n\r\nexport const MessagesItem = (props: {icon: string, message: string}) => {\r\n    return <div className={s.divMessage}>\r\n        <div>\r\n            <img className={s.iconMessage} src={props.icon}/>\r\n        </div>\r\n        <div className={s.messageForm}>\r\n            {props.message}\r\n        </div>\r\n    </div>\r\n}","import React from \"react\";\r\nimport {dialogsPageType} from \"../../../Redux/dialogs_reducer\";\r\nimport s from \"../Dialogs.module.css\";\r\nimport {Formik} from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\nexport const AddMessageForm = (props: {\r\n    dialogsPage: dialogsPageType,\r\n    AddMessageInDialogs: (textMessage: string) => void\r\n}) => {\r\n    const validationSchema = yup.string()\r\n    let addMessageElement = (values: string) => {\r\n        props.AddMessageInDialogs(values);\r\n    }\r\n    return <Formik\r\n        initialValues={{\r\n            textMessage: '' as string,\r\n        }}\r\n        validateOnBlur\r\n        onSubmit={(values, {resetForm}) => {\r\n            addMessageElement(values.textMessage)\r\n            console.log(values.textMessage)\r\n            resetForm({values: undefined})\r\n        }}\r\n        validationSchema={validationSchema}\r\n    >\r\n        {({\r\n            values,\r\n            handleBlur,\r\n            handleChange,\r\n            isValid,\r\n            handleSubmit,\r\n            dirty\r\n        }) => (\r\n        <div className={s.divAddMessage}>\r\n            <input\r\n                className={s.inputAddMessage}\r\n                type={'textarea'}\r\n                name={'textMessage'}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                value={values.textMessage}\r\n                placeholder={'Add new message'}\r\n            /><br/>\r\n            <button\r\n                className={s.buttonAddMessage}\r\n                disabled={!isValid && !dirty}\r\n                onClick={() => {handleSubmit()}}\r\n                type={'submit'}\r\n            >Sent\r\n            </button>\r\n        </div>\r\n    )}\r\n    </Formik>\r\n}\r\n","import React from \"react\";\r\nimport {dialogsPageType} from \"../../../Redux/dialogs_reducer\";\r\nimport s from \"../Dialogs.module.css\";\r\nimport {AddMessageForm} from \"./AddMessageForm\";\r\n\r\nexport const AddMessage = (props: {\r\n    dialogsPage: dialogsPageType,\r\n    AddMessageInDialogs: (text: string) => void\r\n    /*UpdateMessageInDialogs: (text: string) => void*/\r\n}) => {\r\n    let createMessage: React.RefObject<any> = React.createRef();\r\n    /*let onMessageChange = () => {\r\n        let text: string = createMessage.current.value;\r\n        props.UpdateMessageInDialogs(text);\r\n    };*/\r\n\r\n    return (\r\n        <AddMessageForm\r\n            dialogsPage={props.dialogsPage}\r\n            AddMessageInDialogs={props.AddMessageInDialogs}\r\n        />\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport s from './Dialogs.module.css';\r\nimport {DialogItem} from \"./DialogItem/DialogItem\";\r\nimport {MessagesItem} from \"./MessagesItem/MessagesItem\";\r\nimport {AddMessage} from \"./AddMessage/AddMessage\";\r\nimport {dialogsPageType} from \"../../Redux/dialogs_reducer\";\r\n\r\n\r\nconst Dialogs = (props: {\r\n                     dialogsPage: dialogsPageType,\r\n                     AddMessageInDialogs: () => void,\r\n                     /*UpdateMessageInDialogs: (text: string) => void,*/\r\n                     isAuth: boolean\r\n    textMessage: string\r\n                 }\r\n) => {\r\n    let dialogUsers = props.dialogsPage.dialogs.map(\r\n        d => <DialogItem name={d.name} id={d.id} key={d.id}/>\r\n    );\r\n\r\n    let messagesItem = props.dialogsPage.messages.map(\r\n        m => <MessagesItem message={m.message} icon={m.icon} key={m.id}/>\r\n    );\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsUsers}>\r\n                <div className={s.dialogsTitle}>Dialogs</div>\r\n                {dialogUsers}\r\n            </div>\r\n\r\n            <div className={s.messages}>\r\n                <div className={s.titleMessages}>Messages</div>\r\n                <div className={s.message}>\r\n                    {messagesItem}\r\n                </div>\r\n                <div className={s.addMessage}>\r\n                    <AddMessage\r\n                        AddMessageInDialogs={props.AddMessageInDialogs}\r\n                        dialogsPage={props.dialogsPage}\r\n                        /*UpdateMessageInDialogs={props.UpdateMessageInDialogs}*/\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Dialogs","import React from \"react\";\r\nimport {\r\n    AddMessageInDialogsActionCreator,\r\n    /*UpdateMessageInDialogsActionCreator*/\r\n} from \"../../Redux/dialogs_reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {AddStateType} from \"../../Redux/reduxStore\";\r\nimport {DispatchType} from \"../../Redux/Types\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthNavigate} from \"../hoc/witAuthNavigate\";\r\n\r\nlet mapStateToProps = (state: AddStateType) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch: DispatchType) => {\r\n    return {\r\n        AddMessageInDialogs: (text: string) => {\r\n            dispatch(AddMessageInDialogsActionCreator(text))\r\n        },\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthNavigate\r\n)(Dialogs)","import React, {FC} from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {Navigate} from 'react-router-dom';\r\nimport {AddStateType} from \"../../Redux/reduxStore\";\r\n\r\nlet mapStateToProps = (state: AddStateType) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\nexport const withAuthNavigate = (Component: FC<any>) => {\r\n\r\n    class NavigateComponent extends React.Component<{isAuth: boolean}> {\r\n        render() {\r\n            if (!this.props.isAuth) {\r\n                return <Navigate to={'/login'}/>\r\n            }\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectWithAuthNavigate = connect(mapStateToProps)(NavigateComponent)\r\n\r\n    return ConnectWithAuthNavigate\r\n}\r\n"],"names":["DialogItem","props","to","id","className","dialogsData","isActive","s","name","MessagesItem","src","icon","message","AddMessageForm","validationSchema","yup","initialValues","textMessage","validateOnBlur","onSubmit","values","resetForm","AddMessageInDialogs","addMessageElement","console","log","undefined","handleBlur","handleChange","isValid","handleSubmit","dirty","type","onChange","onBlur","value","placeholder","disabled","onClick","AddMessage","dialogsPage","dialogUsers","dialogs","map","d","messagesItem","messages","m","compose","connect","state","isAuth","auth","dispatch","text","AddMessageInDialogsActionCreator","withAuthNavigate","Dialogs","mapStateToProps","Component","NavigateComponent","this","React"],"sourceRoot":""}
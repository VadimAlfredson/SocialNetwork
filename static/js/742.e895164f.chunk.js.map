{"version":3,"file":"static/js/742.e895164f.chunk.js","mappings":"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","sources":["webpack://react-vadim/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/MessagesItem/MessagesItem.tsx","components/Dialogs/AddMessage/AddMessageForm.tsx","components/Dialogs/AddMessage/AddMessage.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx","components/hoc/witAuthNavigate.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__GBcEp\",\"dialogsTitle\":\"Dialogs_dialogsTitle__bxfTn\",\"dialogsUsers\":\"Dialogs_dialogsUsers__LBmt6\",\"dialogDiv\":\"Dialogs_dialogDiv__uycfj\",\"dialogItem\":\"Dialogs_dialogItem__k9CuM\",\"active\":\"Dialogs_active__zK1A-\",\"titleMessages\":\"Dialogs_titleMessages__2oe-t\",\"messages\":\"Dialogs_messages__Ly6dr\",\"addMessage\":\"Dialogs_addMessage__+SI4K\",\"inputAddMessage\":\"Dialogs_inputAddMessage__KTTQa\",\"buttonAddMessage\":\"Dialogs_buttonAddMessage__gnvoU\",\"divAddMessage\":\"Dialogs_divAddMessage__EcDqL\",\"iconMessage\":\"Dialogs_iconMessage__L+5-e\",\"message\":\"Dialogs_message__pyaWz\",\"divMessage\":\"Dialogs_divMessage__lpG8t\",\"messageForm\":\"Dialogs_messageForm__5uYWH\"};","import s from \"../Dialogs.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\n\r\nexport const DialogItem = (props: {id: number, name: string, onGetMessagesUser: (userId: number) => void}) => {\r\n\r\n    return <NavLink to={\"/dialogs/\" + props.id} onClick={() => {props.onGetMessagesUser(props.id)}}\r\n                 className={dialogsData => dialogsData.isActive ? s.active : s.dialogItem}>\r\n        {props.name}\r\n    </NavLink>\r\n};","import React from \"react\";\r\nimport s from \"../Dialogs.module.css\";\r\n\r\nexport const MessagesItem = (props: {message: string, icon: string}) => {\r\n    return <div className={s.divMessage}>\r\n        <div>\r\n            <img className={s.iconMessage} src={props.icon} alt={'картинка'}/>\r\n        </div>\r\n        <div className={s.messageForm}>\r\n            <a>{props.message}</a>\r\n        </div>\r\n    </div>\r\n}","import React from \"react\";\r\nimport {dialogsPageType} from \"../../../Redux/dialogs_reducer\";\r\nimport s from \"../Dialogs.module.css\";\r\nimport {Formik} from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\nexport const AddMessageForm = (props: {\r\n    AddMessageInDialogs: (textMessage: string) => void\r\n}) => {\r\n    const validationSchema = yup.string()\r\n    let addMessageElement = (values: string) => {\r\n        props.AddMessageInDialogs(values);\r\n    }\r\n    return <Formik\r\n        initialValues={{\r\n            textMessage: '' as string,\r\n        }}\r\n        validateOnBlur\r\n        onSubmit={(values, {resetForm}) => {\r\n            addMessageElement(values.textMessage)\r\n            console.log(values.textMessage)\r\n            resetForm({values: undefined})\r\n        }}\r\n        validationSchema={validationSchema}\r\n    >\r\n        {({\r\n            values,\r\n            handleBlur,\r\n            handleChange,\r\n            isValid,\r\n            handleSubmit,\r\n            dirty\r\n        }) => (\r\n        <div className={s.divAddMessage}>\r\n            <input\r\n                className={s.inputAddMessage}\r\n                type={'textarea'}\r\n                name={'textMessage'}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                value={values.textMessage}\r\n                placeholder={'Add new message'}\r\n            /><br/>\r\n            <button\r\n                className={s.buttonAddMessage}\r\n                disabled={!isValid && !dirty}\r\n                onClick={() => {handleSubmit()}}\r\n                type={'submit'}\r\n            >Sent\r\n            </button>\r\n        </div>\r\n    )}\r\n    </Formik>\r\n}\r\n","import React from \"react\";\r\nimport {dialogsPageType} from \"../../../Redux/dialogs_reducer\";\r\nimport {AddMessageForm} from \"./AddMessageForm\";\r\n\r\nexport const AddMessage = (props: {\r\n    AddMessageInDialogs: (text: string) => void\r\n    /*UpdateMessageInDialogs: (text: string) => void*/\r\n}) => {\r\n    return (\r\n        <AddMessageForm\r\n            AddMessageInDialogs={props.AddMessageInDialogs}\r\n        />\r\n    )\r\n}\r\n","import React, {useEffect, useState} from \"react\";\r\nimport s from './Dialogs.module.css';\r\nimport {DialogItem} from \"./DialogItem/DialogItem\";\r\nimport {MessagesItem} from \"./MessagesItem/MessagesItem\";\r\nimport {AddMessage} from \"./AddMessage/AddMessage\";\r\nimport {dialogsType, getMessagesUserThunkCreator, messagesType} from \"../../Redux/dialogs_reducer\";\r\n\r\n\r\nconst Dialogs = (props: {\r\n                     dialogs: dialogsType[],\r\n                     messages: messagesType[],\r\n                     AddMessageInDialogs: () => void,\r\n                     isAuth: boolean\r\n                     textMessage: string\r\n                     getDialogsThunkCreator: () => void\r\n    getMessagesUserThunkCreator: (userId: number) => void\r\n                 }\r\n) => {\r\n    /*    const [dialogs, setDialogs] = useState(props.dialogs);\r\n        const [messages, setMessages] = useState(props.messages);*/\r\n    /*props.getDialogsThunkCreator()*/\r\n    useEffect(() => {\r\n        debugger\r\n        props.getDialogsThunkCreator()\r\n    }, [])\r\n\r\n    const onGetMessagesUser = (userId: number) => {\r\n        props.getMessagesUserThunkCreator(userId)\r\n    }\r\n\r\n    let dialogUsers = props.dialogs.map(\r\n        d => <DialogItem name={d.userName} id={d.id} key={d.id} onGetMessagesUser={onGetMessagesUser}/>\r\n    );\r\n\r\n    let messagesItem = props.messages.map(\r\n        m => <MessagesItem message={m.message} icon={m.icon} key={m.id}/>\r\n    );\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsUsers}>\r\n                <div className={s.dialogsTitle}>Dialogs</div>\r\n                {dialogUsers}\r\n            </div>\r\n\r\n            <div className={s.messages}>\r\n                <div className={s.titleMessages}>Messages</div>\r\n                <div className={s.message}>\r\n                    {messagesItem}\r\n                </div>\r\n                <div className={s.addMessage}>\r\n                    <AddMessage\r\n                        AddMessageInDialogs={props.AddMessageInDialogs}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Dialogs","import React from \"react\";\r\nimport {\r\n    getDialogsThunkCreator, getMessagesUserThunkCreator\r\n} from \"../../Redux/dialogs_reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {AddStateType} from \"../../Redux/reduxStore\";\r\nimport {DispatchType} from \"../../Redux/Types\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthNavigate} from \"../hoc/witAuthNavigate\";\r\n\r\nlet mapStateToProps = (state: AddStateType) => {\r\n    return {\r\n        dialogs: state.dialogsPage.dialogs,\r\n        messages: state.dialogsPage.messages,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getDialogsThunkCreator, getMessagesUserThunkCreator}),\r\n    withAuthNavigate\r\n)(Dialogs)","import React, {FC} from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {Navigate} from 'react-router-dom';\r\nimport {AddStateType} from \"../../Redux/reduxStore\";\r\n\r\nlet mapStateToProps = (state: AddStateType) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\nexport const withAuthNavigate = (Component: FC<any>) => {\r\n\r\n    class NavigateComponent extends React.Component<{isAuth: boolean}> {\r\n        render() {\r\n            if (!this.props.isAuth) {\r\n                return <Navigate to={'/login'}/>\r\n            }\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectWithAuthNavigate = connect(mapStateToProps)(NavigateComponent)\r\n\r\n    return ConnectWithAuthNavigate\r\n}\r\n"],"names":["DialogItem","props","to","id","onClick","onGetMessagesUser","className","dialogsData","isActive","s","name","MessagesItem","src","icon","alt","message","AddMessageForm","validationSchema","yup","initialValues","textMessage","validateOnBlur","onSubmit","values","resetForm","AddMessageInDialogs","addMessageElement","console","log","undefined","handleBlur","handleChange","isValid","handleSubmit","dirty","type","onChange","onBlur","value","placeholder","disabled","AddMessage","useEffect","getDialogsThunkCreator","userId","getMessagesUserThunkCreator","dialogUsers","dialogs","map","d","userName","messagesItem","messages","m","compose","connect","state","dialogsPage","isAuth","auth","withAuthNavigate","Dialogs","mapStateToProps","Component","NavigateComponent","this","React"],"sourceRoot":""}
{"version":3,"file":"static/js/708.ba123050.chunk.js","mappings":"4LACA,EAA+B,2BAA/B,EAAyE,2BAAzE,EAA6G,qBAA7G,EAA4I,sBAA5I,EAAyK,mB,SCUnKA,EAAgB,IAAIC,UAAU,gEASpC,EAPuB,WACnB,OAAO,4BACH,SAACC,EAAD,KACA,SAACC,EAAD,QAMFD,EAAyB,SAACE,GAC5B,OAAwCC,EAAAA,EAAAA,UAA6B,IAArE,eAAOC,EAAP,KAAqBC,EAArB,KAQA,OANAC,EAAAA,EAAAA,YAAU,WACNR,EAAcS,iBAAiB,WAAW,SAACC,GACvC,IAAIC,EAAkBC,KAAKC,MAAMH,EAAEI,MACnCP,GAAgB,SAAAQ,GAAI,wBAAQA,IAAR,OAAiBJ,YAE1C,KACI,gBAAMK,UAAWC,EAAjB,SAAkCX,EAAaY,KAAI,SAACC,EAAqBC,GAAtB,OACtD,SAACC,EAAD,CAEIC,KAAMH,EAAEI,MACRC,QAASL,EAAEK,QACXC,KAAMN,EAAEO,UAHDN,SAcbC,EAA6B,SAACjB,GAChC,OAAO,iBAAKY,UAAWC,EAAhB,WACH,gBAAKD,UAAWC,EAAUU,IAAKvB,EAAMkB,KAAOlB,EAAMkB,KAAO,+FACzD,gBAAKN,UAAWC,EAAhB,SAAyBb,EAAMqB,QAC/B,gBAAKT,UAAWC,EAAhB,SAA4Bb,EAAMoB,cAIpCrB,EAAW,WACb,OAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAKmB,EAAL,KAAcI,EAAd,KAQA,OAAO,4BACH,0BAAK,qBACDC,SAAU,SAAAnB,GAAC,OAAIkB,EAAWlB,EAAEoB,OAAOC,QACnCA,MAAOP,OAEX,0BAAK,mBACDQ,QAbc,WACbR,IAGLxB,EAAciC,KAAKT,GACnBI,EAAW,MASPM,SAAUlC,EAAcmC,aAAenC,EAAcoC,KAFpD","sources":["webpack://react-vadim/./src/components/Chat/Chat.module.css?f66a","components/Chat/Chat.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"messagesChat\":\"Chat_messagesChat__CR-eP\",\"messageBlock\":\"Chat_messageBlock__vaJuA\",\"avatar\":\"Chat_avatar__rsPnT\",\"message\":\"Chat_message__F0bjS\",\"name\":\"Chat_name__TA+p3\"};","import React, {FC, useEffect, useState} from \"react\";\r\nimport s from './Chat.module.css'\r\n\r\n\r\ntype MessagesChatType = {\r\n    userId: number,\r\n    userName: string,\r\n    message: string,\r\n    photo: string\r\n}\r\n\r\nconst webSocketChat = new WebSocket('wss://social-network.samuraijs.com/handlers/ChatHandler.ashx')\r\n\r\nconst Chat: React.FC = () => {\r\n    return <div>\r\n        <MessagesChat />\r\n        <ChatForm />\r\n    </div>\r\n}\r\n\r\nexport default Chat\r\n\r\nconst MessagesChat: React.FC = (props) => {\r\n    const [messagesChat, setMessagesChat] = useState<MessagesChatType[]>([])\r\n\r\n    useEffect(() => {\r\n        webSocketChat.addEventListener('message', (e) => {\r\n            let newMessagesChat = JSON.parse(e.data)\r\n            setMessagesChat(prev => [...prev, ...newMessagesChat])\r\n        })\r\n    }, [])\r\n    return <div  className={s.messagesChat}>{messagesChat.map((m: MessagesChatType, index) =>\r\n        <MessageChat\r\n            key = {index}\r\n            icon={m.photo}\r\n            message={m.message}\r\n            name={m.userName}\r\n        />\r\n    )}</div>\r\n}\r\n\r\n\r\ntype PropsType = {\r\n    icon: string\r\n    name: string\r\n    message: string\r\n}\r\nconst MessageChat: FC<PropsType> = (props) => {\r\n    return <div className={s.messageBlock}>\r\n        <img className={s.avatar} src={props.icon ? props.icon : 'https://shapka-youtube.ru/wp-content/uploads/2021/02/avatarka-dlya-skaypa-dlya-parney.jpg'}/>\r\n        <div className={s.name}>{props.name}</div>\r\n        <div className={s.message}>{props.message}</div>\r\n    </div>\r\n}\r\n\r\nconst ChatForm = () => {\r\n    let [message, setMessage] = useState('')\r\n    let sendMessageChat = () => {\r\n        if (!message){\r\n            return;\r\n        }\r\n        webSocketChat.send(message)\r\n        setMessage('')\r\n    }\r\n    return <div>\r\n        <div><textarea\r\n            onChange={e => setMessage(e.target.value)}\r\n            value={message}>\r\n        </textarea></div>\r\n        <div><button\r\n            onClick={sendMessageChat}\r\n            disabled={webSocketChat.readyState !== webSocketChat.OPEN}\r\n        >Send</button></div>\r\n    </div>\r\n}"],"names":["webSocketChat","WebSocket","MessagesChat","ChatForm","props","useState","messagesChat","setMessagesChat","useEffect","addEventListener","e","newMessagesChat","JSON","parse","data","prev","className","s","map","m","index","MessageChat","icon","photo","message","name","userName","src","setMessage","onChange","target","value","onClick","send","disabled","readyState","OPEN"],"sourceRoot":""}
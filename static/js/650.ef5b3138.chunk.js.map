{"version":3,"file":"static/js/650.ef5b3138.chunk.js","mappings":"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","sources":["webpack://react-vadim/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.tsx","webpack://react-vadim/./src/components/Profile/MyPosts/MyPosts.module.css?831b","components/Profile/MyPosts/MyPostsForm.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","webpack://react-vadim/./src/components/Profile/Profile.module.css?b512","components/Profile/ProfileInfo/ProfileStatus.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","components/hoc/witAuthNavigate.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"post\":\"Post_post__akrs7\",\"img\":\"Post_img__LCZ5K\",\"messageBlock\":\"Post_messageBlock__DTacw\",\"message\":\"Post_message__WRFZD\",\"like\":\"Post_like__wbWe1\"};","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props: {message: string, likeCount: number}) => {\r\n    return (\r\n        <div className={s.post} >\r\n            <img className={s.img} src='https://shapka-youtube.ru/wp-content/uploads/2021/02/avatarka-dlya-skaypa-dlya-parney.jpg'/>\r\n            <div className={s.messageBlock}><div className={s.message}>{props.message}</div></div>\r\n            <div className={s.like}>{props.likeCount} like</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post","// extracted by mini-css-extract-plugin\nexport default {\"createText\":\"MyPosts_createText__T-jsH\",\"buttonAddPost\":\"MyPosts_buttonAddPost__QtbW7\",\"addpost\":\"MyPosts_addpost__+irvX\"};","import React, {Dispatch} from 'react'\r\nimport Post from './Post/Post'\r\nimport s from './MyPosts.module.css'\r\nimport {profilePageType} from \"../../../Redux/profile_reducer\";\r\nimport {Formik} from \"formik\";\r\n\r\nexport const MyPostsForm = React.memo((props: {\r\n    createNewPost: (newPost: string) => void,\r\n}) => {\r\n    console.log('rerenderPost')\r\n    return <Formik\r\n        initialValues={{\r\n            newPost: '' as string\r\n        }}\r\n        validateOnBlur\r\n        onSubmit={(values, {resetForm}) => {\r\n            props.createNewPost(values.newPost)\r\n            console.log(values.newPost)\r\n            resetForm({values: undefined})\r\n        }}\r\n    >\r\n        {({\r\n              values,\r\n              handleBlur,\r\n              handleChange,\r\n              isValid,\r\n              handleSubmit,\r\n              dirty\r\n          }) => (\r\n            <div /*className={s.addpost}*/>\r\n                <input\r\n                    type={'input'}\r\n                    name={'newPost'}\r\n                    onChange={handleChange}\r\n                    placeholder={'Add text'}\r\n                    className={s.createText}\r\n                    value={values.newPost}\r\n                    onBlur={handleBlur}\r\n                />\r\n                <button\r\n                    className={s.buttonAddPost}\r\n                    disabled={!isValid && !dirty}\r\n                    onClick={() => {handleSubmit()}}\r\n                    type={'submit'}\r\n                >Send\r\n                </button>\r\n            </div>\r\n        )}\r\n\r\n    </Formik>\r\n})","import React, {Dispatch, FC} from 'react'\r\nimport Post from './Post/Post'\r\nimport s from './MyPosts.module.css'\r\nimport {postsType} from \"../../../Redux/profile_reducer\";\r\nimport {MyPostsForm} from \"./MyPostsForm\";\r\n\r\ntype PropsType = {\r\n    posts: Array<postsType>,\r\n    createNewPost: (NewPost: string) => void,\r\n}\r\n\r\nconst MyPosts: FC<PropsType> = (props) => {\r\n    let postElements = props.posts.map(\r\n        (p) => <Post message={p.message} likeCount={p.likeCount}  key={p.id}/>\r\n    );\r\n    console.log('Rerender')\r\n    return (\r\n        <div>\r\n            <MyPostsForm\r\n                createNewPost={props.createNewPost}\r\n            />\r\n            <div className={s.post}>\r\n                {postElements}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyPosts","import React from 'react'\r\nimport {\r\n    AddPostActionCreator,\r\n} from \"../../../Redux/profile_reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {AddStateType} from \"../../../Redux/reduxStore\";\r\nimport {DispatchType} from \"../../../Redux/Types\";\r\n\r\nlet mapStateToProps = (state: AddStateType) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch: DispatchType) => {\r\n    return {\r\n        createNewPost: (newPost: string) => {\r\n            dispatch(AddPostActionCreator(newPost))\r\n        },\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer","// extracted by mini-css-extract-plugin\nexport default {\"profileClass\":\"Profile_profileClass__eq7lO\",\"profileInfo\":\"Profile_profileInfo__OVCEI\",\"avatarSide\":\"Profile_avatarSide__M2bsj\",\"avatarImg\":\"Profile_avatarImg__3Egiz\",\"inputPhoto\":\"Profile_inputPhoto__RonUU\",\"labelUpdatePhoto\":\"Profile_labelUpdatePhoto__rIkOS\",\"name\":\"Profile_name__7N8LX\",\"status\":\"Profile_status__pnE9e\",\"aboutMe\":\"Profile_aboutMe__UjygN\",\"editMode\":\"Profile_editMode__71+RX\",\"informationUser\":\"Profile_informationUser__7qzE9\",\"buttonFollow\":\"Profile_buttonFollow__w3i6m\",\"buttonUnfollow\":\"Profile_buttonUnfollow__wXenc\",\"buttonEditInfo\":\"Profile_buttonEditInfo__iPGTb\",\"profilePost\":\"Profile_profilePost__xVBaE\"};","import s from './../Profile.module.css';\r\nimport React, {ChangeEvent, FC, useEffect, useState} from 'react';\r\n\r\ntype PropsType = {\r\n    status: string\r\n    putStatusThunkCreator: (status: string) => void\r\n    isOwner: boolean\r\n}\r\n\r\nexport const ProfileStatus: FC<PropsType> = (props) => {\r\n    let [editMode, setEditMode] = useState(false)\r\n\r\n    let activeStatusInput = () => setEditMode(!props.isOwner)\r\n\r\n    let deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.putStatusThunkCreator(status)\r\n    }\r\n\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    let onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setStatus(e.currentTarget.value)\r\n    };\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status)\r\n    }, [props.status]);\r\n\r\n    return (\r\n        <div>  {\r\n            !editMode &&\r\n                <div>\r\n            <span onDoubleClick={activeStatusInput} >{props.status || 'status'}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n            <input\r\n                onChange={onStatusChange}\r\n                autoFocus={true}\r\n                onBlur={deactivateEditMode}\r\n                value={status}/>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n/*\r\nexport class ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activeStatusInput = () => {\r\n        this.setState(\r\n            {editMode: true}\r\n        )\r\n    }\r\n\r\n    deactivateEditMode = () => {\r\n        this.setState(\r\n            {editMode: false}\r\n        );\r\n        this.props.putStatusThunkCreator(this.state.status)\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        });\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div>  {\r\n                !this.state.editMode &&\r\n                <div>\r\n                    <span onDoubleClick={this.activeStatusInput} >{this.props.status || 'status'}</span>\r\n                </div>\r\n            }\r\n                { this.state.editMode &&\r\n                <div>\r\n                    <input\r\n                        onChange={this.onStatusChange}\r\n                        autoFocus={true}\r\n                        onBlur={this.deactivateEditMode}\r\n                        value={this.state.status}/>\r\n                </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}*/\r\n","import React, {FC, useState} from 'react';\r\nimport s from './../Profile.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport {ProfileStatus} from \"./ProfileStatus\";\r\nimport {ProfileType} from \"../../../Redux/profile_reducer\";\r\nimport ProfileInfoForm from \"../../Setting/formProfileInfo\";\r\nimport {Navigate, NavLink} from \"react-router-dom\";\r\n\r\ntype PropsType = {\r\n    profile: ProfileType\r\n    putStatusThunkCreator: () => void\r\n    status: string\r\n    isOwner: boolean\r\n    savePhotoTC: ({}) => void\r\n    follow: boolean\r\n    onFollowProfileChange: (userId: number, follow: boolean) => void\r\n    onPutDialogOnProfileChange: (userId: number) => void\r\n}\r\n\r\nconst ProfileInfo: FC<PropsType> = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n    const onMainPhotoSelected = (e: any) => {\r\n        if (e.target.files.length) {\r\n            props.savePhotoTC(e.target.files[0])\r\n        }\r\n    }\r\n    return <div className={s.profileClass}>\r\n        <div className={s.avatarSide}>\r\n            <img className={s.avatarImg}\r\n                 src={props.profile.photos.large || 'https://shapka-youtube.ru/wp-content/uploads/2021/02/avatarka-dlya-skaypa-dlya-parney.jpg'}/>\r\n            {/*{props.isOwner || <div>\r\n                <div className={s.labelUpdatePhoto}>upload photo</div>\r\n                <input className={s.inputPhoto} type={\"file\"} onChange={onMainPhotoSelected}/>\r\n            </div>}*/}\r\n        </div>\r\n        <div className={s.profileInfo}>\r\n            <div className={s.name}><b>{props.profile.fullName}</b></div>\r\n            <div className={s.status}><ProfileStatus status={props.status} putStatusThunkCreator={props.putStatusThunkCreator} isOwner={props.isOwner}/></div>\r\n            <div className={s.editMode}>{props.isOwner &&\r\n                <button className={props.follow ? s.buttonUnfollow : s.buttonFollow} onClick={() => {\r\n                    props.onFollowProfileChange(props.profile.userId, props.follow)\r\n                }}>{props.follow ? 'Unfollow' : 'Follow'}</button>}\r\n            </div>\r\n            <div className={s.editMode}>{props.isOwner &&\r\n                <NavLink to={\"/dialogs/\" + props.profile.userId} className={s.buttonFollow} onClick={() => {\r\n                    props.onPutDialogOnProfileChange(props.profile.userId)\r\n                }}>Send message</NavLink>}\r\n            </div>\r\n            <div className={s.informationUser}>\r\n                <Information\r\n                    profile={props.profile}\r\n                    isOwner={props.isOwner}\r\n                />\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nconst Contact: FC<{ contactTitle: string, contactValue: string }> = ({contactTitle, contactValue}) => {\r\n    return <div>\r\n        <b>{contactTitle}:</b> {contactValue}\r\n    </div>\r\n}\r\n\r\ntype InfoProps = {\r\n    profile: any\r\n    isOwner: boolean\r\n}\r\n\r\nconst Information: FC<InfoProps> = ({profile, isOwner}) => {\r\n    let [editMode, setEditMode] = useState(false)\r\n    let editModeOnOff = (value: boolean) => setEditMode(value)\r\n    return <div>\r\n        <div>\r\n            {/*{isOwner || !editMode && <button className={s.buttonEditInfo} onClick={() => {\r\n                editModeOnOff(true)\r\n            }}>edit information</button>}\r\n            {!isOwner && editMode && <div><ProfileInfoForm editModeOnOff={editModeOnOff}/></div>}\r\n            {editMode || */}<div>\r\n                <div><b>looking for a job:</b> {profile.lookingForAJob ? \"yes\" : 'no'}</div>\r\n                {profile.lookingForAJob &&\r\n                    <div><b>looking for a job description:</b> {profile.lookingForAJobDescription}</div>}\r\n            </div>{/*}*/}\r\n            <div className={s.aboutMe}><b>About me:</b>{profile.aboutMe}</div>\r\n        </div>\r\n        <div className={s.contacts}>{(!isOwner && editMode) || Object.keys(profile.contacts).filter(i =>\r\n            profile.contacts[i]).map(i => {\r\n            return <Contact key={i} contactTitle={i} contactValue={profile.contacts[i]}/>\r\n        })}</div>\r\n    </div>\r\n}\r\n\r\nexport default ProfileInfo","import React, {FC} from 'react';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer'\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport {ProfileType} from \"../../Redux/profile_reducer\";\r\nimport s from \"./Profile.module.css\"\r\n\r\ntype PropsType = {\r\n    profile: ProfileType\r\n    putStatusThunkCreator: () => void\r\n    status: string\r\n    isOwner: boolean\r\n    savePhotoTC: ({}) => void\r\n    follow: boolean\r\n    onFollowProfileChange: (userId: number, follow: boolean) => void\r\n    onPutDialogOnProfileChange: (userId: number) => void\r\n}\r\n\r\nconst Profile: FC<PropsType> = (props) => {\r\n    return <div className={s.profileContent}>\r\n        <div className={s.profileInfo}>\r\n        <ProfileInfo savePhotoTC={props.savePhotoTC}\r\n                     isOwner={props.isOwner}\r\n                     profile={props.profile}\r\n                     putStatusThunkCreator={props.putStatusThunkCreator}\r\n                     status={props.status}\r\n                     follow={props.follow}\r\n                     onFollowProfileChange={props.onFollowProfileChange}\r\n                     onPutDialogOnProfileChange={props.onPutDialogOnProfileChange}\r\n        />\r\n        </div>\r\n        <div className={s.profilePost}>\r\n        <MyPostsContainer />\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Profile","import React, {FC} from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    getStatusThunkCreator,\r\n    putStatusThunkCreator,\r\n    setUserProfile,\r\n    userProfileThunkCreator,\r\n    savePhotoTC,\r\n    getFollowThunkCreator,\r\n    onFollowProfileChangeThunkCreator,\r\n} from \"../../Redux/profile_reducer\";\r\nimport {AddStateType} from \"../../Redux/reduxStore\";\r\nimport {\r\n    useLocation,\r\n    useNavigate,\r\n    useParams,\r\n} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthNavigate} from \"../hoc/witAuthNavigate\";\r\nimport {getSubscriptionsThunkCreator} from \"../../Redux/subscriptions_reducers\";\r\nimport {putDialogUserThunkCreator} from \"../../Redux/dialogs_reducer\";\r\n\r\nfunction withRouter(Component: FC) {\r\n    function ComponentWithRouterProp(props: any) {\r\n        let location = useLocation();\r\n        let navigate = useNavigate();\r\n        let params = useParams();\r\n        return (\r\n            <Component\r\n                {...props}\r\n                router={{ location, navigate, params }}\r\n            />\r\n        );\r\n    }\r\n\r\n    return ComponentWithRouterProp;\r\n}\r\n\r\nclass ProfileContainer extends React.Component<any, any> {\r\n\r\n    refreshProfile(): void {\r\n        let userId: number = this.props.router.params.userId\r\n        if (!userId) {userId = this.props.authorizedUserId}\r\n        this.props.userProfileThunkCreator(userId)\r\n        this.props.getStatusThunkCreator(userId)\r\n        this.props.getFollowThunkCreator(userId)\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Readonly<any>, prevState: Readonly<any>, snapshot?: any): void {\r\n        if (this.props.router.params.userId != prevProps.router.params.userId ||\r\n            this.props.router.params.follow != prevProps.router.params.follow) {this.refreshProfile()}\r\n    }\r\n\r\n    onFollowProfileChange = (userId: number, follow: boolean) => {\r\n        this.props.onFollowProfileChangeThunkCreator(userId, follow)\r\n        this.props.getSubscriptionsThunkCreator(true)\r\n    }\r\n\r\n    onPutDialogOnProfileChange = (userId: number) => {\r\n        this.props.putDialogUserThunkCreator(userId)\r\n    }\r\n\r\n\r\n    render(): React.ReactNode {\r\n        return <Profile {...this.props}\r\n                        isOwner={!!this.props.router.params.userId}\r\n                        profile={this.props.profile}\r\n                        status={this.props.status}\r\n                        putStatusThunkCreator={this.props.putStatusThunkCreator}\r\n                        savePhotoTC={this.props.savePhotoTC}\r\n                        follow={this.props.follow}\r\n                        onFollowProfileChange={this.onFollowProfileChange}\r\n                        onPutDialogOnProfileChange={this.onPutDialogOnProfileChange}\r\n        />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: AddStateType) => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.userId,\r\n        follow: state.profilePage.follow,\r\n        /*followingInProgress: getFollowingInProgress(state),*/\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withRouter,\r\n    connect (mapStateToProps, {setUserProfile,\r\n        userProfileThunkCreator,\r\n        getStatusThunkCreator,\r\n        putStatusThunkCreator,\r\n        savePhotoTC,\r\n        getFollowThunkCreator,\r\n        onFollowProfileChangeThunkCreator,\r\n        getSubscriptionsThunkCreator,\r\n        putDialogUserThunkCreator\r\n    }),\r\n    withAuthNavigate\r\n)(ProfileContainer)","import React, {FC} from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {Navigate} from 'react-router-dom';\r\nimport {AddStateType} from \"../../Redux/reduxStore\";\r\n\r\nlet mapStateToProps = (state: AddStateType) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\nexport const withAuthNavigate = (Component: FC<any>) => {\r\n\r\n    class NavigateComponent extends React.Component<{isAuth: boolean}> {\r\n        render() {\r\n            if (!this.props.isAuth) {\r\n                return <Navigate to={'/login'}/>\r\n            }\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectWithAuthNavigate = connect(mapStateToProps)(NavigateComponent)\r\n\r\n    return ConnectWithAuthNavigate\r\n}\r\n"],"names":["props","className","s","src","message","likeCount","MyPostsForm","React","console","log","initialValues","newPost","validateOnBlur","onSubmit","values","resetForm","createNewPost","undefined","handleBlur","handleChange","isValid","handleSubmit","dirty","type","name","onChange","placeholder","value","onBlur","disabled","onClick","postElements","posts","map","p","id","connect","state","profilePage","newPostText","dispatch","AddPostActionCreator","MyPosts","ProfileStatus","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","isOwner","e","currentTarget","autoFocus","putStatusThunkCreator","Contact","contactTitle","contactValue","Information","profile","lookingForAJob","lookingForAJobDescription","aboutMe","Object","keys","contacts","filter","i","Preloader","photos","large","fullName","follow","onFollowProfileChange","userId","to","onPutDialogOnProfileChange","savePhotoTC","ProfileContainer","onFollowProfileChangeThunkCreator","getSubscriptionsThunkCreator","putDialogUserThunkCreator","this","router","params","authorizedUserId","userProfileThunkCreator","getStatusThunkCreator","getFollowThunkCreator","refreshProfile","prevProps","prevState","snapshot","compose","Component","location","useLocation","navigate","useNavigate","useParams","auth","setUserProfile","withAuthNavigate","mapStateToProps","isAuth","NavigateComponent"],"sourceRoot":""}
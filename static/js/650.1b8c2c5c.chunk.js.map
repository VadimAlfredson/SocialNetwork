{"version":3,"file":"static/js/650.1b8c2c5c.chunk.js","mappings":"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","sources":["Redux/selectors/profile_selectors.ts","webpack://react-vadim/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.tsx","webpack://react-vadim/./src/components/Profile/MyPosts/MyPosts.module.css?831b","components/Profile/MyPosts/MyPostsForm.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","webpack://react-vadim/./src/components/Profile/Profile.module.css?b512","components/Profile/ProfileInfo/ProfileStatus.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","components/hoc/witAuthNavigate.tsx"],"sourcesContent":["import {RootState} from \"../reduxStore\";\r\n\r\nexport const getProfile = (state: RootState) => {\r\n    return state.profile.profile\r\n}\r\nexport const getPosts = (state: RootState) => {\r\n    return state.profile.posts\r\n}\r\nexport const getNewPostText = (state: RootState) => {\r\n    return state.profile.newPostText\r\n}\r\nexport const getStatusProfile = (state: RootState) => {\r\n    return state.profile.status\r\n}\r\nexport const getFollow = (state: RootState) => {\r\n    return state.profile.follow\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"post\":\"Post_post__akrs7\",\"img\":\"Post_img__LCZ5K\",\"messageBlock\":\"Post_messageBlock__DTacw\",\"message\":\"Post_message__WRFZD\",\"like\":\"Post_like__wbWe1\",\"likeActive\":\"Post_likeActive__cinax\",\"likeIcon\":\"Post_likeIcon__rVuhL\"};","import React, {useEffect, useState} from 'react';\r\nimport s from './Post.module.css';\r\nimport {useAppDispatch, useAppSelector} from \"../../../../Redux/reduxStore\";\r\nimport {setLikePostActionCreator} from \"../../../../Redux/reducers/profile_reducer\";\r\n\r\nconst Post = (props: { message: string, likeCount: number, ownerLike: boolean, id: number}) => {\r\n    let [likeActive, setLikeActive] = useState<boolean>(props.ownerLike)\r\n    let [likeCount, setLikeCount] = useState<number>(props.likeCount)\r\n    const dispatch = useAppDispatch()\r\n    useEffect(() => {\r\n        setLikeActive(props.ownerLike)\r\n        setLikeCount(props.likeCount)\r\n        console.log(props.ownerLike)\r\n    }, [props.ownerLike])\r\n    let onClickChange = () => {\r\n        dispatch(setLikePostActionCreator(props.id))\r\n    }\r\n    return (\r\n        <div className={s.post}>\r\n            <img className={s.img}\r\n                 src='https://shapka-youtube.ru/wp-content/uploads/2021/02/avatarka-dlya-skaypa-dlya-parney.jpg'/>\r\n            <div className={s.messageBlock}>\r\n                <div className={s.message}>{props.message}</div>\r\n                <div className={likeActive ? s.likeActive : s.like}>{likeCount}<img\r\n                    className={s.likeIcon}\r\n                    src={likeActive ? process.env.PUBLIC_URL + '/likeActive.png' : process.env.PUBLIC_URL + '/like.png'}\r\n                    onClick={() => onClickChange()}\r\n                    alt={'like'}/>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post","// extracted by mini-css-extract-plugin\nexport default {\"createText\":\"MyPosts_createText__T-jsH\",\"buttonAddPost\":\"MyPosts_buttonAddPost__QtbW7\",\"addpost\":\"MyPosts_addpost__+irvX\"};","import React, {Dispatch} from 'react'\r\nimport Post from './Post/Post'\r\nimport s from './MyPosts.module.css'\r\nimport {profilePageType} from \"../../../Redux/reducers/profile_reducer\";\r\nimport {Formik} from \"formik\";\r\nimport {Box, Button, TextField} from \"@mui/material\";\r\n\r\nexport const MyPostsForm = React.memo((props: {\r\n    createNewPost: (newPost: string) => void,\r\n}) => {\r\n    return <Formik\r\n        initialValues={{\r\n            newPost: '' as string\r\n        }}\r\n        validateOnBlur\r\n        onSubmit={(values, {resetForm}) => {\r\n            props.createNewPost(values.newPost)\r\n            resetForm({values: undefined})\r\n        }}\r\n    >\r\n        {({\r\n              values,\r\n              handleBlur,\r\n              handleChange,\r\n              isValid,\r\n              handleSubmit,\r\n              dirty\r\n          }) => (\r\n            <Box display={\"flex\"} flexDirection={'row'} width={'100%'}\r\n                 maxWidth={'600px'} m={'auto'} sx={{flexGrow: 1,}}>\r\n                <TextField\r\n                    type={'input'}\r\n                    name={'newPost'}\r\n                    onChange={handleChange}\r\n                    value={values.newPost}\r\n                    onBlur={handleBlur}\r\n                    color={'info'}\r\n                    label={'Add post'}\r\n                    id={'newPost'}\r\n                    variant={'outlined'}\r\n                    fullWidth={true}\r\n                    sx={{\r\n                        \"& .MuiOutlinedInput-root\":{\"& > fieldset\": {border: '1px solid grey'}},\r\n                        input: {color: '#D0D3D4'}\r\n                }}\r\n                    InputLabelProps={{\r\n                        sx: { color: \"grey\"/*, \"&.Mui-focused\": { color: \"green\" } */},\r\n                    }}\r\n\r\n                />\r\n                {/*<input\r\n                    type={'input'}\r\n                    name={'newPost'}\r\n                    onChange={handleChange}\r\n                    placeholder={'Add text'}\r\n                    className={s.createText}\r\n                    value={values.newPost}\r\n                    onBlur={handleBlur}\r\n                />*/}\r\n                <Button\r\n                    variant={!dirty ? 'outlined' : 'contained'}\r\n                    color={'warning'}\r\n                    disabled={!dirty}\r\n                    onClick={() => {handleSubmit()}}\r\n                    type={'submit'}\r\n                >Send\r\n                </Button>\r\n            </Box>\r\n        )}\r\n\r\n    </Formik>\r\n})","import React, {Dispatch, FC, useEffect} from 'react'\r\nimport Post from './Post/Post'\r\nimport s from './MyPosts.module.css'\r\nimport {postsType} from \"../../../Redux/reducers/profile_reducer\";\r\nimport {MyPostsForm} from \"./MyPostsForm\";\r\nimport {Box} from \"@mui/material\";\r\n\r\ntype PropsType = {\r\n    posts: Array<postsType>,\r\n    createNewPost: (NewPost: string) => void,\r\n}\r\n\r\nconst MyPosts: FC<PropsType> = (props) => {\r\n    let postElements = props.posts.map(\r\n        (p) => <Post message={p.message} likeCount={p.likeCount}\r\n                     key={p.id} ownerLike={p.ownerLike} id={p.id}/>\r\n    );\r\n    console.log('Rerender')\r\n    return (\r\n        <Box display={'flex'} flexDirection={'column'} mt={3}>\r\n            <MyPostsForm\r\n                createNewPost={props.createNewPost}\r\n            />\r\n            <div className={s.post}>\r\n                {postElements}\r\n            </div>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default MyPosts","import React, {Dispatch} from 'react'\r\nimport {\r\n    AddPostActionCreator,\r\n} from \"../../../Redux/reducers/profile_reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {RootState} from \"../../../Redux/reduxStore\";\r\n\r\nlet mapStateToProps = (state: RootState) => {\r\n    return {\r\n        posts: state.profile.posts,\r\n        newPostText: state.profile.newPostText\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch: Dispatch<any>) => {\r\n    return {\r\n        createNewPost: (newPost: string) => {\r\n            dispatch(AddPostActionCreator(newPost))\r\n        },\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer","// extracted by mini-css-extract-plugin\nexport default {\"profileClass\":\"Profile_profileClass__eq7lO\",\"profileInfo\":\"Profile_profileInfo__OVCEI\",\"avatarSide\":\"Profile_avatarSide__M2bsj\",\"avatarImg\":\"Profile_avatarImg__3Egiz\",\"fullPhoto\":\"Profile_fullPhoto__Yz2Tr\",\"inputPhoto\":\"Profile_inputPhoto__RonUU\",\"labelUpdatePhoto\":\"Profile_labelUpdatePhoto__rIkOS\",\"name\":\"Profile_name__7N8LX\",\"status\":\"Profile_status__pnE9e\",\"aboutMe\":\"Profile_aboutMe__UjygN\",\"editMode\":\"Profile_editMode__71+RX\",\"informationUser\":\"Profile_informationUser__7qzE9\",\"buttonFollow\":\"Profile_buttonFollow__w3i6m\",\"buttonUnfollow\":\"Profile_buttonUnfollow__wXenc\",\"buttonEditInfo\":\"Profile_buttonEditInfo__iPGTb\",\"profilePost\":\"Profile_profilePost__xVBaE\",\"statusEditImg\":\"Profile_statusEditImg__xboN9\"};","import s from './../Profile.module.css';\r\nimport React, {ChangeEvent, FC, useEffect, useState} from 'react';\r\nimport {useAppDispatch} from \"../../../Redux/reduxStore\";\r\nimport {putStatusThunkCreator} from \"../../../Redux/reducers/profile_reducer\";\r\nimport {Box, TextField, Typography} from \"@mui/material\";\r\nimport ModeEditIcon from '@mui/icons-material/ModeEdit';\r\n\r\ntype PropsType = {\r\n    status: string\r\n    isOwner: boolean\r\n    ownerId: number\r\n    userId: number\r\n}\r\n\r\nexport const ProfileStatus: FC<PropsType> = (props) => {\r\n    const dispatch = useAppDispatch()\r\n    let [editMode, setEditMode] = useState(false)\r\n\r\n    let activeStatusInput = () => setEditMode(!props.isOwner)\r\n\r\n    let deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        if (status !== props.status) {\r\n            dispatch(putStatusThunkCreator(status))\r\n        }\r\n    }\r\n\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    let onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setStatus(e.currentTarget.value)\r\n    };\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status]);\r\n\r\n    useEffect(() => {\r\n        console.log(props.ownerId === props.userId)\r\n    }, [props.userId])\r\n    return (\r\n        <Box>  {\r\n            !editMode && <Box display={'flex'}\r\n                              flexDirection={'row'}\r\n                              alignItems='center'\r\n                              m={'0 auto'}\r\n                              justifyContent={'center'}\r\n            >\r\n                <Typography\r\n                    variant={'subtitle1'}\r\n                    color={'#D0D3D4'}\r\n\r\n                >{props.status || ''}</Typography>\r\n\r\n                <span onClick={activeStatusInput}>{(props.ownerId === props.userId) &&\r\n                    <ModeEditIcon color={'info'} sx={{ml: '10px'}}/>}</span>\r\n            </Box>\r\n        }\r\n            <Box display={'flex'} justifyContent={'center'} margin={'auto'}>{editMode &&\r\n                    <TextField\r\n                        id=\"status\"\r\n                        label=\"Status\"\r\n                        variant=\"standard\"\r\n                        onChange={onStatusChange}\r\n                        autoFocus={true}\r\n                        value={status}\r\n                        onBlur={deactivateEditMode}\r\n                        color={'info'}\r\n                        fullWidth={true}\r\n                        sx={{m: '0 20px', maxWidth: '300px'}}\r\n                    />\r\n            }\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\n/*\r\nexport class ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activeStatusInput = () => {\r\n        this.setState(\r\n            {editMode: true}\r\n        )\r\n    }\r\n\r\n    deactivateEditMode = () => {\r\n        this.setState(\r\n            {editMode: false}\r\n        );\r\n        this.props.putStatusThunkCreator(this.state.status)\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        });\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div>  {\r\n                !this.state.editMode &&\r\n                <div>\r\n                    <span onDoubleClick={this.activeStatusInput} >{this.props.status || 'status'}</span>\r\n                </div>\r\n            }\r\n                { this.state.editMode &&\r\n                <div>\r\n                    <input\r\n                        onChange={this.onStatusChange}\r\n                        autoFocus={true}\r\n                        onBlur={this.deactivateEditMode}\r\n                        value={this.state.status}/>\r\n                </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}*/\r\n","import React, {FC, useEffect, useState} from 'react';\r\nimport s from './../Profile.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport {ProfileStatus} from \"./ProfileStatus\";\r\nimport {ProfileType} from \"../../../Redux/reducers/profile_reducer\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport profile from \"../Profile\";\r\nimport {useAppSelector} from \"../../../Redux/reduxStore\";\r\nimport {getOwnerId} from \"../../../Redux/selectors/auth_selectors\";\r\nimport {Box, Button, Card, CardMedia, TextField, Typography} from \"@mui/material\";\r\nimport PersonAddIcon from '@mui/icons-material/PersonAdd';\r\nimport PersonRemoveIcon from '@mui/icons-material/PersonRemove';\r\nimport RateReviewIcon from '@mui/icons-material/RateReview';\r\n\r\ntype PropsType = {\r\n    profile: ProfileType\r\n    status: string\r\n    isOwner: boolean\r\n    follow: boolean\r\n    onFollowProfileChange: (userId: number, follow: boolean) => void\r\n    onPutDialogOnProfileChange: (userId: number) => void\r\n}\r\n\r\nconst ProfileInfo: FC<PropsType> = (props) => {\r\n    const ownerId = useAppSelector(getOwnerId)\r\n    const defaultPhoto = useAppSelector(state => state.auth.defaultPhoto)\r\n    let [showFullPhoto, setShowFullPhoto] = useState(false)\r\n\r\n    useEffect(() => {\r\n        setShowFullPhoto(false)\r\n    }, [props.profile.userId])\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n    return <Card sx={{\r\n        display: 'flex',\r\n        borderRadius: '5px',\r\n        flexDirection: {xs: 'column', sm: 'row'},\r\n        background: 'rgba(0, 0, 0, 0)',\r\n        gap: 1,\r\n        flexGrow: 1\r\n    }}><Box display={'flex'} flexDirection={'column'}>\r\n        <CardMedia component='img'\r\n                   image={props.profile.photos.large ? props.profile.photos.large : defaultPhoto}\r\n                   sx={{width: '300px', height: '300px',\r\n                   borderRadius: '5px', m: 'auto'\r\n                   }}\r\n        />\r\n        <Box display={'flex'}\r\n             flexDirection={'row'}\r\n             m={'5px auto'} width={'300px'}\r\n             gap={'5px'}\r\n\r\n        >{(ownerId !== props.profile.userId) && props.isOwner &&\r\n            <Button\r\n                color={props.follow ? 'info' : 'warning'}\r\n                variant={props.follow ? 'outlined' : 'contained'}\r\n                onClick={() => {\r\n                    props.onFollowProfileChange(props.profile.userId, props.follow)\r\n                }}>{props.follow ? <PersonRemoveIcon /> : <PersonAddIcon />}</Button>}\r\n\r\n            {(ownerId !== props.profile.userId) && props.isOwner &&\r\n                <Button\r\n                    color={'info'}\r\n                    variant={'contained'}\r\n                    startIcon={<RateReviewIcon />}\r\n                    fullWidth={true}\r\n                    onClick={() => {\r\n                    props.onPutDialogOnProfileChange(props.profile.userId)\r\n                }}>Write new message</Button>}\r\n        </Box>\r\n    </Box>\r\n        <Box display='flex' flexDirection='column'\r\n             sx={{flexGrow: 1}} width={'100%'} >\r\n            <Typography color='#D0D3D4'\r\n                        sx={{m: '10px auto'}}\r\n                        variant={'h5'}\r\n            >\r\n                {props.profile.fullName}\r\n            </Typography>\r\n                <ProfileStatus status={props.status} isOwner={props.isOwner} ownerId={ownerId}\r\n                               userId={props.profile.userId}/>\r\n\r\n                <Information\r\n                    profile={props.profile}\r\n                    isOwner={props.isOwner}\r\n                />\r\n        </Box>\r\n    </Card>\r\n}\r\n\r\nconst Contact: FC<{ contactTitle: string, contactValue: string }> = ({contactTitle, contactValue}) => {\r\n    return <Typography>\r\n        <b>{contactTitle}:</b> {contactValue}\r\n    </Typography>\r\n}\r\n\r\ntype InfoProps = {\r\n    profile: any\r\n    isOwner: boolean\r\n}\r\n\r\nconst Information: FC<InfoProps> = ({profile, isOwner}) => {\r\n    return <Box color={'#D0D3D4'}>\r\n        <div>\r\n            <div>\r\n                <div><b>looking for a job:</b> {profile.lookingForAJob ? \" yes\" : ' no'}</div>\r\n                {profile.lookingForAJob &&\r\n                    <div><b>looking for a job description:</b> {profile.lookingForAJobDescription}</div>}\r\n            </div>\r\n            <div className={s.aboutMe}><b>About me:</b> {profile.aboutMe}</div>\r\n        </div>\r\n        <div className={s.contacts}>{Object.keys(profile.contacts).filter(i =>\r\n            profile.contacts[i]).map(i => {\r\n            return <Contact key={i} contactTitle={i} contactValue={profile.contacts[i]}/>\r\n        })}</div>\r\n    </Box>\r\n}\r\n\r\nexport default ProfileInfo","import React, {FC} from 'react';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer'\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport {postsType, ProfileType} from \"../../Redux/reducers/profile_reducer\";\r\nimport s from \"./Profile.module.css\"\r\nimport { Box } from '@mui/material';\r\n\r\ntype PropsType = {\r\n    profile: ProfileType\r\n    status: string\r\n    isOwner: boolean\r\n    follow: boolean\r\n    onFollowProfileChange: (userId: number, follow: boolean) => void\r\n    onPutDialogOnProfileChange: (userId: number) => void\r\n}\r\n\r\n\r\n\r\nconst Profile: FC<PropsType> = (props) => {\r\n    return <Box display={'flex'} flexGrow={1} flexDirection={'column'}>\r\n        <ProfileInfo\r\n                     isOwner={props.isOwner}\r\n                     profile={props.profile}\r\n                     status={props.status}\r\n                     follow={props.follow}\r\n                     onFollowProfileChange={props.onFollowProfileChange}\r\n                     onPutDialogOnProfileChange={props.onPutDialogOnProfileChange}\r\n        />\r\n\r\n        <MyPostsContainer />\r\n    </Box>\r\n}\r\n\r\nexport default Profile","import React, {FC, useEffect} from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    getStatusThunkCreator,\r\n    putStatusThunkCreator,\r\n    setUserProfile,\r\n    userProfileThunkCreator,\r\n    savePhotoTC,\r\n    getFollowThunkCreator,\r\n    onFollowProfileChangeThunkCreator,\r\n} from \"../../Redux/reducers/profile_reducer\";\r\nimport {RootState, useAppDispatch, useAppSelector} from \"../../Redux/reduxStore\";\r\nimport {\r\n    useLocation,\r\n    useNavigate,\r\n    useParams,\r\n} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthNavigate} from \"../hoc/witAuthNavigate\";\r\nimport {getSubscriptionsThunkCreator} from \"../../Redux/reducers/subscriptions_reducers\";\r\nimport {putDialogUserThunkCreator} from \"../../Redux/reducers/dialogs_reducer\";\r\nimport {getFollow, getProfile, getStatusProfile} from \"../../Redux/selectors/profile_selectors\";\r\nimport {getOwnerId} from \"../../Redux/selectors/auth_selectors\";\r\n\r\n/*function withRouter(Component: FC) {\r\n    function ComponentWithRouterProp(props: any) {\r\n        let location = useLocation();\r\n        let navigate = useNavigate();\r\n        let params = useParams();\r\n        return (\r\n            <Component\r\n                {...props}\r\n                router={{ location, navigate, params }}\r\n            />\r\n        );\r\n    }\r\n\r\n    return ComponentWithRouterProp;\r\n}\r\n\r\ntype PropsType = {\r\n    router: any\r\n}*/\r\n\r\nconst ProfileContainer = () => {\r\n    let { userId }= useParams<{ userId: string | undefined}>()\r\n    let id: number = Number(userId)\r\n    console.log(useParams())\r\n    const dispatch = useAppDispatch()\r\n    const profile = useAppSelector(getProfile)\r\n    const status = useAppSelector(getStatusProfile)\r\n    const follow = useAppSelector(getFollow)\r\n    const authorizedUserId = useAppSelector((getOwnerId))\r\n\r\n    const navigate = useNavigate()\r\n\r\n    console.log(userId)\r\n    useEffect(() => {\r\n        if (!id) {id = authorizedUserId}\r\n        dispatch(userProfileThunkCreator(id))\r\n        dispatch(getStatusThunkCreator(id))\r\n        dispatch(getFollowThunkCreator(id))\r\n    }, [userId])\r\n\r\n    useEffect(() => {\r\n\r\n    }, [])\r\n\r\n    let onFollowProfileChange = (userId: number, follow: boolean) => {\r\n        dispatch(onFollowProfileChangeThunkCreator(userId, follow))\r\n        dispatch(getSubscriptionsThunkCreator(true))\r\n    }\r\n\r\n    let onPutDialogOnProfileChange = (userId: number) => {\r\n        navigate(`/dialogs/${userId}`)\r\n        dispatch(putDialogUserThunkCreator(userId))\r\n    }\r\n\r\n        return <Profile\r\n                        isOwner={!!userId}\r\n                        profile={profile}\r\n                        status={status}\r\n                        follow={follow}\r\n                        onFollowProfileChange={onFollowProfileChange}\r\n                        onPutDialogOnProfileChange={onPutDialogOnProfileChange}\r\n        />\r\n\r\n}\r\n\r\nexport default withAuthNavigate(ProfileContainer)","import React, {FC} from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {Navigate} from 'react-router-dom';\r\nimport {RootState} from \"../../Redux/reduxStore\";\r\n\r\nlet mapStateToProps = (state: RootState) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\nexport const withAuthNavigate = (Component: FC<any>) => {\r\n\r\n    class NavigateComponent extends React.Component<{isAuth: boolean}> {\r\n        render() {\r\n            if (!this.props.isAuth) {\r\n                return <Navigate to={'/login'}/>\r\n            }\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectWithAuthNavigate = connect(mapStateToProps)(NavigateComponent)\r\n\r\n    return ConnectWithAuthNavigate\r\n}\r\n"],"names":["getProfile","state","profile","getStatusProfile","status","getFollow","follow","props","_useState","useState","ownerLike","_useState2","_slicedToArray","likeActive","setLikeActive","_useState3","likeCount","_useState4","setLikeCount","dispatch","useAppDispatch","useEffect","console","log","_jsxs","className","s","children","_jsx","src","message","process","onClick","setLikePostActionCreator","id","alt","MyPostsForm","React","Formik","initialValues","newPost","validateOnBlur","onSubmit","values","_ref","resetForm","createNewPost","undefined","_ref2","handleBlur","handleChange","handleSubmit","isValid","dirty","Box","display","flexDirection","width","maxWidth","m","sx","flexGrow","TextField","type","name","onChange","value","onBlur","color","label","variant","fullWidth","border","input","InputLabelProps","Button","disabled","postElements","posts","map","p","Post","mt","connect","newPostText","AddPostActionCreator","MyPosts","ProfileStatus","editMode","setEditMode","setStatus","ownerId","userId","alignItems","justifyContent","Typography","isOwner","ModeEditIcon","ml","margin","e","currentTarget","autoFocus","putStatusThunkCreator","Contact","contactTitle","contactValue","Information","lookingForAJob","lookingForAJobDescription","aboutMe","Object","keys","contacts","filter","i","useAppSelector","getOwnerId","defaultPhoto","auth","setShowFullPhoto","Card","borderRadius","xs","sm","background","gap","CardMedia","component","image","photos","large","height","onFollowProfileChange","PersonRemoveIcon","PersonAddIcon","startIcon","RateReviewIcon","onPutDialogOnProfileChange","fullName","Preloader","ProfileInfo","MyPostsContainer","withAuthNavigate","useParams","Number","authorizedUserId","navigate","useNavigate","userProfileThunkCreator","getStatusThunkCreator","getFollowThunkCreator","Profile","onFollowProfileChangeThunkCreator","getSubscriptionsThunkCreator","concat","putDialogUserThunkCreator","mapStateToProps","isAuth","Component","NavigateComponent","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","this","_objectSpread","Navigate","to"],"sourceRoot":""}
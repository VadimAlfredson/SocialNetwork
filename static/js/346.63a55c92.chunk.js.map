{"version":3,"file":"static/js/346.63a55c92.chunk.js","mappings":"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","sources":["webpack://react-vadim/./src/components/Users/users.module.css?9211","webpack://react-vadim/./src/components/common/Paginator/paginator.module.css?28dc","components/common/Paginator/Paginator.tsx","components/Users/Users.tsx","components/Users/UsersContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"usersComponent\":\"users_usersComponent__8nRZo\",\"itemUser\":\"users_itemUser__x5owb\",\"avatar\":\"users_avatar__erVMZ\",\"infoUser\":\"users_infoUser__y2HtR\",\"followButton\":\"users_followButton__ExoVv\",\"massageButton\":\"users_massageButton__-K1Un\",\"buttonStyle\":\"users_buttonStyle__jG05x\",\"nameUser\":\"users_nameUser__9hBV1\",\"statusUser\":\"users_statusUser__F2WyE\",\"navLinkToLogin\":\"users_navLinkToLogin__wH+jC\"};","// extracted by mini-css-extract-plugin\nexport default {\"activePage\":\"paginator_activePage__eWc4N\",\"paginator\":\"paginator_paginator__QVHI9\",\"pageNumber\":\"paginator_pageNumber__7A1XW\"};","import React, {FC, useState} from \"react\";\r\nimport s from \"../Paginator/paginator.module.css\"\r\n\r\ntype PropsType = {\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onPageChange: (p: number) => void\r\n}\r\n\r\nlet Paginator: FC<PropsType> = (props) => {\r\n    let pageCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pageCount; i++) {\r\n        pages.push(i)\r\n    }\r\n    ;\r\n    let portionSize = 10\r\n    let portionCount = Math.ceil(pageCount / portionSize)\r\n    let [portionNumber, setPortionNumber] = useState(1)\r\n    let leftPortionNumber = (portionNumber - 1) * portionSize + 1\r\n    let rightPortionNumber = portionNumber * portionSize\r\n    return (\r\n            <div className={s.paginator}>\r\n                {portionNumber > 1 &&\r\n                <button className={s.pageNumber} onClick={() => {setPortionNumber(portionNumber - 1)}}>left</button>\r\n                }\r\n                {pages\r\n                    .filter(p => p >= leftPortionNumber && p <= rightPortionNumber)\r\n                    .map(p => {\r\n                        // @ts-ignore\r\n                        return <span className={props.currentPage === p ? s.activePage : s.pageNumber}\r\n                                     onClick={() => {\r\n                                         props.onPageChange(p)\r\n                                     }} key={p}\r\n                        >{p}</span>\r\n                    }\r\n                )}\r\n                {portionCount > portionNumber &&\r\n                <button className={s.pageNumber}\r\n                onClick={() => {setPortionNumber(portionNumber + 1)}}\r\n                >right</button>\r\n                }\r\n            </div>\r\n    )\r\n};\r\n\r\nexport default Paginator","import React, {FC} from \"react\";\r\nimport {UserType} from \"../../Redux/users_reducers\";\r\nimport s from \"../Users/users.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\n\r\ntype PropsType = {\r\n    users: Array<UserType>\r\n    totalUsersCount: number\r\n    followingInProgress: Array<number>\r\n    pageSize: number\r\n    currentPage: number\r\n    onPageChange: (pageNumber: number) => void\r\n    onFollowChange: (id: number, followed: boolean) => void\r\n    isFetching: boolean\r\n    isAuth: boolean\r\n}\r\n\r\nlet Users: FC<PropsType> = (props) => {\r\n    return (\r\n        <div className={s.usersComponent}>\r\n            <Paginator\r\n                totalUsersCount={props.totalUsersCount}\r\n                pageSize={props.pageSize}\r\n                currentPage={props.currentPage}\r\n                onPageChange={props.onPageChange}\r\n            />\r\n            {props.isFetching ? <Preloader/> :\r\n                <div>\r\n                    {\r\n                        props.users.map((u: UserType) => <div className={s.itemUser} key={u.id}>\r\n                            <div className={s.avatar}>\r\n                                <NavLink to={'/profile/' + u.id}>\r\n                                    <img src={u.photos.small !== null ? u.photos.small :\r\n                                        'https://shapka-youtube.ru/wp-content/uploads/2021/02/avatarka-dlya-skaypa-dlya-parney.jpg'\r\n                                    } alt={'картинка'}/>\r\n                                </NavLink>\r\n                            </div>\r\n                            <div className={s.followButton}>\r\n                                {props.isAuth &&\r\n                                    <button className={s.buttonStyle}\r\n                                            disabled={props.followingInProgress.includes(u.id)}\r\n                                            onClick={() => (props.onFollowChange(u.id, u.followed))\r\n                                            }>{u.followed ? 'Unfollow' : 'Follow'}\r\n                                    </button>}\r\n                                {!props.isAuth &&\r\n                                    <NavLink className={s.navLinkToLogin} to={\"../login\"}>\r\n                                        Register to subscribe\r\n                                    </NavLink>\r\n                                }\r\n                            </div>\r\n                            <div className={s.massageButton}>\r\n                                {props.isAuth &&\r\n                                    <button className={s.buttonStyle}\r\n                                            onClick={() => {\r\n                                            }}>Message\r\n                                    </button>}\r\n                            </div>\r\n\r\n                            <div className={s.infoUser}>\r\n                                <div className={s.nameUser}>{u.name}</div>\r\n                                <div className={s.statusUser}>{u.status}</div>\r\n                            </div>\r\n                        </div>)}\r\n                </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Users from \"./Users\";\r\nimport {AddStateType} from \"../../Redux/reduxStore\";\r\nimport {\r\n    followed,\r\n    setCurrentPage,\r\n    toggleIsFetching,\r\n    setTotalUsersCount,\r\n    setUsers,\r\n    toggleIsFollowing,\r\n    getUsersThunkCreator,\r\n    onPageChangeThunkCreator,\r\n    onFollowChangeThunkCreator, UserType,\r\n} from \"../../Redux/users_reducers\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {withAuthNavigate} from \"../hoc/witAuthNavigate\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress, getIsAuth, getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers\r\n} from \"../../Redux/users_selectors\";\r\n\r\ntype PropsType = {\r\n    currentPage: number\r\n    pageSize: number\r\n    isFetching: boolean\r\n    users: Array<UserType>\r\n    totalUsersCount: number\r\n    isAuth: boolean\r\n\r\n    getUsersThunkCreator: (currentPage: number, pageSize: number) => void\r\n    onPageChangeThunkCreator: (pageNumber: number, pageSize: number) => void\r\n    onFollowChangeThunkCreator: (userId: number, follow: boolean) => void\r\n    followingInProgress: Array<number>\r\n}\r\n\r\n\r\nclass UsersContainer extends React.Component<PropsType> {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsersThunkCreator(this.props.currentPage, this.props.pageSize)\r\n    }\r\n\r\n    onPageChange = (pageNumber: number) => {\r\n        this.props.onPageChangeThunkCreator(pageNumber, this.props.pageSize)\r\n    }\r\n\r\n    onFollowChange = (userId: number, follow: boolean) => {\r\n        this.props.onFollowChangeThunkCreator(userId, follow)\r\n    }\r\n\r\n    render(): React.ReactNode {\r\n\r\n        return <>\r\n                <Users\r\n                    isAuth={this.props.isAuth}\r\n                    isFetching={this.props.isFetching}\r\n                    users={this.props.users}\r\n                    pageSize={this.props.pageSize}\r\n                    currentPage={this.props.currentPage}\r\n                    totalUsersCount={this.props.totalUsersCount}\r\n                    onPageChange={this.onPageChange}\r\n                    onFollowChange={this.onFollowChange}\r\n                    followingInProgress={this.props.followingInProgress}\r\n                />\r\n        </>\r\n    }\r\n\r\n}\r\n\r\nlet mapStateToProps = (state: AddStateType) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n        isAuth: getIsAuth(state),\r\n        isFetching: getIsFetching(state)\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,\r\n        {\r\n            followed,\r\n            setUsers,\r\n            setCurrentPage,\r\n            setTotalUsersCount,\r\n            toggleIsFetching,\r\n            toggleIsFollowing,\r\n            getUsersThunkCreator,\r\n            onPageChangeThunkCreator,\r\n            onFollowChangeThunkCreator,\r\n        })\r\n)(UsersContainer)"],"names":["props","pageCount","Math","ceil","totalUsersCount","pageSize","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionNumber","rightPortionNumber","className","s","onClick","filter","p","map","currentPage","onPageChange","isFetching","Preloader","users","u","to","id","src","photos","small","alt","isAuth","disabled","followingInProgress","includes","onFollowChange","followed","name","status","UsersContainer","pageNumber","onPageChangeThunkCreator","userId","follow","onFollowChangeThunkCreator","this","getUsersThunkCreator","React","compose","connect","state","getUsers","getPageSize","getTotalUsersCount","getCurrentPage","getFollowingInProgress","getIsAuth","getIsFetching","setUsers","setCurrentPage","setTotalUsersCount","toggleIsFetching","toggleIsFollowing"],"sourceRoot":""}
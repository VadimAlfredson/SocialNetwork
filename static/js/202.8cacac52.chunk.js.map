{"version":3,"file":"static/js/202.8cacac52.chunk.js","mappings":"kLACA,GAAgB,QAAU,yBAAyB,aAAe,8BAA8B,UAAY,2BAA2B,WAAa,4BAA4B,eAAiB,gCAAgC,UAAY,2BAA2B,OAAS,wBAAwB,cAAgB,+BAA+B,SAAW,0BAA0B,WAAa,4BAA4B,gBAAkB,iCAAiC,iBAAmB,kCAAkC,cAAgB,+BAA+B,YAAc,6BAA6B,QAAU,yBAAyB,WAAa,4BAA4B,YAAc,6BAA6B,gBAAkB,iCAAiC,iBAAmB,kCAAkC,YAAc,6BAA6B,iBAAmB,kCAAkC,OAAS,wBAAwB,mBAAqB,oCAAoC,kBAAoB,mCAAmC,gBAAkB,iCAAiC,iBAAmB,kCAAkC,kBAAoB,mCAAmC,cAAgB,+BAA+B,qBAAuB,sCAAsC,cAAgB,gC,mBCIt0CA,EAAa,SAACC,GAEvB,OAAOC,EAAAA,EAAAA,KAACC,EAAAA,GAAO,CAACC,GAAI,YAAcH,EAAMI,GAAIC,QAAS,WAAOL,EAAMM,kBAAkBN,EAAMI,GAAG,EAChFG,UAAW,SAAAC,GAAW,OAAIA,EAAYC,SAAWC,EAAAA,OAAWA,EAAAA,UAAY,EAACC,SACjFX,EAAMY,MAEf,ECLaC,EAAe,SAACb,GAYzB,IAAAc,GAAoCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA9CI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAChCI,GAAwCL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAlDE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GAChCG,EAAUxB,EAAMwB,QACfC,QAAQ,WAAW,KACnBA,QAAQ,WAAW,KACnBA,QAAQ,WAAW,KACnBA,QAAQ,UAAU,KACvBC,QAAQC,IAAI3B,EAAM4B,UAClB,IAAIC,EAAa7B,EAAM4B,WAAa5B,EAAM8B,QAAW9B,EAAM+B,YAAc/B,EAAMgC,aAAgBhC,EAAMiC,cAGrG,OAAOhC,EAAAA,EAAAA,KAAA,OAAKM,UAAWW,GAAeI,EAAgBZ,EAAAA,cAAkBA,EAAAA,KAAOC,UAC3EuB,EAAAA,EAAAA,MAAA,OAAK3B,UAAWP,EAAM4B,WAAa5B,EAAM8B,QAAUpB,EAAAA,gBAAoBA,EAAAA,WAAcL,QAAS,WAC1Fc,IAAgBG,GAAgB,SAAAJ,GAAW,OAAKA,CAAW,EAC/D,EAAEP,SAAA,EACEV,EAAAA,EAAAA,KAAA,OAAAU,UACIV,EAAAA,EAAAA,KAAA,OAAKM,UAAWG,EAAAA,YAAeyB,IAAKN,OAExC5B,EAAAA,EAAAA,KAAA,OAAKM,UAAWP,EAAM4B,WAAa5B,EAAM8B,QACrCpB,EAAAA,iBACAA,EAAAA,YAAcC,UACduB,EAAAA,EAAAA,MAAA,KAAG3B,UAAWP,EAAM4B,WAAa5B,EAAM8B,QAClC9B,EAAMoC,OAAS1B,EAAAA,iBAAqBA,EAAAA,mBACpCV,EAAMoC,OAAS1B,EAAAA,YAAgBA,EAAAA,kBACnCC,SAAA,CAAEa,GAAQvB,EAAAA,EAAAA,KAAA,UACPA,EAAAA,EAAAA,KAAA,OACIM,UAAWW,IAAgBI,EAAgBZ,EAAAA,gBAAoBA,EAAAA,iBAC/DL,QAAS,WACLc,GAAe,GACfI,GAAiB,SAAAD,GAAa,OAAKA,CAAa,GACpD,EAAEX,UACFV,EAAAA,EAAAA,KAAA,OAAKM,UAAWG,EAAAA,kBACXyB,IAAKE,wDAItBH,EAAAA,EAAAA,MAAA,OAAK3B,UAAWe,EAAgBZ,EAAAA,qBAAyBA,EAAAA,iBAAmBC,SAAA,CAAC,gDAC7BV,EAAAA,EAAAA,KAAA,UAC5CA,EAAAA,EAAAA,KAAA,UAAQI,QAAS,WACbL,EAAMsC,sBAAsBtC,EAAMuC,UAAWvC,EAAM4B,WAAa5B,EAAM8B,QAAU9B,EAAMwC,YAAcxC,EAAM4B,UAC1GL,GAAiB,EACrB,EAAEZ,SAAC,SAEHV,EAAAA,EAAAA,KAAA,UAAQI,QAAS,WACbkB,GAAiB,EACrB,EAAEZ,SAAC,cAKnB,E,mBC9Da8B,EAAiB,SAACzC,GAI3B,IAAM0C,EAAmBC,EAAAA,KAKzB,OAAO1C,EAAAA,EAAAA,KAAC2C,EAAAA,GAAM,CACVC,cAAe,CACXC,YAAa,IAEjBC,gBAAc,EACdC,SAAU,SAACC,EAAMC,GAAmB,IAAhBC,EAASD,EAATC,WATA,SAACF,GAErBjD,EAAMoD,oBAAoBpD,EAAMqD,SAAUJ,EAC9C,CAOQK,CAAkBL,EAAOH,aACzBpB,QAAQC,IAAIsB,EAAOH,aACnBK,EAAU,CAACF,YAAQM,GACvB,EACAb,iBAAkBA,EAAiB/B,SAElC,SAAA6C,GAAA,IACGP,EAAMO,EAANP,OACAQ,EAAUD,EAAVC,WACAC,EAAYF,EAAZE,aACAC,EAAOH,EAAPG,QACAC,EAAYJ,EAAZI,aACAC,EAAKL,EAALK,MAAK,OAET3B,EAAAA,EAAAA,MAAA,OAAK3B,UAAWG,EAAAA,cAAgBC,SAAA,EAC5BV,EAAAA,EAAAA,KAAA,SACIM,UAAWG,EAAAA,gBACXoD,KAAM,WACNlD,KAAM,cACNmD,SAAUL,EACVM,OAAQP,EACRQ,MAAOhB,EAAOH,YACdoB,YAAa,qBACfjE,EAAAA,EAAAA,KAAA,UACFA,EAAAA,EAAAA,KAAA,UACIM,UAAWG,EAAAA,iBACXyD,UAAWR,IAAYE,EACvBxD,QAAS,WAAOuD,GAAc,EAC9BE,KAAM,SAASnD,SAClB,WAEC,GAGd,ECnDayD,EAAa,SAACpE,GAIvB,OACIC,EAAAA,EAAAA,KAACwC,EAAc,CACXY,SAAUrD,EAAMqD,SAChBD,oBAAqBpD,EAAMoD,qBAGvC,E,mBCZaiB,EAAa,SAACC,GACvB,OAAOA,EAAMC,QAAQA,OACzB,EACaC,EAAc,SAACF,GACxB,OAAOA,EAAMC,QAAQE,QACzB,EACaC,EAAc,SAACJ,GACxB,OAAOA,EAAMC,QAAQlB,QACzB,EACasB,EAAmB,SAACL,GAC7B,OAAOA,EAAMC,QAAQtC,aACzB,EACa2C,EAAiB,SAACN,GAC3B,OAAOA,EAAMC,QAAQM,WACzB,EACaC,EAAmB,SAACR,GAC7B,OAAOA,EAAMC,QAAQQ,aACzB,E,UCoHA,EA5GgB,WACZ,IAAMR,GAAyBS,EAAAA,EAAAA,IAAeX,GACxCI,GAA0BO,EAAAA,EAAAA,IAAeR,GACzCnB,GAAmB2B,EAAAA,EAAAA,IAAeN,GAClC5C,GAAkBkD,EAAAA,EAAAA,IAAeC,EAAAA,IACjCjD,GAAuBgD,EAAAA,EAAAA,IAAeE,EAAAA,IACtCjD,GAAwB+C,EAAAA,EAAAA,IAAeL,GACvCI,GAAwBC,EAAAA,EAAAA,IAAeF,GACvCD,GAA6BG,EAAAA,EAAAA,IAAeJ,GAC5C7C,GAAqBiD,EAAAA,EAAAA,IAAeG,EAAAA,IAE1CrE,GAAwCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7CsE,EAAYpE,EAAA,GAAEqE,EAAerE,EAAA,GAE9BsE,GAAWC,EAAAA,EAAAA,MAGbjD,EAAwB,SAACC,EAAmBiD,GAC5CF,GAASG,EAAAA,EAAAA,IAA0BlD,EAAWiD,GAClD,GAGAE,EAAAA,EAAAA,YAAU,WAEN,OADAJ,GAASK,EAAAA,EAAAA,OACF,WAAOL,GAASM,EAAAA,EAAAA,MAAoC,CAC/D,GAAG,IAEH,IAMMtF,EAAoB,SAACkF,GACvBF,GAASO,EAAAA,EAAAA,IAA4BL,IAPX,SAACA,GAC3BjB,EAAQuB,MAAK,SAAAC,GAAC,OAAIA,EAAE3F,KAAOoF,EACnBF,GAASU,EAAAA,EAAAA,IAA0B,CAACC,MAAOF,EAAEG,OAAOC,MAAQJ,EAAEG,OAAOC,MAAQnE,EAAcoE,SAAUL,EAAEK,SAAUvB,YAAakB,EAAE3F,MACtIsB,QAAQC,IAAI,KAAK,GAEvB,CAGI0E,CAAwBb,EAE5B,EAKApE,GAAsCL,EAAAA,EAAAA,UAAS,IAAoBM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA9DkF,EAAYjF,EAAA,GAAEkF,EAAelF,EAAA,IAElCqE,EAAAA,EAAAA,YAAU,WACN,IAAIc,EAAa,GACjB,GAAIjC,EAAQkC,OAAS,EACrB,IAAK,IAAIV,EAAI,EAAGA,GAAKxB,EAAQkC,OAASrB,EAAeA,EAAeb,EAAQkC,QAASV,IACjFS,EAAWE,KAAKnC,EAAQwB,IAE5BQ,EAAgBC,GAChB9E,QAAQC,IAAI6E,EAChB,GAAG,CAACjC,EAASlB,EAAU+B,IAEvB,IAAIuB,EACApC,EAAQ,GACR+B,EAAaM,KACb,SAAAC,GAAC,OAAI5G,EAAAA,EAAAA,KAACF,EAAU,CACZa,KAAMiG,EAAET,SACRhG,GAAIyG,EAAEzG,GAENE,kBAAmBA,GADduG,EAAEzG,GACgC,KACvCH,EAAAA,EAAAA,KAACC,EAAAA,GAAO,CAACC,GAAI,SAASQ,SAAC,mBAE3BmG,EACArC,EAAS,GACLA,EAASmC,KACL,SAAAG,GAAC,OACG9G,EAAAA,EAAAA,KAACY,EAAY,CACTW,QAASuF,EAAEC,KAEXpF,SAAUmF,EAAEnF,SACZE,QAASA,EACTG,cAAeA,EACfF,WAAYA,EACZK,OAAQ2E,EAAE3E,OACVE,sBAAuBA,EACvBC,UAAWwE,EAAE3G,GACboC,YAAauE,EAAEvE,YACfR,aAAcA,GATT+E,EAAE3G,GAUT,KACNH,EAAAA,EAAAA,KAAA,OAAAU,UAAKV,EAAAA,EAAAA,KAAA,MAAIM,UAAWG,EAAAA,OAASC,SAAC,2BAC1C,OACIuB,EAAAA,EAAAA,MAAA,OAAK3B,UAAWG,EAAAA,QAAUC,SAAA,EACtBuB,EAAAA,EAAAA,MAAA,OAAAvB,SAAA,EACIV,EAAAA,EAAAA,KAACC,EAAAA,GAAO,CAACC,GAAI,SAAUI,UAAWG,EAAAA,UAAYC,SAAC,gBACnDV,EAAAA,EAAAA,KAAA,OAAKM,UAAWG,EAAAA,aAAeC,SAC1BgG,IACGvB,EAAeb,EAAQkC,SAC3BxG,EAAAA,EAAAA,KAAA,OAAKM,UAAWG,EAAAA,eAAkBL,QAAS,kBAAMgF,GAAgB,SAAAD,GAAY,OAAIA,EAAe,CAAC,GAAC,EAACzE,SAAC,yBAGxGuB,EAAAA,EAAAA,MAAA,OAAK3B,UAAWG,EAAAA,SAAWC,SAAA,EACvBV,EAAAA,EAAAA,KAACC,EAAAA,GAAO,CAACC,GAAE,YAAA8G,OAAcpC,GAAetE,UAAWG,EAAAA,cAAgBC,SAAEoE,KACrE9E,EAAAA,EAAAA,KAAA,OAAKM,UAAWG,EAAAA,QAAUC,SACrBmG,KAEL7G,EAAAA,EAAAA,KAAA,OAAKM,UAAWG,EAAAA,WAAaC,UACzBV,EAAAA,EAAAA,KAACmE,EAAU,CACPf,SAAUA,EACVD,oBA9DQ,SAACoC,EAAgB0B,GACzC5B,GAAS6B,EAAAA,EAAAA,IAA8B3B,EAAQ0B,GACnD,WAmEJ,E,oBC/HA,GAAeE,EAAAA,EAAAA,IACXC,EAAAA,EADJ,CAEEC,E,mJCHEC,EAAkB,SAACjD,GACnB,MAAO,CACHkD,OAAQlD,EAAMmD,KAAKD,OAE3B,EACaH,EAAmB,SAACK,GAAwB,IAE/CC,EAAiB,SAAAC,IAAAC,EAAAA,EAAAA,GAAAF,EAAAC,GAAA,IAAAE,GAAAC,EAAAA,EAAAA,GAAAJ,GAAA,SAAAA,IAAA,OAAAK,EAAAA,EAAAA,GAAA,KAAAL,GAAAG,EAAAG,MAAA,KAAAC,UAAA,CAMlB,OANkBC,EAAAA,EAAAA,GAAAR,EAAA,EAAAS,IAAA,SAAAnE,MACnB,WACI,OAAKoE,KAAKrI,MAAMwH,QAGTvH,EAAAA,EAAAA,KAACyH,GAASY,EAAAA,EAAAA,GAAA,GAAKD,KAAKrI,SAFhBC,EAAAA,EAAAA,KAACsI,EAAAA,GAAQ,CAACpI,GAAI,UAG7B,KAACwH,CAAA,CANkB,CAASa,EAAAA,WAWhC,OAF8BC,EAAAA,EAAAA,IAAQlB,EAARkB,CAAyBd,EAG3D,C","sources":["webpack://react-vadim/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/MessagesItem/MessagesItem.tsx","components/Dialogs/AddMessage/AddMessageForm.tsx","components/Dialogs/AddMessage/AddMessage.tsx","Redux/selectors/dialogs_selectors.ts","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx","components/hoc/witAuthNavigate.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__GBcEp\",\"dialogsUsers\":\"Dialogs_dialogsUsers__LBmt6\",\"dialogDiv\":\"Dialogs_dialogDiv__uycfj\",\"dialogItem\":\"Dialogs_dialogItem__k9CuM\",\"getMoreDialogs\":\"Dialogs_getMoreDialogs__n6h0D\",\"addDialog\":\"Dialogs_addDialog__OC9fh\",\"active\":\"Dialogs_active__zK1A-\",\"titleMessages\":\"Dialogs_titleMessages__2oe-t\",\"messages\":\"Dialogs_messages__Ly6dr\",\"addMessage\":\"Dialogs_addMessage__+SI4K\",\"inputAddMessage\":\"Dialogs_inputAddMessage__KTTQa\",\"buttonAddMessage\":\"Dialogs_buttonAddMessage__gnvoU\",\"divAddMessage\":\"Dialogs_divAddMessage__EcDqL\",\"iconMessage\":\"Dialogs_iconMessage__L+5-e\",\"message\":\"Dialogs_message__pyaWz\",\"divMessage\":\"Dialogs_divMessage__lpG8t\",\"messageForm\":\"Dialogs_messageForm__5uYWH\",\"divOwnerMessage\":\"Dialogs_divOwnerMessage__vv-7J\",\"ownerMessageForm\":\"Dialogs_ownerMessageForm__zHNC0\",\"textMessage\":\"Dialogs_textMessage__rleMB\",\"ownerTextMessage\":\"Dialogs_ownerTextMessage__Sdmym\",\"h3text\":\"Dialogs_h3text__5icbU\",\"ownerMessageViewed\":\"Dialogs_ownerMessageViewed__boBPG\",\"textMessageViewed\":\"Dialogs_textMessageViewed__i1cxU\",\"deleteMessageOn\":\"Dialogs_deleteMessageOn__Uwr8k\",\"deleteMessageOff\":\"Dialogs_deleteMessageOff__FcrKb\",\"deleteMessageIcon\":\"Dialogs_deleteMessageIcon__unqLp\",\"activeMessage\":\"Dialogs_activeMessage__ie+E3\",\"warningDeleteMessage\":\"Dialogs_warningDeleteMessage__6S48Q\",\"companionName\":\"Dialogs_companionName__AzAMZ\"};","import s from \"../Dialogs.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\n\r\nexport const DialogItem = (props: {id: number, name: string, onGetMessagesUser: (userId: number) => void}) => {\r\n\r\n    return <NavLink to={\"/dialogs/\" + props.id} onClick={() => {props.onGetMessagesUser(props.id)}}\r\n                 className={dialogsData => dialogsData.isActive ? s.active : s.dialogItem}>\r\n        {props.name}\r\n    </NavLink>\r\n};","import React, {useEffect, useState} from \"react\";\r\nimport s from \"../Dialogs.module.css\";\r\nimport {dialogsType} from \"../../../Redux/reducers/dialogs_reducer\";\r\nimport dialogs from \"../Dialogs\";\r\nimport {useAppSelector} from \"../../../Redux/reduxStore\";\r\n\r\nexport const MessagesItem = (props: {\r\n    onDeleteMessageChange: (messageId: string, userId: number) => void,\r\n    message: string,\r\n    senderId: number\r\n    OwnerId: number\r\n    companionIcon: string\r\n    ownerPhoto: string\r\n    viewed: boolean\r\n    messageId: string\r\n    recipientId: number\r\n    defaultPhoto: string\r\n}) => {\r\n    let [editMessage, setEditMessage] = useState(false)\r\n    let [deleteMessage, setDeleteMessage] = useState(false)\r\n    let message = props.message\r\n        .replace(/&quot;/gi, `\"`)\r\n        .replace(/&#171;/gi, `\"`)\r\n        .replace(/&#187;/gi, `\"`)\r\n        .replace(/&#39;/gi, `'`)\r\n    console.log(props.senderId)\r\n    let senderIcon = props.senderId === props.OwnerId ? (props.ownerPhoto || props.defaultPhoto) : props.companionIcon\r\n\r\n\r\n    return <div className={editMessage || deleteMessage ? s.activeMessage : s.none}>\r\n        <div className={props.senderId === props.OwnerId ? s.divOwnerMessage : s.divMessage} onClick={() => {\r\n            setEditMessage(!deleteMessage ? editMessage => !editMessage : true)\r\n        }}>\r\n            <div>\r\n                <img className={s.iconMessage} src={senderIcon}/>\r\n            </div>\r\n            <div className={props.senderId === props.OwnerId ?\r\n                s.ownerMessageForm :\r\n                s.messageForm}>\r\n                <a className={props.senderId === props.OwnerId ?\r\n                    (props.viewed ? s.ownerTextMessage : s.ownerMessageViewed) :\r\n                    (props.viewed ? s.textMessage : s.textMessageViewed)\r\n                }>{message}<br/>\r\n                    <div\r\n                        className={editMessage && !deleteMessage ? s.deleteMessageOn : s.deleteMessageOff}\r\n                        onClick={() => {\r\n                            setEditMessage(true)\r\n                            setDeleteMessage(deleteMessage => !deleteMessage)\r\n                        }}>\r\n                        <img className={s.deleteMessageIcon}\r\n                             src={process.env.PUBLIC_URL + '/free-icon-delete-6467128.png'}/>\r\n                    </div>\r\n                </a>\r\n            </div>\r\n            <div className={deleteMessage ? s.warningDeleteMessage : s.deleteMessageOff}>\r\n                Are you sure you want to delete the message?<br/>\r\n                <button onClick={() => {\r\n                    props.onDeleteMessageChange(props.messageId, props.senderId === props.OwnerId ? props.recipientId : props.senderId )\r\n                    setDeleteMessage(false)\r\n                }}>Yes\r\n                </button>\r\n                <button onClick={() => {\r\n                    setDeleteMessage(false)\r\n                }}>No\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}","import React from \"react\";\r\nimport {dialogsPageType} from \"../../../Redux/reducers/dialogs_reducer\";\r\nimport s from \"../Dialogs.module.css\";\r\nimport {Formik} from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\nexport const AddMessageForm = (props: {\r\n    onMessageSentChange: (userId: number, bodyMessage: string) => void\r\n    dialogId: number\r\n}) => {\r\n    const validationSchema = yup.string()\r\n    let addMessageElement = (values: string) => {\r\n        debugger\r\n        props.onMessageSentChange(props.dialogId, values);\r\n    }\r\n    return <Formik\r\n        initialValues={{\r\n            textMessage: '',\r\n        }}\r\n        validateOnBlur\r\n        onSubmit={(values, {resetForm}) => {\r\n            addMessageElement(values.textMessage)\r\n            console.log(values.textMessage)\r\n            resetForm({values: undefined})\r\n        }}\r\n        validationSchema={validationSchema}\r\n    >\r\n        {({\r\n            values,\r\n            handleBlur,\r\n            handleChange,\r\n            isValid,\r\n            handleSubmit,\r\n            dirty\r\n        }) => (\r\n        <div className={s.divAddMessage}>\r\n            <input\r\n                className={s.inputAddMessage}\r\n                type={'textarea'}\r\n                name={'textMessage'}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                value={values.textMessage}\r\n                placeholder={'Add new message'}\r\n            /><br/>\r\n            <button\r\n                className={s.buttonAddMessage}\r\n                disabled={!isValid && !dirty}\r\n                onClick={() => {handleSubmit()}}\r\n                type={'submit'}\r\n            >Send\r\n            </button>\r\n        </div>\r\n    )}\r\n    </Formik>\r\n}\r\n","import React from \"react\";\r\nimport {dialogsPageType} from \"../../../Redux/reducers/dialogs_reducer\";\r\nimport {AddMessageForm} from \"./AddMessageForm\";\r\n\r\nexport const AddMessage = (props: {\r\n    onMessageSentChange: (userId: number, bodyMessage: string) => void\r\n    dialogId: number\r\n}) => {\r\n    return (\r\n        <AddMessageForm\r\n            dialogId={props.dialogId}\r\n            onMessageSentChange={props.onMessageSentChange}\r\n        />\r\n    )\r\n}\r\n","import {RootState} from \"../reduxStore\";\r\n\r\nexport const getDialogs = (state: RootState) => {\r\n    return state.dialogs.dialogs\r\n}\r\nexport const getMessages = (state: RootState) => {\r\n    return state.dialogs.messages\r\n}\r\nexport const getDialogId = (state: RootState) => {\r\n    return state.dialogs.dialogId\r\n}\r\nexport const getCompanionIcon = (state: RootState) => {\r\n    return state.dialogs.companionIcon\r\n}\r\nexport const getCompanionId = (state: RootState) => {\r\n    return state.dialogs.companionId\r\n}\r\nexport const getCompanionName = (state: RootState) => {\r\n    return state.dialogs.companionName\r\n}\r\n\r\n","import React, {useEffect, useState} from \"react\";\r\nimport s from './Dialogs.module.css';\r\nimport {DialogItem} from \"./DialogItem/DialogItem\";\r\nimport {MessagesItem} from \"./MessagesItem/MessagesItem\";\r\nimport {AddMessage} from \"./AddMessage/AddMessage\";\r\nimport {\r\n    deleteMessagesUnmountThunkCreator,\r\n    deleteMessageThunkCreator,\r\n    dialogsType,\r\n    getDialogsThunkCreator,\r\n    getMessagesUserThunkCreator,\r\n    messageType,\r\n    postMessageToUserThunkCreator,\r\n    setCompanionIconAndNameAC,\r\n} from \"../../Redux/reducers/dialogs_reducer\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {useAppDispatch, useAppSelector} from \"../../Redux/reduxStore\";\r\nimport {\r\n    getCompanionIcon, getCompanionId,\r\n    getCompanionName,\r\n    getDialogId,\r\n    getDialogs,\r\n    getMessages\r\n} from \"../../Redux/selectors/dialogs_selectors\";\r\nimport {getDefaultPhoto, getOwnerId, getOwnerPhoto} from \"../../Redux/selectors/auth_selectors\";\r\n\r\n\r\nconst Dialogs = () => {\r\n    const dialogs: dialogsType[] = useAppSelector(getDialogs)\r\n    const messages: messageType[] = useAppSelector(getMessages)\r\n    const dialogId: number = useAppSelector(getDialogId)\r\n    const OwnerId: number = useAppSelector(getOwnerId)\r\n    const defaultPhoto: string = useAppSelector(getDefaultPhoto)\r\n    const companionIcon: string = useAppSelector(getCompanionIcon)\r\n    const companionName: string = useAppSelector(getCompanionName)\r\n    const companionId: number | null = useAppSelector(getCompanionId)\r\n    const ownerPhoto: string = useAppSelector(getOwnerPhoto)\r\n\r\n    const [dialogsCount, setDialogsCount] = useState(10)\r\n\r\n    const dispatch = useAppDispatch()\r\n\r\n\r\n    let onDeleteMessageChange = (messageId: string, userId: number) => {\r\n        dispatch(deleteMessageThunkCreator(messageId, userId))\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(getDialogsThunkCreator())\r\n        return () => {dispatch(deleteMessagesUnmountThunkCreator())}\r\n    }, [])\r\n\r\n    let getCompanionIconAndName = (userId: number) => {\r\n        dialogs.find(i => i.id === userId ?\r\n                dispatch(setCompanionIconAndNameAC({photo: i.photos.large ? i.photos.large : defaultPhoto, userName: i.userName, companionId: i.id})) :\r\n          console.log('sd')\r\n            )\r\n    }\r\n    const onGetMessagesUser = (userId: number) => {\r\n        dispatch(getMessagesUserThunkCreator(userId))\r\n        getCompanionIconAndName(userId)\r\n\r\n    }\r\n    const onMessageSentChange = (userId: number, bodyMessage: string) => {\r\n        dispatch(postMessageToUserThunkCreator(userId, bodyMessage))\r\n    }\r\n\r\n    let [dialogsState, setDialogsState] = useState([] as dialogsType[])\r\n\r\n    useEffect(() => {\r\n        let dialogsArr = [] as dialogsType[]\r\n        if (dialogs.length > 0){\r\n        for (let i = 0; i < (dialogs.length > dialogsCount ? dialogsCount : dialogs.length); i++) {\r\n            dialogsArr.push(dialogs[i])\r\n        }}\r\n        setDialogsState(dialogsArr)\r\n        console.log(dialogsArr)\r\n    }, [dialogs, dialogId, dialogsCount])\r\n\r\n    let dialogUsers =\r\n        dialogs[0] ?\r\n        dialogsState.map(\r\n        d => <DialogItem\r\n            name={d.userName}\r\n            id={d.id}\r\n            key={d.id}\r\n            onGetMessagesUser={onGetMessagesUser}/>\r\n        ) : <NavLink to={'/users'}>Search friends</NavLink>;\r\n\r\n    let messagesItem =\r\n        messages[0] ?\r\n            messages.map(\r\n                m =>\r\n                    <MessagesItem\r\n                        message={m.body}\r\n                        key={m.id}\r\n                        senderId={m.senderId}\r\n                        OwnerId={OwnerId}\r\n                        companionIcon={companionIcon}\r\n                        ownerPhoto={ownerPhoto}\r\n                        viewed={m.viewed}\r\n                        onDeleteMessageChange={onDeleteMessageChange}\r\n                        messageId={m.id}\r\n                        recipientId={m.recipientId}\r\n                        defaultPhoto={defaultPhoto}\r\n                    />\r\n            ) : <div><h3 className={s.h3text}>start chatting first</h3></div>\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div>\r\n                <NavLink to={'/users'} className={s.addDialog}>Add dialog</NavLink>\r\n            <div className={s.dialogsUsers}>\r\n                {dialogUsers}\r\n            </div>{(dialogsCount < dialogs.length) &&\r\n                <div className={s.getMoreDialogs} onClick={() => setDialogsCount(dialogsCount => dialogsCount + 5)}>Get more dialogs</div>}\r\n            </div>\r\n\r\n            <div className={s.messages}>\r\n                <NavLink to={`/profile/${companionId}`} className={s.companionName}>{companionName}</NavLink>\r\n                <div className={s.message}>\r\n                    {messagesItem}\r\n                </div>\r\n                <div className={s.addMessage}>\r\n                    <AddMessage\r\n                        dialogId={dialogId}\r\n                        onMessageSentChange={onMessageSentChange}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Dialogs","import React from \"react\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthNavigate} from \"../hoc/witAuthNavigate\";\r\n\r\n\r\nexport default compose(\r\n    withAuthNavigate\r\n)(Dialogs)","import React, {FC} from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {Navigate} from 'react-router-dom';\r\nimport {RootState} from \"../../Redux/reduxStore\";\r\n\r\nlet mapStateToProps = (state: RootState) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\nexport const withAuthNavigate = (Component: FC<any>) => {\r\n\r\n    class NavigateComponent extends React.Component<{isAuth: boolean}> {\r\n        render() {\r\n            if (!this.props.isAuth) {\r\n                return <Navigate to={'/login'}/>\r\n            }\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectWithAuthNavigate = connect(mapStateToProps)(NavigateComponent)\r\n\r\n    return ConnectWithAuthNavigate\r\n}\r\n"],"names":["DialogItem","props","_jsx","NavLink","to","id","onClick","onGetMessagesUser","className","dialogsData","isActive","s","children","name","MessagesItem","_useState","useState","_useState2","_slicedToArray","editMessage","setEditMessage","_useState3","_useState4","deleteMessage","setDeleteMessage","message","replace","console","log","senderId","senderIcon","OwnerId","ownerPhoto","defaultPhoto","companionIcon","_jsxs","src","viewed","process","onDeleteMessageChange","messageId","recipientId","AddMessageForm","validationSchema","yup","Formik","initialValues","textMessage","validateOnBlur","onSubmit","values","_ref","resetForm","onMessageSentChange","dialogId","addMessageElement","undefined","_ref2","handleBlur","handleChange","isValid","handleSubmit","dirty","type","onChange","onBlur","value","placeholder","disabled","AddMessage","getDialogs","state","dialogs","getMessages","messages","getDialogId","getCompanionIcon","getCompanionId","companionId","getCompanionName","companionName","useAppSelector","getOwnerId","getDefaultPhoto","getOwnerPhoto","dialogsCount","setDialogsCount","dispatch","useAppDispatch","userId","deleteMessageThunkCreator","useEffect","getDialogsThunkCreator","deleteMessagesUnmountThunkCreator","getMessagesUserThunkCreator","find","i","setCompanionIconAndNameAC","photo","photos","large","userName","getCompanionIconAndName","dialogsState","setDialogsState","dialogsArr","length","push","dialogUsers","map","d","messagesItem","m","body","concat","bodyMessage","postMessageToUserThunkCreator","compose","withAuthNavigate","Dialogs","mapStateToProps","isAuth","auth","Component","NavigateComponent","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","this","_objectSpread","Navigate","React","connect"],"sourceRoot":""}
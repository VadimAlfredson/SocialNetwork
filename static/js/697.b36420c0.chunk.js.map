{"version":3,"file":"static/js/697.b36420c0.chunk.js","mappings":"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","sources":["Redux/selectors/profile_selectors.ts","webpack://react-vadim/./src/components/Profile/MyPosts/MyPosts.module.css?831b","components/Profile/MyPosts/MyPostsForm.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","webpack://react-vadim/./src/components/Profile/Profile.module.css?b512","components/Profile/ProfileInfo/ProfileStatus.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","components/hoc/witAuthNavigate.tsx"],"sourcesContent":["import {RootState} from \"../reduxStore\";\r\n\r\nexport const getProfile = (state: RootState) => {\r\n    return state.profile.profile\r\n}\r\nexport const getPosts = (state: RootState) => {\r\n    return state.profile.posts\r\n}\r\nexport const getNewPostText = (state: RootState) => {\r\n    return state.profile.newPostText\r\n}\r\nexport const getStatusProfile = (state: RootState) => {\r\n    return state.profile.status\r\n}\r\nexport const getFollow = (state: RootState) => {\r\n    return state.profile.follow\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"createText\":\"MyPosts_createText__T-jsH\",\"buttonAddPost\":\"MyPosts_buttonAddPost__QtbW7\",\"addpost\":\"MyPosts_addpost__+irvX\"};","import React, {Dispatch} from 'react'\r\nimport Post from './Post/Post'\r\nimport s from './MyPosts.module.css'\r\nimport {profilePageType} from \"../../../Redux/reducers/profile_reducer\";\r\nimport {Formik} from \"formik\";\r\n\r\nexport const MyPostsForm = React.memo((props: {\r\n    createNewPost: (newPost: string) => void,\r\n}) => {\r\n    console.log('rerenderPost')\r\n    return <Formik\r\n        initialValues={{\r\n            newPost: '' as string\r\n        }}\r\n        validateOnBlur\r\n        onSubmit={(values, {resetForm}) => {\r\n            props.createNewPost(values.newPost)\r\n            console.log(values.newPost)\r\n            resetForm({values: undefined})\r\n        }}\r\n    >\r\n        {({\r\n              values,\r\n              handleBlur,\r\n              handleChange,\r\n              isValid,\r\n              handleSubmit,\r\n              dirty\r\n          }) => (\r\n            <div /*className={s.addpost}*/>\r\n                <input\r\n                    type={'input'}\r\n                    name={'newPost'}\r\n                    onChange={handleChange}\r\n                    placeholder={'Add text'}\r\n                    className={s.createText}\r\n                    value={values.newPost}\r\n                    onBlur={handleBlur}\r\n                />\r\n                <button\r\n                    className={s.buttonAddPost}\r\n                    disabled={!isValid && !dirty}\r\n                    onClick={() => {handleSubmit()}}\r\n                    type={'submit'}\r\n                >Send\r\n                </button>\r\n            </div>\r\n        )}\r\n\r\n    </Formik>\r\n})","import React, {Dispatch, FC, useEffect} from 'react'\r\nimport Post from './Post/Post'\r\nimport s from './MyPosts.module.css'\r\nimport {postsType} from \"../../../Redux/reducers/profile_reducer\";\r\nimport {MyPostsForm} from \"./MyPostsForm\";\r\n\r\ntype PropsType = {\r\n    posts: Array<postsType>,\r\n    createNewPost: (NewPost: string) => void,\r\n}\r\n\r\nconst MyPosts: FC<PropsType> = (props) => {\r\n    useEffect(() => {console.log(props.posts)}, [...props.posts])\r\n    let postElements = props.posts.map(\r\n        (p) => <Post message={p.message} likeCount={p.likeCount}  key={p.id} ownerLike={p.ownerLike} id={p.id}/>\r\n    );\r\n    console.log('Rerender')\r\n    return (\r\n        <div>\r\n            <MyPostsForm\r\n                createNewPost={props.createNewPost}\r\n            />\r\n            <div className={s.post}>\r\n                {postElements}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyPosts","import React, {Dispatch} from 'react'\r\nimport {\r\n    AddPostActionCreator,\r\n} from \"../../../Redux/reducers/profile_reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {RootState} from \"../../../Redux/reduxStore\";\r\n\r\nlet mapStateToProps = (state: RootState) => {\r\n    return {\r\n        posts: state.profile.posts,\r\n        newPostText: state.profile.newPostText\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch: Dispatch<any>) => {\r\n    return {\r\n        createNewPost: (newPost: string) => {\r\n            dispatch(AddPostActionCreator(newPost))\r\n        },\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer","// extracted by mini-css-extract-plugin\nexport default {\"profileClass\":\"Profile_profileClass__eq7lO\",\"profileInfo\":\"Profile_profileInfo__OVCEI\",\"avatarSide\":\"Profile_avatarSide__M2bsj\",\"avatarImg\":\"Profile_avatarImg__3Egiz\",\"fullPhoto\":\"Profile_fullPhoto__Yz2Tr\",\"inputPhoto\":\"Profile_inputPhoto__RonUU\",\"labelUpdatePhoto\":\"Profile_labelUpdatePhoto__rIkOS\",\"name\":\"Profile_name__7N8LX\",\"status\":\"Profile_status__pnE9e\",\"aboutMe\":\"Profile_aboutMe__UjygN\",\"editMode\":\"Profile_editMode__71+RX\",\"informationUser\":\"Profile_informationUser__7qzE9\",\"buttonFollow\":\"Profile_buttonFollow__w3i6m\",\"buttonUnfollow\":\"Profile_buttonUnfollow__wXenc\",\"buttonEditInfo\":\"Profile_buttonEditInfo__iPGTb\",\"profilePost\":\"Profile_profilePost__xVBaE\",\"statusEditImg\":\"Profile_statusEditImg__xboN9\"};","import s from './../Profile.module.css';\r\nimport React, {ChangeEvent, FC, useEffect, useState} from 'react';\r\nimport {useAppDispatch} from \"../../../Redux/reduxStore\";\r\nimport {putStatusThunkCreator} from \"../../../Redux/reducers/profile_reducer\";\r\nimport {Box, TextField, Typography} from \"@mui/material\";\r\nimport ModeEditIcon from '@mui/icons-material/ModeEdit';\r\n\r\ntype PropsType = {\r\n    status: string\r\n    isOwner: boolean\r\n    ownerId: number\r\n    userId: number\r\n}\r\n\r\nexport const ProfileStatus: FC<PropsType> = (props) => {\r\n    const dispatch = useAppDispatch()\r\n    let [editMode, setEditMode] = useState(false)\r\n\r\n    let activeStatusInput = () => setEditMode(!props.isOwner)\r\n\r\n    let deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        if (status !== props.status) {\r\n            dispatch(putStatusThunkCreator(status))\r\n        }\r\n    }\r\n\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    let onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setStatus(e.currentTarget.value)\r\n    };\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status]);\r\n\r\n    useEffect(() => {\r\n        console.log(props.ownerId === props.userId)\r\n    }, [props.userId])\r\n    return (\r\n        <Box>  {\r\n            !editMode && <Box display={'flex'}\r\n                              flexDirection={'row'}\r\n                              alignItems='center'\r\n                              m={'0 auto'}\r\n                              justifyContent={'center'}\r\n            >\r\n                <Typography\r\n                    variant={'subtitle1'}\r\n                    color={'#D0D3D4'}\r\n\r\n                >{props.status || ''}</Typography>\r\n\r\n                <span onClick={activeStatusInput}>{(props.ownerId === props.userId) &&\r\n                    <ModeEditIcon color={'info'} sx={{ml: '10px'}}/>}</span>\r\n            </Box>\r\n        }\r\n            <Box display={'flex'} justifyContent={'center'} margin={'auto'}>{editMode &&\r\n                    <TextField\r\n                        id=\"status\"\r\n                        label=\"Status\"\r\n                        variant=\"standard\"\r\n                        onChange={onStatusChange}\r\n                        autoFocus={true}\r\n                        value={status}\r\n                        onBlur={deactivateEditMode}\r\n                        color={'info'}\r\n                        fullWidth={true}\r\n                        sx={{m: '0 20px', maxWidth: '300px'}}\r\n                    />\r\n            }\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\n/*\r\nexport class ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activeStatusInput = () => {\r\n        this.setState(\r\n            {editMode: true}\r\n        )\r\n    }\r\n\r\n    deactivateEditMode = () => {\r\n        this.setState(\r\n            {editMode: false}\r\n        );\r\n        this.props.putStatusThunkCreator(this.state.status)\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        });\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div>  {\r\n                !this.state.editMode &&\r\n                <div>\r\n                    <span onDoubleClick={this.activeStatusInput} >{this.props.status || 'status'}</span>\r\n                </div>\r\n            }\r\n                { this.state.editMode &&\r\n                <div>\r\n                    <input\r\n                        onChange={this.onStatusChange}\r\n                        autoFocus={true}\r\n                        onBlur={this.deactivateEditMode}\r\n                        value={this.state.status}/>\r\n                </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}*/\r\n","import React, {FC, useEffect, useState} from 'react';\r\nimport s from './../Profile.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport {ProfileStatus} from \"./ProfileStatus\";\r\nimport {ProfileType} from \"../../../Redux/reducers/profile_reducer\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport profile from \"../Profile\";\r\nimport {useAppSelector} from \"../../../Redux/reduxStore\";\r\nimport {getOwnerId} from \"../../../Redux/selectors/auth_selectors\";\r\nimport {Box, Button, Card, CardMedia, Typography} from \"@mui/material\";\r\nimport PersonAddIcon from '@mui/icons-material/PersonAdd';\r\nimport PersonRemoveIcon from '@mui/icons-material/PersonRemove';\r\nimport RateReviewIcon from '@mui/icons-material/RateReview';\r\n\r\ntype PropsType = {\r\n    profile: ProfileType\r\n    status: string\r\n    isOwner: boolean\r\n    follow: boolean\r\n    onFollowProfileChange: (userId: number, follow: boolean) => void\r\n    onPutDialogOnProfileChange: (userId: number) => void\r\n}\r\n\r\nconst ProfileInfo: FC<PropsType> = (props) => {\r\n    const ownerId = useAppSelector(getOwnerId)\r\n    const defaultPhoto = useAppSelector(state => state.auth.defaultPhoto)\r\n    let [showFullPhoto, setShowFullPhoto] = useState(false)\r\n\r\n    useEffect(() => {\r\n        setShowFullPhoto(false)\r\n    }, [props.profile.userId])\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n    return <Card sx={{\r\n        display: 'flex',\r\n        borderRadius: '5px',\r\n        flexDirection: {xs: 'column', sm: 'row'},\r\n        background: 'rgba(0, 0, 0, 0)',\r\n        gap: 1,\r\n        flexGrow: 1\r\n    }}><Box display={'flex'} flexDirection={'column'}>\r\n        <CardMedia component='img'\r\n                   image={props.profile.photos.large ? props.profile.photos.large : defaultPhoto}\r\n                   sx={{width: '300px', height: '300px',\r\n                   borderRadius: '5px', m: 'auto'\r\n                   }}\r\n        />\r\n        <Box display={'flex'}\r\n             flexDirection={'row'}\r\n             m={'5px auto'} width={'300px'}\r\n             gap={'5px'}\r\n\r\n        >{(ownerId !== props.profile.userId) && props.isOwner &&\r\n            <Button\r\n                color={props.follow ? 'info' : 'warning'}\r\n                variant={props.follow ? 'outlined' : 'contained'}\r\n                onClick={() => {\r\n                    props.onFollowProfileChange(props.profile.userId, props.follow)\r\n                }}>{props.follow ? <PersonRemoveIcon /> : <PersonAddIcon />}</Button>}\r\n\r\n            {(ownerId !== props.profile.userId) && props.isOwner &&\r\n                <Button\r\n                    color={'info'}\r\n                    variant={'contained'}\r\n                    startIcon={<RateReviewIcon />}\r\n                    fullWidth={true}\r\n                    onClick={() => {\r\n                    props.onPutDialogOnProfileChange(props.profile.userId)\r\n                }}>Write new message</Button>}\r\n        </Box>\r\n    </Box>\r\n        <Box display='flex' flexDirection='column'\r\n             sx={{flexGrow: 1}} width={'100%'} >\r\n            <Typography color='#D0D3D4'\r\n                        sx={{m: '10px auto'}}\r\n                        variant={'h5'}\r\n            >\r\n                {props.profile.fullName}\r\n            </Typography>\r\n                <ProfileStatus status={props.status} isOwner={props.isOwner} ownerId={ownerId}\r\n                               userId={props.profile.userId}/>\r\n\r\n                <Information\r\n                    profile={props.profile}\r\n                    isOwner={props.isOwner}\r\n                />\r\n        </Box>\r\n    </Card>\r\n}\r\n\r\nconst Contact: FC<{ contactTitle: string, contactValue: string }> = ({contactTitle, contactValue}) => {\r\n    return <div>\r\n        <b>{contactTitle}:</b> {contactValue}\r\n    </div>\r\n}\r\n\r\ntype InfoProps = {\r\n    profile: any\r\n    isOwner: boolean\r\n}\r\n\r\nconst Information: FC<InfoProps> = ({profile, isOwner}) => {\r\n    return <Box color={'#D0D3D4'}>\r\n        <div>\r\n            <div>\r\n                <div><b>looking for a job:</b> {profile.lookingForAJob ? \"yes\" : 'no'}</div>\r\n                {profile.lookingForAJob &&\r\n                    <div><b>looking for a job description:</b> {profile.lookingForAJobDescription}</div>}\r\n            </div>\r\n            {/*}*/}\r\n            <div className={s.aboutMe}><b>About me:</b>{profile.aboutMe}</div>\r\n        </div>\r\n        <div className={s.contacts}>{Object.keys(profile.contacts).filter(i =>\r\n            profile.contacts[i]).map(i => {\r\n            return <Contact key={i} contactTitle={i} contactValue={profile.contacts[i]}/>\r\n        })}</div>\r\n    </Box>\r\n}\r\n\r\nexport default ProfileInfo","import React, {FC} from 'react';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer'\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport {postsType, ProfileType} from \"../../Redux/reducers/profile_reducer\";\r\nimport s from \"./Profile.module.css\"\r\nimport { Box } from '@mui/material';\r\n\r\ntype PropsType = {\r\n    profile: ProfileType\r\n    status: string\r\n    isOwner: boolean\r\n    follow: boolean\r\n    onFollowProfileChange: (userId: number, follow: boolean) => void\r\n    onPutDialogOnProfileChange: (userId: number) => void\r\n}\r\n\r\n\r\n\r\nconst Profile: FC<PropsType> = (props) => {\r\n    return <Box display={'flex'} flexGrow={1} flexDirection={'column'}>\r\n        <ProfileInfo\r\n                     isOwner={props.isOwner}\r\n                     profile={props.profile}\r\n                     status={props.status}\r\n                     follow={props.follow}\r\n                     onFollowProfileChange={props.onFollowProfileChange}\r\n                     onPutDialogOnProfileChange={props.onPutDialogOnProfileChange}\r\n        />\r\n\r\n        <MyPostsContainer />\r\n    </Box>\r\n}\r\n\r\nexport default Profile","import React, {FC, useEffect} from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    getStatusThunkCreator,\r\n    putStatusThunkCreator,\r\n    setUserProfile,\r\n    userProfileThunkCreator,\r\n    savePhotoTC,\r\n    getFollowThunkCreator,\r\n    onFollowProfileChangeThunkCreator,\r\n} from \"../../Redux/reducers/profile_reducer\";\r\nimport {RootState, useAppDispatch, useAppSelector} from \"../../Redux/reduxStore\";\r\nimport {\r\n    useLocation,\r\n    useNavigate,\r\n    useParams,\r\n} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthNavigate} from \"../hoc/witAuthNavigate\";\r\nimport {getSubscriptionsThunkCreator} from \"../../Redux/reducers/subscriptions_reducers\";\r\nimport {putDialogUserThunkCreator} from \"../../Redux/reducers/dialogs_reducer\";\r\nimport {getFollow, getProfile, getStatusProfile} from \"../../Redux/selectors/profile_selectors\";\r\nimport {getOwnerId} from \"../../Redux/selectors/auth_selectors\";\r\n\r\n/*function withRouter(Component: FC) {\r\n    function ComponentWithRouterProp(props: any) {\r\n        let location = useLocation();\r\n        let navigate = useNavigate();\r\n        let params = useParams();\r\n        return (\r\n            <Component\r\n                {...props}\r\n                router={{ location, navigate, params }}\r\n            />\r\n        );\r\n    }\r\n\r\n    return ComponentWithRouterProp;\r\n}\r\n\r\ntype PropsType = {\r\n    router: any\r\n}*/\r\n\r\nconst ProfileContainer = () => {\r\n    let { userId }= useParams<{ userId: string | undefined}>()\r\n    let id: number = Number(userId)\r\n    console.log(useParams())\r\n    const dispatch = useAppDispatch()\r\n    const profile = useAppSelector(getProfile)\r\n    const status = useAppSelector(getStatusProfile)\r\n    const follow = useAppSelector(getFollow)\r\n    const authorizedUserId = useAppSelector((getOwnerId))\r\n\r\n    const navigate = useNavigate()\r\n\r\n    console.log(userId)\r\n    useEffect(() => {\r\n        if (!id) {id = authorizedUserId}\r\n        dispatch(userProfileThunkCreator(id))\r\n        dispatch(getStatusThunkCreator(id))\r\n        dispatch(getFollowThunkCreator(id))\r\n    }, [userId])\r\n\r\n    useEffect(() => {\r\n\r\n    }, [])\r\n\r\n    let onFollowProfileChange = (userId: number, follow: boolean) => {\r\n        dispatch(onFollowProfileChangeThunkCreator(userId, follow))\r\n        dispatch(getSubscriptionsThunkCreator(true))\r\n    }\r\n\r\n    let onPutDialogOnProfileChange = (userId: number) => {\r\n        navigate(`/dialogs/${userId}`)\r\n        dispatch(putDialogUserThunkCreator(userId))\r\n    }\r\n\r\n        return <Profile\r\n                        isOwner={!!userId}\r\n                        profile={profile}\r\n                        status={status}\r\n                        follow={follow}\r\n                        onFollowProfileChange={onFollowProfileChange}\r\n                        onPutDialogOnProfileChange={onPutDialogOnProfileChange}\r\n        />\r\n\r\n}\r\n\r\nexport default withAuthNavigate(ProfileContainer)","import React, {FC} from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {Navigate} from 'react-router-dom';\r\nimport {RootState} from \"../../Redux/reduxStore\";\r\n\r\nlet mapStateToProps = (state: RootState) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\nexport const withAuthNavigate = (Component: FC<any>) => {\r\n\r\n    class NavigateComponent extends React.Component<{isAuth: boolean}> {\r\n        render() {\r\n            if (!this.props.isAuth) {\r\n                return <Navigate to={'/login'}/>\r\n            }\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectWithAuthNavigate = connect(mapStateToProps)(NavigateComponent)\r\n\r\n    return ConnectWithAuthNavigate\r\n}\r\n"],"names":["getProfile","state","profile","getStatusProfile","status","getFollow","follow","MyPostsForm","React","props","console","log","_jsx","Formik","initialValues","newPost","validateOnBlur","onSubmit","values","_ref","resetForm","createNewPost","undefined","children","_ref2","handleBlur","handleChange","isValid","handleSubmit","dirty","_jsxs","type","name","onChange","placeholder","className","s","value","onBlur","disabled","onClick","useEffect","posts","_toConsumableArray","postElements","map","p","Post","message","likeCount","ownerLike","id","connect","newPostText","dispatch","AddPostActionCreator","MyPosts","ProfileStatus","useAppDispatch","_useState","useState","_useState2","_slicedToArray","editMode","setEditMode","_useState3","_useState4","setStatus","ownerId","userId","Box","display","flexDirection","alignItems","m","justifyContent","Typography","variant","color","isOwner","ModeEditIcon","sx","ml","margin","TextField","label","e","currentTarget","autoFocus","putStatusThunkCreator","fullWidth","maxWidth","Contact","contactTitle","contactValue","Information","lookingForAJob","lookingForAJobDescription","aboutMe","Object","keys","contacts","filter","i","useAppSelector","getOwnerId","defaultPhoto","auth","setShowFullPhoto","Card","borderRadius","xs","sm","background","gap","flexGrow","CardMedia","component","image","photos","large","width","height","Button","onFollowProfileChange","PersonRemoveIcon","PersonAddIcon","startIcon","RateReviewIcon","onPutDialogOnProfileChange","fullName","Preloader","ProfileInfo","MyPostsContainer","withAuthNavigate","useParams","Number","authorizedUserId","navigate","useNavigate","userProfileThunkCreator","getStatusThunkCreator","getFollowThunkCreator","Profile","onFollowProfileChangeThunkCreator","getSubscriptionsThunkCreator","concat","putDialogUserThunkCreator","mapStateToProps","isAuth","Component","NavigateComponent","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","this","_objectSpread","Navigate","to"],"sourceRoot":""}
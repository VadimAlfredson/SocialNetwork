{"version":3,"file":"static/js/469.6bf74fbb.chunk.js","mappings":"0KACA,EAAkC,iCAAlC,EAAmF,+BAAnF,EAAqI,kCAArI,EAA0L,kCAA1L,EAA8O,iC,iDC0L9O,GAAeA,EAAAA,EAAAA,KAFS,SAACC,GAAD,MAAuB,KAEP,CAACC,oBAAAA,EAAAA,GAAqBC,wBAAAA,EAAAA,IAA9D,EAvJsC,SAACC,GACnC,IAAMC,GAAUC,EAAAA,EAAAA,KAAe,SAAAL,GAAK,OAAIA,EAAMI,QAAQA,WAChDE,GAAWC,EAAAA,EAAAA,MAOjB,OAAO,SAAC,KAAD,CACHC,oBAAoB,EACpBC,cAAe,CACXC,SAAUN,EAAQM,SAClBC,eAAgBP,EAAQO,eACxBC,0BAA2BR,EAAQQ,0BACnCC,QAAST,EAAQS,QACjBC,SAAUV,EAAQU,UAEtBC,gBAAc,EACdC,SAAW,SAAAC,GACPX,GAASL,EAAAA,EAAAA,IAAoBgB,KAX9B,SAeF,cACKT,mBADL,IAEKS,EAFL,EAEKA,OAGAC,GALL,EAGKC,OAHL,EAIKC,QAJL,EAKKF,YACAG,EANL,EAMKA,aACAC,EAPL,EAOKA,QACAC,EARL,EAQKA,aACAC,EATL,EASKA,MATL,OAWG,4BACI,kBACIC,UAAWC,EACXC,KAAM,OACNC,KAAM,WACNC,SAAUR,EACVS,OAAQZ,EACRa,UAAU,EACVC,MAAOf,EAAOP,UAAYN,EAAQM,UAAY,MAChD,mBACF,+CACA,kBACIiB,KAAM,WACNC,KAAM,iBACNC,SAAUR,EACVS,OAAQZ,KACV,mBACF,2DACA,kBACIO,UAAWC,EACXC,KAAM,OACNC,KAAM,4BACNC,SAAUR,EACVS,OAAQZ,EACRc,MAAOf,EAAOL,2BAA6B,GAC3CmB,UAAWd,EAAON,kBACpB,mBACF,sCACA,kBACIc,UAAWC,EACXC,KAAM,OACNC,KAAM,UACNC,SAAUR,EACVS,OAAQZ,EACRc,MAAOf,EAAOJ,SAAW,MAC3B,mBACF,sCAAgB,mBAChB,oCAAc,kBACdY,UAAWC,EACXC,KAAM,OACNC,KAAM,kBACNC,SAAUR,EACVS,OAAQZ,EACRc,MAAOf,EAAOH,SAASmB,QAAU,MACnC,mBACE,gCAAU,kBACVR,UAAWC,EACXC,KAAM,OACNC,KAAM,cACNC,SAAUR,EACVS,OAAQZ,EACRc,MAAOf,EAAOH,SAASoB,IAAM,MAC/B,mBACE,sCAAgB,kBAChBT,UAAWC,EACXC,KAAM,OACNC,KAAM,oBACNC,SAAUR,EACVS,OAAQZ,EACRc,MAAOf,EAAOH,SAASqB,UAAY,MACrC,mBACE,uCAAiB,kBACjBV,UAAWC,EACXC,KAAM,OACNC,KAAM,qBACNC,SAAUR,EACVS,OAAQZ,EACRc,MAAOf,EAAOH,SAASsB,WAAa,MACtC,mBACE,qCAAe,kBACfX,UAAWC,EACXC,KAAM,OACNC,KAAM,mBACNC,SAAUR,EACVS,OAAQZ,EACRc,MAAOf,EAAOH,SAASuB,SAAW,MACpC,mBACE,qCAAe,kBACfZ,UAAWC,EACXC,KAAM,OACNC,KAAM,mBACNC,SAAUR,EACVS,OAAQZ,EACRc,MAAOf,EAAOH,SAASwB,SAAW,MACpC,mBACE,qCAAe,kBACfb,UAAWC,EACXC,KAAM,OACNC,KAAM,mBACNC,SAAUR,EACVS,OAAQZ,EACRc,MAAOf,EAAOH,SAASyB,SAAW,MACpC,mBACE,sCAAgB,kBAChBd,UAAWC,EACXC,KAAM,OACNC,KAAM,oBACNC,SAAUR,EACVS,OAAQZ,EACRc,MAAOf,EAAOH,SAAS0B,UAAY,MACrC,mBACE,mBACIT,UAAWT,IAAYE,EACvBiB,QAAS,WACLlB,KAEJI,KAAM,SALV,2BC5IhB,EAvBgB,SAACxB,GACb,IAAMC,GAAWC,EAAAA,EAAAA,KAAe,SAAAL,GAAK,OAAIA,EAAMI,QAAQA,WAMvD,OAAQ,iBAAKqB,UAAWC,EAAhB,WACA,6CACJ,0BACI,mBAAOD,UAAWC,EAAlB,WACI,cAAGD,UAAWC,EAAd,2BACJ,gBAAMgB,IAAKtC,EAAQuC,OAAOC,OAASzC,EAAM0C,aAAcC,IAAK,YAC5D,kBAAOnB,KAAM,OAAQE,SAXD,SAACkB,GACrBA,EAAEC,OAAOC,MAAMC,QACf/C,EAAMgD,YAAYJ,EAAEC,OAAOC,MAAM,KASmBxB,UAAWC,UAGnE,0BACI,SAAC,EAAD,U,oBCMZ,GAAe0B,EAAAA,EAAAA,IAAQC,EAAAA,GAAkBtD,EAAAA,EAAAA,KARjB,SAACC,GACrB,MAAO,CACHsD,QAAStD,EAAMuD,KAAKC,OACpBA,OAAQxD,EAAMI,QAAQA,QAAQoD,OAC9BX,aAAc7C,EAAMI,QAAQyC,gBAI8B,CAAC3C,wBAAAA,EAAAA,GAAyBiD,YAAAA,EAAAA,KAA5F,EAjBwC,SAAChD,GAIrC,OAHAsD,EAAAA,EAAAA,YAAU,WACLtD,EAAMmD,UAAYnD,EAAMqD,QAAWrD,EAAMD,wBAAwBC,EAAMmD,WACzE,KAEC,SAAC,EAAD,CAASH,YAAahD,EAAMgD,YAAaN,aAAc1C,EAAM0C,mB,iJCfjEa,EAAkB,SAAC1D,GACnB,MAAO,CACH2D,OAAQ3D,EAAMuD,KAAKI,SAGdN,EAAmB,SAACO,GAAwB,IAE/CC,EAF8C,0IAGhD,WACI,OAAKC,KAAK3D,MAAMwD,QAGT,SAACC,GAAD,UAAeE,KAAK3D,SAFhB,SAAC,KAAD,CAAU4D,GAAI,eALmB,GAEpBC,EAAAA,WAWhC,OAF8BjE,EAAAA,EAAAA,IAAQ2D,EAAR3D,CAAyB8D","sources":["webpack://react-vadim/./src/components/Setting/Setting.module.css?cb72","components/Setting/formProfileInfo.tsx","components/Setting/Setting.tsx","components/Setting/SettingContainer.tsx","components/hoc/witAuthNavigate.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"profileInfoForm\":\"Setting_profileInfoForm__0zC+k\",\"itemFormInput\":\"Setting_itemFormInput__T1BVl\",\"inputUploadPhoto\":\"Setting_inputUploadPhoto__p3uZS\",\"blockUploadPhoto\":\"Setting_blockUploadPhoto__522c0\",\"textUploadPhoto\":\"Setting_textUploadPhoto__8gA17\"};","import React, {FC, useEffect, useState} from \"react\";\r\nimport {Formik, FormikProps} from \"formik\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    ContactsType,\r\n    PhotosType,\r\n    ProfileThunkCreator,\r\n    ProfileType, PutProfileValuesProps,\r\n    userProfileThunkCreator,\r\n} from \"../../Redux/profile_reducer\";\r\nimport s from \"./Setting.module.css\"\r\nimport {RootState, useAppDispatch, useAppSelector} from \"../../Redux/reduxStore\";\r\nimport * as yup from \"yup\";\r\n\r\ntype MyFormValues = {\r\n    fullName: string\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: string\r\n    aboutMe: string\r\n    contacts: {\r\n        github: string,\r\n        vk: string,\r\n        facebook: string,\r\n        instagram: string,\r\n        twitter: string,\r\n        website: string,\r\n        youtube: string,\r\n        mainLink: string\r\n    }\r\n}\r\n\r\n/*interface IProps extends FormikProps<MyFormValues> {\r\n    ProfileThunkCreator: (profile: PutProfileValuesProps) => void\r\n}*/\r\n\r\n\r\nconst ProfileInfoForm: React.FC<{}> = (props) => {\r\n    const profile = useAppSelector(state => state.profile.profile)\r\n    const dispatch = useAppDispatch()\r\n\r\n\r\n    /*const validationSchema = yup.object().shape({\r\n        email: yup.string().typeError('Incorrect email').required('required to fill out')\r\n    })*/\r\n\r\n    return <Formik\r\n        enableReinitialize={true}\r\n        initialValues={{\r\n            fullName: profile.fullName,\r\n            lookingForAJob: profile.lookingForAJob,\r\n            lookingForAJobDescription: profile.lookingForAJobDescription,\r\n            aboutMe: profile.aboutMe,\r\n            contacts: profile.contacts,\r\n        }}\r\n        validateOnBlur\r\n        onSubmit={(values => {\r\n            dispatch(ProfileThunkCreator(values))\r\n        })}\r\n        /*validationSchema={validationSchema}*/\r\n    >\r\n        {({\r\n              enableReinitialize,\r\n              values,\r\n              errors,\r\n              touched,\r\n              handleBlur,\r\n              handleChange,\r\n              isValid,\r\n              handleSubmit,\r\n              dirty\r\n          }) => (\r\n            <div>\r\n                <input\r\n                    className={s.itemFormInput}\r\n                    type={'text'}\r\n                    name={'fullName'}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    disabled={true}\r\n                    value={values.fullName || profile.fullName || ''}\r\n                /><br/>\r\n                <b>Looking for a job:</b>\r\n                <input\r\n                    type={'checkbox'}\r\n                    name={'lookingForAJob'}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                /><br/>\r\n                <b>Looking for a job description:</b>\r\n                <input\r\n                    className={s.itemFormInput}\r\n                    type={'text'}\r\n                    name={'lookingForAJobDescription'}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    value={values.lookingForAJobDescription || ''}\r\n                    disabled={!values.lookingForAJob}\r\n                /><br/>\r\n                <b>About Me:</b>\r\n                <input\r\n                    className={s.itemFormInput}\r\n                    type={'text'}\r\n                    name={'aboutMe'}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    value={values.aboutMe || ''}\r\n                /><br/>\r\n                <b>contacts:</b><br/>\r\n                <b>github:</b><input\r\n                className={s.itemFormInput}\r\n                type={'text'}\r\n                name={'contacts.github'}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                value={values.contacts.github || ''}\r\n            /><br/>\r\n                <b>vk:</b><input\r\n                className={s.itemFormInput}\r\n                type={'text'}\r\n                name={'contacts.vk'}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                value={values.contacts.vk || ''}\r\n            /><br/>\r\n                <b>facebook:</b><input\r\n                className={s.itemFormInput}\r\n                type={'text'}\r\n                name={'contacts.facebook'}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                value={values.contacts.facebook || ''}\r\n            /><br/>\r\n                <b>instagram:</b><input\r\n                className={s.itemFormInput}\r\n                type={'text'}\r\n                name={'contacts.instagram'}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                value={values.contacts.instagram || ''}\r\n            /><br/>\r\n                <b>twitter:</b><input\r\n                className={s.itemFormInput}\r\n                type={'text'}\r\n                name={'contacts.twitter'}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                value={values.contacts.twitter || ''}\r\n            /><br/>\r\n                <b>website:</b><input\r\n                className={s.itemFormInput}\r\n                type={'text'}\r\n                name={'contacts.website'}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                value={values.contacts.website || ''}\r\n            /><br/>\r\n                <b>youtube:</b><input\r\n                className={s.itemFormInput}\r\n                type={'text'}\r\n                name={'contacts.youtube'}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                value={values.contacts.youtube || ''}\r\n            /><br/>\r\n                <b>mainLink:</b><input\r\n                className={s.itemFormInput}\r\n                type={'text'}\r\n                name={'contacts.mainLink'}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                value={values.contacts.mainLink || ''}\r\n            /><br/>\r\n                <button\r\n                    disabled={!isValid && !dirty}\r\n                    onClick={() => {\r\n                        handleSubmit()\r\n                    }}\r\n                    type={'submit'}\r\n                >Save\r\n                </button>\r\n            </div>\r\n        )}\r\n    </Formik>\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({})\r\n\r\nexport default connect(mapStateToProps, {ProfileThunkCreator, userProfileThunkCreator})(ProfileInfoForm)","import React from \"react\";\r\nimport s from './Setting.module.css';\r\nimport ProfileInfoForm from \"./formProfileInfo\";\r\nimport {useAppSelector} from \"../../Redux/reduxStore\";\r\n\r\ntype PropsType = {\r\n    savePhotoTC: (photo: any) => void\r\n    defaultPhoto: string\r\n}\r\nconst Setting = (props: PropsType) => {\r\n    const profile =  useAppSelector(state => state.profile.profile)\r\n    const onMainPhotoSelected = (e: any) => {\r\n        if (e.target.files.length) {\r\n            props.savePhotoTC(e.target.files[0])\r\n        }\r\n    }\r\n    return (<div className={s.profileInfoForm}>\r\n            <h3>Profile setting</h3>\r\n        <div>\r\n            <label className={s.blockUploadPhoto}>\r\n                <a className={s.textUploadPhoto}>Upload photo</a>\r\n            <img  src={profile.photos.large || props.defaultPhoto} alt={'avatar'}/>\r\n            <input type={\"file\"} onChange={onMainPhotoSelected} className={s.inputUploadPhoto}/>\r\n            </label>\r\n        </div>\r\n        <div>\r\n            <ProfileInfoForm />\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Setting","import React, {FC, useEffect} from \"react\";\r\nimport Setting from \"./Setting\";\r\nimport { connect } from \"react-redux\";\r\nimport {RootState} from \"../../Redux/reduxStore\";\r\nimport {savePhotoTC, userProfileThunkCreator} from \"../../Redux/profile_reducer\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthNavigate} from \"../hoc/witAuthNavigate\";\r\n\r\ntype PropsType = {\r\n    ownerId: number\r\n    userId: number\r\n    userProfileThunkCreator: (userId: number) => void\r\n    savePhotoTC: (photo: any) => void\r\n    defaultPhoto: string\r\n}\r\nconst SettingContainer: FC<PropsType> = (props) => {\r\n    useEffect(() => {\r\n        (props.ownerId !== props.userId) && props.userProfileThunkCreator(props.ownerId)\r\n    }, [])\r\n    return (\r\n        <Setting savePhotoTC={props.savePhotoTC} defaultPhoto={props.defaultPhoto}/>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state: RootState) => {\r\n    return {\r\n        ownerId: state.auth.userId,\r\n        userId: state.profile.profile.userId,\r\n        defaultPhoto: state.profile.defaultPhoto,\r\n    }\r\n}\r\n\r\nexport default compose(withAuthNavigate, connect(mapStateToProps, {userProfileThunkCreator, savePhotoTC}))(SettingContainer)","import React, {FC} from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {Navigate} from 'react-router-dom';\r\nimport {RootState} from \"../../Redux/reduxStore\";\r\n\r\nlet mapStateToProps = (state: RootState) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\nexport const withAuthNavigate = (Component: FC<any>) => {\r\n\r\n    class NavigateComponent extends React.Component<{isAuth: boolean}> {\r\n        render() {\r\n            if (!this.props.isAuth) {\r\n                return <Navigate to={'/login'}/>\r\n            }\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectWithAuthNavigate = connect(mapStateToProps)(NavigateComponent)\r\n\r\n    return ConnectWithAuthNavigate\r\n}\r\n"],"names":["connect","state","ProfileThunkCreator","userProfileThunkCreator","props","profile","useAppSelector","dispatch","useAppDispatch","enableReinitialize","initialValues","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contacts","validateOnBlur","onSubmit","values","handleBlur","errors","touched","handleChange","isValid","handleSubmit","dirty","className","s","type","name","onChange","onBlur","disabled","value","github","vk","facebook","instagram","twitter","website","youtube","mainLink","onClick","src","photos","large","defaultPhoto","alt","e","target","files","length","savePhotoTC","compose","withAuthNavigate","ownerId","auth","userId","useEffect","mapStateToProps","isAuth","Component","NavigateComponent","this","to","React"],"sourceRoot":""}
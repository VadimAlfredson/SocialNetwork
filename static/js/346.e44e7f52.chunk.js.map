{"version":3,"file":"static/js/346.e44e7f52.chunk.js","mappings":"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","sources":["webpack://react-vadim/./src/components/Users/users.module.css?9211","webpack://react-vadim/./src/components/common/Paginator/paginator.module.css?28dc","components/common/Paginator/Paginator.tsx","components/Users/Users.tsx","components/Users/UsersContainer.tsx","components/hoc/witAuthNavigate.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"avatar\":\"users_avatar__y+lLH\",\"activePage\":\"users_activePage__-aCU1\"};","// extracted by mini-css-extract-plugin\nexport default {\"activePage\":\"paginator_activePage__VMnuX\"};","import React, {FC, useState} from \"react\";\r\nimport s from \"../Paginator/paginator.module.css\"\r\n\r\ntype PropsType = {\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onPageChange: (p: number) => void\r\n}\r\n\r\nlet Paginator: FC<PropsType> = (props) => {\r\n    let pageCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pageCount; i++) {\r\n        pages.push(i)\r\n    }\r\n    ;\r\n    let portionSize = 10\r\n    let portionCount = Math.ceil(pageCount / portionSize)\r\n    let [portionNumber, setPortionNumber] = useState(1)\r\n    let leftPortionNumber = (portionNumber - 1) * portionSize + 1\r\n    let rightPortionNumber = portionNumber * portionSize\r\n    return (\r\n            <div>\r\n                {portionNumber > 1 &&\r\n                <button onClick={() => {setPortionNumber(portionNumber - 1)}}>left</button>\r\n                }\r\n                {pages\r\n                    .filter(p => p >= leftPortionNumber && p <= rightPortionNumber)\r\n                    .map(p => {\r\n                        // @ts-ignore\r\n                        return <span className={props.currentPage === p ? s.activePage : null}\r\n                                     onClick={() => {\r\n                                         props.onPageChange(p)\r\n                                     }} key={p}\r\n                        >{p}</span>\r\n                    }\r\n                )}\r\n                {portionCount > portionNumber &&\r\n                <button\r\n                onClick={() => {setPortionNumber(portionNumber + 1)}}\r\n                >right</button>\r\n                }\r\n            </div>\r\n    )\r\n};\r\n\r\nexport default Paginator","import React, {FC} from \"react\";\r\nimport {UserType} from \"../../Redux/users_reducers\";\r\nimport s from \"../Users/users.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\n\r\ntype PropsType = {\r\n    users: Array<UserType>\r\n    totalUsersCount: number\r\n    followingInProgress: Array<number>\r\n    pageSize: number\r\n    currentPage: number\r\n    onPageChange: (pageNumber: number) => void\r\n    onFollowChange: (id: number, followed: boolean) => void\r\n}\r\n\r\nlet Users: FC<PropsType> = (props) => {\r\n    return (\r\n        <div>\r\n            <Paginator\r\n                totalUsersCount={props.totalUsersCount}\r\n                pageSize={props.pageSize}\r\n                currentPage={props.currentPage}\r\n                onPageChange={props.onPageChange}\r\n            />\r\n            {\r\n                props.users.map((u: UserType) => <div key={u.id}>\r\n        <span>\r\n            <div>\r\n                <NavLink to={'/profile/' + u.id}>\r\n                <img src={u.photos.small !== null ? u.photos.small :\r\n                    'https://shapka-youtube.ru/wp-content/uploads/2021/02/avatarka-dlya-skaypa-dlya-parney.jpg'\r\n                } className={s.avatar}/>\r\n                </NavLink>\r\n                {\r\n                    <button\r\n                        disabled={props.followingInProgress.includes(u.id)}\r\n                        onClick={() => (props.onFollowChange(u.id, u.followed))\r\n                        }>{u.followed ? 'Unfollow' : 'Follow'}\r\n                    </button>\r\n                }\r\n            </div>\r\n<span>\r\n    <div>{u.name}</div>\r\n    <div>{u.status}</div>\r\n</span>\r\n        </span>\r\n                </div>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Users from \"./Users\";\r\nimport {AddStateType} from \"../../Redux/reduxStore\";\r\nimport {\r\n    followed,\r\n    setCurrentPage,\r\n    toggleIsFetching,\r\n    setTotalUsersCount,\r\n    setUsers,\r\n    toggleIsFollowing,\r\n    getUsersThunkCreator,\r\n    onPageChangeThunkCreator,\r\n    onFollowChangeThunkCreator, UserType,\r\n} from \"../../Redux/users_reducers\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {withAuthNavigate} from \"../hoc/witAuthNavigate\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress, getIsAuth, getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers\r\n} from \"../../Redux/users_selectors\";\r\n\r\ntype PropsType = {\r\n    currentPage: number\r\n    pageSize: number\r\n    isFetching: boolean\r\n    users: Array<UserType>\r\n    totalUsersCount: number\r\n\r\n    getUsersThunkCreator: (currentPage: number, pageSize: number) => void\r\n    onPageChangeThunkCreator: (pageNumber: number, pageSize: number) => void\r\n    onFollowChangeThunkCreator: (userId: number, follow: boolean) => void\r\n    followingInProgress: Array<number>\r\n}\r\n\r\n\r\nclass UsersContainer extends React.Component<PropsType> {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsersThunkCreator(this.props.currentPage, this.props.pageSize)\r\n    }\r\n\r\n    onPageChange = (pageNumber: number) => {\r\n        this.props.onPageChangeThunkCreator(pageNumber, this.props.pageSize)\r\n    }\r\n\r\n    onFollowChange = (userId: number, follow: boolean) => {\r\n        this.props.onFollowChangeThunkCreator(userId, follow)\r\n    }\r\n\r\n    render(): React.ReactNode {\r\n\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users\r\n                users={this.props.users}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                totalUsersCount={this.props.totalUsersCount}\r\n                onPageChange={this.onPageChange}\r\n                onFollowChange={this.onFollowChange}\r\n                followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n\r\n}\r\n\r\nlet mapStateToProps = (state: AddStateType) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n        isAuth: getIsAuth(state),\r\n        isFetching: getIsFetching(state)\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withAuthNavigate,\r\n    connect(mapStateToProps,\r\n        {\r\n            followed,\r\n            setUsers,\r\n            setCurrentPage,\r\n            setTotalUsersCount,\r\n            toggleIsFetching,\r\n            toggleIsFollowing,\r\n            getUsersThunkCreator,\r\n            onPageChangeThunkCreator,\r\n            onFollowChangeThunkCreator,\r\n        })\r\n)(UsersContainer)","import React, {FC} from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {Navigate} from 'react-router-dom';\r\nimport {AddStateType} from \"../../Redux/reduxStore\";\r\n\r\nlet mapStateToProps = (state: AddStateType) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\nexport const withAuthNavigate = (Component: FC<any>) => {\r\n\r\n    class NavigateComponent extends React.Component<{isAuth: boolean}> {\r\n        render() {\r\n            if (!this.props.isAuth) {\r\n                return <Navigate to={'/login'}/>\r\n            }\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectWithAuthNavigate = connect(mapStateToProps)(NavigateComponent)\r\n\r\n    return ConnectWithAuthNavigate\r\n}\r\n"],"names":["props","pageCount","Math","ceil","totalUsersCount","pageSize","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionNumber","rightPortionNumber","onClick","filter","p","map","className","currentPage","s","onPageChange","users","u","to","id","src","photos","small","disabled","followingInProgress","includes","onFollowChange","followed","name","status","UsersContainer","pageNumber","onPageChangeThunkCreator","userId","follow","onFollowChangeThunkCreator","this","getUsersThunkCreator","isFetching","Preloader","React","compose","withAuthNavigate","connect","state","getUsers","getPageSize","getTotalUsersCount","getCurrentPage","getFollowingInProgress","isAuth","getIsAuth","getIsFetching","setUsers","setCurrentPage","setTotalUsersCount","toggleIsFetching","toggleIsFollowing","mapStateToProps","auth","Component","NavigateComponent"],"sourceRoot":""}
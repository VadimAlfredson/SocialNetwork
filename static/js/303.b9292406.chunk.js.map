{"version":3,"file":"static/js/303.b9292406.chunk.js","mappings":"kOAsGA,GAAeA,EAAAA,EAAAA,KALS,SAACC,GAAD,MAA0B,CAC9CC,OAAQD,EAAME,KAAKD,OACnBE,WAAYH,EAAME,KAAKC,cAGa,CAACC,kBAAAA,EAAAA,IAAzC,EAxFiC,SAACC,GAE9B,GAAIA,EAAMJ,OACN,OAAO,SAAC,KAAD,CAAUK,GAAI,cAGzB,IAAMC,EAAmBC,EAAAA,KAAaC,MAAM,CACxCC,MAAOF,EAAAA,KAAaG,UAAU,mBAAmBC,SAAS,0BAE9D,OAAO,SAAC,KAAD,CACHC,cAAe,CACXH,MAAO,GACPI,SAAU,GACVC,UAAU,EACVC,QAAS,IAEbC,gBAAc,EACdC,SAAW,SAAAC,GACPC,QAAQC,IAAIF,GACZd,EAAMD,kBAAkBe,EAAOT,MAAOS,EAAOL,SAAUK,EAAOJ,SAAUI,EAAOH,UAEnFT,iBAAkBA,EAZf,SAcF,gBACKY,EADL,EACKA,OAGAG,GAJL,EAEKC,OAFL,EAGKC,QAHL,EAIKF,YACAG,EALL,EAKKA,aACAC,EANL,EAMKA,QACAC,EAPL,EAOKA,aACAC,EARL,EAQKA,MARL,OAUG,4BACI,kBACIC,KAAM,QACNC,KAAM,QACNC,SAAUN,EACVO,OAAQV,EACRW,MAAOd,EAAOT,MACdwB,YAAa,WACf,mBACF,kBACIL,KAAM,WACNC,KAAM,WACNC,SAAUN,EACVO,OAAQV,EACRW,MAAOd,EAAOL,SACdoB,YAAa,cACf,mBACF,kBACIL,KAAM,WACNC,KAAM,WACNC,SAAUN,EACVO,OAAQV,KAEV,kBAEDjB,EAAMF,aACP,4BACI,gBAAKgC,IAAK9B,EAAMF,cACpB,kBACI0B,KAAM,OACNC,KAAM,UACNC,SAAUN,EACVO,OAAQV,EACRW,MAAOd,EAAOH,WAChB,sBAGF,mBACIoB,UAAWV,IAAYE,EACvBS,QAAS,WACLV,KAEJE,KAAM,SALV,4BC1EhB,EAPc,WACV,OAAO,4BACP,sCACA,SAAC,EAAD","sources":["components/login/formLogin.tsx","components/login/login.tsx"],"sourcesContent":["import React, {FC} from \"react\";\r\nimport {Formik} from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport {connect} from \"react-redux\";\r\nimport {loginThunkCreator} from \"../../Redux/auth_reducers\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {AddStateType} from \"../../Redux/reduxStore\";\r\n\r\ntype PropsType = {\r\n    isAuth: boolean\r\n    loginThunkCreator: (email: string, password: string, checkbox: boolean, captcha: string) => void\r\n    captchaURL: null | string\r\n}\r\n\r\nconst LoginForm: FC<PropsType> = (props) => {\r\n\r\n    if (props.isAuth) {\r\n        return <Navigate to={\"/profile/\"}/>\r\n    }\r\n\r\n    const validationSchema = yup.object().shape({\r\n        email: yup.string().typeError('Incorrect email').required('required to fill out')\r\n    })\r\n    return <Formik\r\n        initialValues={{\r\n            email: '',\r\n            password: '',\r\n            checkbox: false,\r\n            captcha: '',\r\n        }}\r\n        validateOnBlur\r\n        onSubmit={(values => {\r\n            console.log(values)\r\n            props.loginThunkCreator(values.email, values.password, values.checkbox, values.captcha)\r\n        })}\r\n        validationSchema={validationSchema}\r\n    >\r\n        {({\r\n              values,\r\n              errors,\r\n              touched,\r\n              handleBlur,\r\n              handleChange,\r\n              isValid,\r\n              handleSubmit,\r\n              dirty\r\n          }) => (\r\n            <div>\r\n                <input\r\n                    type={'email'}\r\n                    name={'email'}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    value={values.email}\r\n                    placeholder={'email'}\r\n                /><br/>\r\n                <input\r\n                    type={'password'}\r\n                    name={'password'}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    value={values.password}\r\n                    placeholder={'password'}\r\n                /><br/>\r\n                <input\r\n                    type={'checkbox'}\r\n                    name={'checkbox'}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    /*value={values.checkbox}*/\r\n                /><br/>\r\n\r\n                {props.captchaURL &&\r\n                <div>\r\n                    <img src={props.captchaURL}/>\r\n                <input\r\n                    type={'text'}\r\n                    name={'captcha'}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    value={values.captcha}\r\n                /><br/>\r\n                </div>\r\n                }\r\n                <button\r\n                    disabled={!isValid && !dirty}\r\n                    onClick={() => {\r\n                        handleSubmit()\r\n                    }}\r\n                    type={'submit'}\r\n                >login\r\n                </button>\r\n            </div>\r\n        )}\r\n    </Formik>\r\n};\r\n\r\nconst mapStateToProps = (state: AddStateType) => ({\r\n    isAuth: state.auth.isAuth,\r\n    captchaURL: state.auth.captchaURL\r\n})\r\n\r\nexport default connect(mapStateToProps, {loginThunkCreator})(LoginForm)\r\n","import React from 'react';\r\nimport LoginForm from \"./formLogin\";\r\n\r\nconst Login = () => {\r\n    return <div>\r\n    <h1>Login!!!</h1>\r\n    <LoginForm />\r\n    </div>\r\n};\r\n\r\nexport default Login"],"names":["connect","state","isAuth","auth","captchaURL","loginThunkCreator","props","to","validationSchema","yup","shape","email","typeError","required","initialValues","password","checkbox","captcha","validateOnBlur","onSubmit","values","console","log","handleBlur","errors","touched","handleChange","isValid","handleSubmit","dirty","type","name","onChange","onBlur","value","placeholder","src","disabled","onClick"],"sourceRoot":""}
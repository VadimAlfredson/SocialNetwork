{"version":3,"file":"static/js/637.f27085ad.chunk.js","mappings":"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","sources":["webpack://react-vadim/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.tsx","webpack://react-vadim/./src/components/Profile/MyPosts/MyPosts.module.css?831b","components/Profile/MyPosts/MyPostsForm.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","webpack://react-vadim/./src/components/Profile/Profile.module.css?b512","components/Profile/ProfileInfo/ProfileStatus.tsx","components/Profile/ProfileInfo/formProfileInfo.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","components/hoc/witAuthNavigate.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"post\":\"Post_post__nQiOB\",\"img\":\"Post_img__JZc0-\",\"message\":\"Post_message__RccBK\",\"like\":\"Post_like__Cf8gT\"};","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props: {message: string, likeCount: number}) => {\r\n    return (\r\n        <div className={s.post} >\r\n            <img className={s.img} src='https://shapka-youtube.ru/wp-content/uploads/2021/02/avatarka-dlya-skaypa-dlya-parney.jpg'/>\r\n            <div className={s.message}>{props.message}</div>\r\n            <div className={s.like}>{props.likeCount} like</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post","// extracted by mini-css-extract-plugin\nexport default {\"createText\":\"MyPosts_createText__xWvCB\",\"buttonAddPost\":\"MyPosts_buttonAddPost__msy9U\",\"addpost\":\"MyPosts_addpost__W58dj\"};","import React, {Dispatch} from 'react'\r\nimport Post from './Post/Post'\r\nimport s from './MyPosts.module.css'\r\nimport {profilePageType} from \"../../../Redux/profile_reducer\";\r\nimport {Formik} from \"formik\";\r\n\r\nexport const MyPostsForm = React.memo((props: {\r\n    createNewPost: (newPost: string) => void,\r\n}) => {\r\n    console.log('rerenderPost')\r\n    return <Formik\r\n        initialValues={{\r\n            newPost: '' as string\r\n        }}\r\n        validateOnBlur\r\n        onSubmit={(values, {resetForm}) => {\r\n            props.createNewPost(values.newPost)\r\n            console.log(values.newPost)\r\n            resetForm({values: undefined})\r\n        }}\r\n    >\r\n        {({\r\n              values,\r\n              handleBlur,\r\n              handleChange,\r\n              isValid,\r\n              handleSubmit,\r\n              dirty\r\n          }) => (\r\n            <div /*className={s.addpost}*/>\r\n                <input\r\n                    type={'input'}\r\n                    name={'newPost'}\r\n                    onChange={handleChange}\r\n                    placeholder={'Add text'}\r\n                    className={s.createText}\r\n                    value={values.newPost}\r\n                    onBlur={handleBlur}\r\n                />\r\n                <button\r\n                    className={s.buttonAddPost}\r\n                    disabled={!isValid && !dirty}\r\n                    onClick={() => {handleSubmit()}}\r\n                    type={'submit'}\r\n                >Add post\r\n                </button>\r\n            </div>\r\n        )}\r\n\r\n    </Formik>\r\n})","import React, {Dispatch, FC} from 'react'\r\nimport Post from './Post/Post'\r\nimport s from './MyPosts.module.css'\r\nimport {postsType} from \"../../../Redux/profile_reducer\";\r\nimport {MyPostsForm} from \"./MyPostsForm\";\r\n\r\ntype PropsType = {\r\n    posts: Array<postsType>,\r\n    createNewPost: (NewPost: string) => void,\r\n}\r\n\r\nconst MyPosts: FC<PropsType> = (props) => {\r\n    let postElements = props.posts.map(\r\n        (p) => <Post message={p.message} likeCount={p.likeCount}  key={p.id}/>\r\n    );\r\n    console.log('Rerender')\r\n    return (\r\n        <div>\r\n            <MyPostsForm\r\n                createNewPost={props.createNewPost}\r\n            />\r\n            <div className={s.post}>\r\n                {postElements}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyPosts","import React from 'react'\r\nimport {\r\n    AddPostActionCreator,\r\n} from \"../../../Redux/profile_reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {AddStateType} from \"../../../Redux/reduxStore\";\r\nimport {DispatchType} from \"../../../Redux/Types\";\r\n\r\nlet mapStateToProps = (state: AddStateType) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch: DispatchType) => {\r\n    return {\r\n        createNewPost: (newPost: string) => {\r\n            dispatch(AddPostActionCreator(newPost))\r\n        },\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer","// extracted by mini-css-extract-plugin\nexport default {\"topImg\":\"Profile_topImg__IBFWK\",\"topImgDiv\":\"Profile_topImgDiv__FO8Hw\",\"avatarImg\":\"Profile_avatarImg__edtWN\"};","import s from './../Profile.module.css';\r\nimport React, {ChangeEvent, FC, useEffect, useState} from 'react';\r\n\r\ntype PropsType = {\r\n    status: string\r\n    putStatusThunkCreator: (status: string) => void\r\n}\r\n\r\nexport const ProfileStatus: FC<PropsType> = (props) => {\r\n    let [editMode, setEditMode] = useState(false)\r\n\r\n    let activeStatusInput = () => setEditMode(true)\r\n\r\n    let deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.putStatusThunkCreator(status)\r\n    }\r\n\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    let onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setStatus(e.currentTarget.value)\r\n    };\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status)\r\n    }, [props.status]);\r\n\r\n    return (\r\n        <div>  {\r\n            !editMode &&\r\n                <div>\r\n            <span onDoubleClick={activeStatusInput} >{props.status || 'status'}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n            <input\r\n                onChange={onStatusChange}\r\n                autoFocus={true}\r\n                onBlur={deactivateEditMode}\r\n                value={status}/>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n/*\r\nexport class ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activeStatusInput = () => {\r\n        this.setState(\r\n            {editMode: true}\r\n        )\r\n    }\r\n\r\n    deactivateEditMode = () => {\r\n        this.setState(\r\n            {editMode: false}\r\n        );\r\n        this.props.putStatusThunkCreator(this.state.status)\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        });\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div>  {\r\n                !this.state.editMode &&\r\n                <div>\r\n                    <span onDoubleClick={this.activeStatusInput} >{this.props.status || 'status'}</span>\r\n                </div>\r\n            }\r\n                { this.state.editMode &&\r\n                <div>\r\n                    <input\r\n                        onChange={this.onStatusChange}\r\n                        autoFocus={true}\r\n                        onBlur={this.deactivateEditMode}\r\n                        value={this.state.status}/>\r\n                </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}*/\r\n","import React, {FC} from \"react\";\r\nimport {Formik} from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport {connect} from \"react-redux\";\r\nimport {AddStateType} from \"../../../Redux/reduxStore\";\r\nimport {ProfileThunkCreator} from \"../../../Redux/profile_reducer\";\r\n\r\ntype PropsType = {\r\n    isAuth: boolean\r\n    loginThunkCreator: (email: string, password: string, checkbox: boolean) => void\r\n    ProfileThunkCreator: ({}) => void\r\n}\r\n\r\nconst ProfileInfoForm: FC<any> = (props) => {\r\n    /*const validationSchema = yup.object().shape({\r\n        email: yup.string().typeError('Incorrect email').required('required to fill out')\r\n    })*/\r\n    return <Formik\r\n        /*initialValues={{\r\n            lookingForAJob: false,\r\n            lookingForAJobDescription: '',\r\n            contacts: {\r\n                github: '',\r\n                vk: '',\r\n                facebook: '',\r\n                instagram: '',\r\n                twitter: '',\r\n                website: '',\r\n                youtube: '',\r\n                mainLink: ''\r\n            }\r\n        }}*/\r\n        initialValues={{\r\n            fullName: props.profile.fullName,\r\n            lookingForAJob: props.profile.lookingForAJob,\r\n            lookingForAJobDescription: props.profile.lookingForAJobDescription,\r\n            aboutMe: props.profile.aboutMe,\r\n            contacts: props.profile.contacts\r\n        }}\r\n        validateOnBlur\r\n        onSubmit={(values => {\r\n            console.log(values)\r\n            console.log(props.profile)\r\n            props.ProfileThunkCreator(values)\r\n            props.editModeOnOff(false)\r\n        })}\r\n        /*validationSchema={validationSchema}*/\r\n    >\r\n        {({\r\n              values,\r\n              errors,\r\n              touched,\r\n              handleBlur,\r\n              handleChange,\r\n              isValid,\r\n              handleSubmit,\r\n              dirty\r\n          }) => (\r\n            <div>\r\n                <input\r\n                type={'text'}\r\n                name={'fullName'}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                disabled={true}\r\n                value={values.fullName || props.profile.fullName || ''}\r\n            /><br/>\r\n                <b>Looking for a job:</b><input\r\n                type={'checkbox'}\r\n                name={'lookingForAJob'}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n            /><br/>\r\n                <b>Looking for a job description:</b><input\r\n                type={'text'}\r\n                name={'lookingForAJobDescription'}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                value={values.lookingForAJobDescription || ''}\r\n                disabled={!values.lookingForAJob}\r\n            /><br/>\r\n                <b>About Me:</b><input\r\n                type={'text'}\r\n                name={'aboutMe'}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                value={values.aboutMe || ''}\r\n            /><br/>\r\n                <b>contacts:</b><br/>\r\n                <b>github:</b><input\r\n                type={'text'}\r\n                name={'contacts.github'}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                value={values.contacts.github || ''}\r\n            /><br/>\r\n                <b>vk:</b><input\r\n                type={'text'}\r\n                name={'contacts.vk'}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                value={values.contacts.vk || ''}\r\n            /><br/>\r\n                <b>facebook:</b><input\r\n                type={'text'}\r\n                name={'contacts.facebook'}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                value={values.contacts.facebook || ''}\r\n            /><br/>\r\n                <b>instagram:</b><input\r\n                type={'text'}\r\n                name={'contacts.instagram'}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                value={values.contacts.instagram || ''}\r\n            /><br/>\r\n                <b>twitter:</b><input\r\n                type={'text'}\r\n                name={'contacts.twitter'}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                value={values.contacts.twitter || ''}\r\n            /><br/>\r\n                <b>website:</b><input\r\n                type={'text'}\r\n                name={'contacts.website'}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                value={values.contacts.website || ''}\r\n            /><br/>\r\n                <b>youtube:</b><input\r\n                type={'text'}\r\n                name={'contacts.youtube'}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                value={values.contacts.youtube || ''}\r\n            /><br/>\r\n                <b>mainLink:</b><input\r\n                type={'text'}\r\n                name={'contacts.mainLink'}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                value={values.contacts.mainLink || ''}\r\n            /><br/>\r\n                <button\r\n                    disabled={!isValid && !dirty}\r\n                    onClick={() => {handleSubmit()}}\r\n                    type={'submit'}\r\n                >Save\r\n                </button>\r\n            </div>\r\n        )}\r\n    </Formik>\r\n};\r\n\r\nconst mapStateToProps = (state: AddStateType) => ({\r\n    isAuth: state.auth.isAuth,\r\n    profile: state.profilePage.profile,\r\n})\r\n\r\nexport default connect(mapStateToProps, {ProfileThunkCreator})(ProfileInfoForm)","import React, {FC, useState} from 'react';\r\nimport s from './../Profile.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport {ProfileStatus} from \"./ProfileStatus\";\r\nimport {ProfileType} from \"../../../Redux/profile_reducer\";\r\nimport ProfileInfoForm from \"./formProfileInfo\";\r\n\r\ntype PropsType = {\r\n    profile: ProfileType\r\n    putStatusThunkCreator: () => void\r\n    status: string\r\n    isOwner: boolean\r\n    savePhotoTC: ({}) => void\r\n    follow: boolean\r\n    onFollowProfileChange: (userId: number, follow: boolean) => void\r\n}\r\n\r\nconst ProfileInfo: FC<PropsType> = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n    const onMainPhotoSelected = (e: any) => {\r\n        if (e.target.files.length) {\r\n            props.savePhotoTC(e.target.files[0])\r\n        }\r\n    }\r\n    return <div>\r\n        <div>\r\n            <img className={s.avatarImg}\r\n                 src={props.profile.photos.large || 'https://shapka-youtube.ru/wp-content/uploads/2021/02/avatarka-dlya-skaypa-dlya-parney.jpg'}/>\r\n            {props.isOwner || <input type={\"file\"} onChange={onMainPhotoSelected}/>}\r\n        </div>\r\n        <div><b>{props.profile.fullName}</b></div>\r\n        <ProfileStatus status={props.status} putStatusThunkCreator={props.putStatusThunkCreator}/>\r\n        <div>{props.isOwner &&\r\n        <button onClick={() => {\r\n            props.onFollowProfileChange(props.profile.userId, props.follow)\r\n        }}>{props.follow ? 'Unfollow' : 'Follow'}</button>}\r\n        </div>\r\n        <div>\r\n            <Information\r\n                profile={props.profile}\r\n                isOwner={props.isOwner}\r\n            />\r\n        </div>\r\n    </div>\r\n}\r\n\r\nconst Contact: FC<{ contactTitle: string, contactValue: string }> = ({contactTitle, contactValue}) => {\r\n    return <div>\r\n        <b>{contactTitle}:</b> {contactValue}\r\n    </div>\r\n}\r\n\r\ntype InfoProps = {\r\n    profile: any\r\n    isOwner: boolean\r\n}\r\n\r\nconst Information: FC<InfoProps> = ({profile, isOwner}) => {\r\n    let [editMode, setEditMode] = useState(false)\r\n    let editModeOnOff = (value: boolean) => setEditMode(value)\r\n    return <div>\r\n        {isOwner || <button onClick={() => {\r\n            editModeOnOff(true)\r\n        }}>edit contacts</button>}\r\n        {!isOwner && editMode && <div><ProfileInfoForm editModeOnOff={editModeOnOff} /></div>}\r\n        {editMode || <div>\r\n            <div><b>lookingForAJob:</b> {profile.lookingForAJob ? \"yes\" : 'no'}</div>\r\n            {profile.lookingForAJob &&\r\n            <div><b>lookingForAJobDescription:</b> {profile.lookingForAJobDescription}</div>}\r\n        </div>}\r\n        <div><b>About me:</b>{profile.aboutMe}</div>\r\n        <div>{(!isOwner && editMode) || Object.keys(profile.contacts).filter(i =>\r\n            isOwner ? profile.contacts[i] != null : i).map(i => {\r\n            return <Contact key={i} contactTitle={i} contactValue={profile.contacts[i]}/>\r\n        })}</div>\r\n    </div>\r\n}\r\n\r\nexport default ProfileInfo","import React, {FC} from 'react';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer'\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport {ProfileType} from \"../../Redux/profile_reducer\";\r\n\r\ntype PropsType = {\r\n    profile: ProfileType\r\n    putStatusThunkCreator: () => void\r\n    status: string\r\n    isOwner: boolean\r\n    savePhotoTC: ({}) => void\r\n    follow: boolean\r\n    onFollowProfileChange: (userId: number, follow: boolean) => void\r\n}\r\n\r\nconst Profile: FC<PropsType> = (props) => {\r\n    return <div>\r\n        <ProfileInfo savePhotoTC={props.savePhotoTC}\r\n                     isOwner={props.isOwner}\r\n                     profile={props.profile}\r\n                     putStatusThunkCreator={props.putStatusThunkCreator}\r\n                     status={props.status}\r\n                     follow={props.follow}\r\n                     onFollowProfileChange={props.onFollowProfileChange}\r\n        />\r\n        <MyPostsContainer />\r\n    </div>\r\n}\r\n\r\nexport default Profile","import React, {FC} from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    getStatusThunkCreator,\r\n    putStatusThunkCreator,\r\n    setUserProfile,\r\n    userProfileThunkCreator,\r\n    savePhotoTC,\r\n    getFollowThunkCreator,\r\n    onFollowProfileChangeThunkCreator,\r\n} from \"../../Redux/profile_reducer\";\r\nimport {AddStateType} from \"../../Redux/reduxStore\";\r\nimport {\r\n    useLocation,\r\n    useNavigate,\r\n    useParams,\r\n} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthNavigate} from \"../hoc/witAuthNavigate\";\r\nimport {getFollowingThunkCreator} from \"../../Redux/users_reducers\";\r\n\r\nfunction withRouter(Component: FC) {\r\n    function ComponentWithRouterProp(props: any) {\r\n        let location = useLocation();\r\n        let navigate = useNavigate();\r\n        let params = useParams();\r\n        return (\r\n            <Component\r\n                {...props}\r\n                router={{ location, navigate, params }}\r\n            />\r\n        );\r\n    }\r\n\r\n    return ComponentWithRouterProp;\r\n}\r\n\r\nclass ProfileContainer extends React.Component<any, any> {\r\n\r\n    refreshProfile(): void {\r\n        let userId: number = this.props.router.params.userId\r\n        if (!userId) {userId = this.props.authorizedUserId}\r\n        this.props.userProfileThunkCreator(userId)\r\n        this.props.getStatusThunkCreator(userId)\r\n        this.props.getFollowThunkCreator(userId)\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Readonly<any>, prevState: Readonly<any>, snapshot?: any): void {\r\n        if (this.props.router.params.userId != prevProps.router.params.userId ||\r\n            this.props.router.params.follow != prevProps.router.params.follow) {this.refreshProfile()}\r\n    }\r\n\r\n    onFollowProfileChange = (userId: number, follow: boolean) => {\r\n        this.props.onFollowProfileChangeThunkCreator(userId, follow)\r\n        this.props.getFollowingThunkCreator(true)\r\n    }\r\n\r\n\r\n    render(): React.ReactNode {\r\n        return <Profile {...this.props}\r\n                        isOwner={!!this.props.router.params.userId}\r\n                        profile={this.props.profile}\r\n                        status={this.props.status}\r\n                        putStatusThunkCreator={this.props.putStatusThunkCreator}\r\n                        savePhotoTC={this.props.savePhotoTC}\r\n                        follow={this.props.follow}\r\n                        onFollowProfileChange={this.onFollowProfileChange}\r\n        />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: AddStateType) => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.userId,\r\n        follow: state.profilePage.follow,\r\n        /*followingInProgress: getFollowingInProgress(state),*/\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withRouter,\r\n    connect (mapStateToProps, {setUserProfile,\r\n        userProfileThunkCreator,\r\n        getStatusThunkCreator,\r\n        putStatusThunkCreator,\r\n        savePhotoTC,\r\n        getFollowThunkCreator,\r\n        onFollowProfileChangeThunkCreator,\r\n        getFollowingThunkCreator\r\n    }),\r\n    withAuthNavigate\r\n)(ProfileContainer)","import React, {FC} from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {Navigate} from 'react-router-dom';\r\nimport {AddStateType} from \"../../Redux/reduxStore\";\r\n\r\nlet mapStateToProps = (state: AddStateType) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\nexport const withAuthNavigate = (Component: FC<any>) => {\r\n\r\n    class NavigateComponent extends React.Component<{isAuth: boolean}> {\r\n        render() {\r\n            if (!this.props.isAuth) {\r\n                return <Navigate to={'/login'}/>\r\n            }\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectWithAuthNavigate = connect(mapStateToProps)(NavigateComponent)\r\n\r\n    return ConnectWithAuthNavigate\r\n}\r\n"],"names":["props","className","s","src","message","likeCount","MyPostsForm","React","console","log","initialValues","newPost","validateOnBlur","onSubmit","values","resetForm","createNewPost","undefined","handleBlur","handleChange","isValid","handleSubmit","dirty","type","name","onChange","placeholder","value","onBlur","disabled","onClick","postElements","posts","map","p","id","connect","state","profilePage","newPostText","dispatch","AddPostActionCreator","MyPosts","ProfileStatus","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","e","currentTarget","autoFocus","putStatusThunkCreator","isAuth","auth","profile","ProfileThunkCreator","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contacts","editModeOnOff","errors","touched","github","vk","facebook","instagram","twitter","website","youtube","mainLink","Contact","contactTitle","contactValue","Information","isOwner","Object","keys","filter","i","Preloader","photos","large","target","files","length","savePhotoTC","onFollowProfileChange","userId","follow","ProfileContainer","onFollowProfileChangeThunkCreator","getFollowingThunkCreator","this","router","params","authorizedUserId","userProfileThunkCreator","getStatusThunkCreator","getFollowThunkCreator","refreshProfile","prevProps","prevState","snapshot","compose","Component","location","useLocation","navigate","useNavigate","useParams","setUserProfile","withAuthNavigate","mapStateToProps","NavigateComponent","to"],"sourceRoot":""}
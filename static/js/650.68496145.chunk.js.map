{"version":3,"file":"static/js/650.68496145.chunk.js","mappings":"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","sources":["webpack://react-vadim/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.tsx","webpack://react-vadim/./src/components/Profile/MyPosts/MyPosts.module.css?831b","components/Profile/MyPosts/MyPostsForm.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","webpack://react-vadim/./src/components/Profile/Profile.module.css?b512","components/Profile/ProfileInfo/ProfileStatus.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","components/hoc/witAuthNavigate.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"post\":\"Post_post__nQiOB\",\"img\":\"Post_img__JZc0-\",\"message\":\"Post_message__RccBK\",\"like\":\"Post_like__Cf8gT\"};","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props: {message: string, likeCount: number}) => {\r\n    return (\r\n        <div className={s.post} >\r\n            <img className={s.img} src='https://shapka-youtube.ru/wp-content/uploads/2021/02/avatarka-dlya-skaypa-dlya-parney.jpg'/>\r\n            <div className={s.message}>{props.message}</div>\r\n            <div className={s.like}>{props.likeCount} like</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post","// extracted by mini-css-extract-plugin\nexport default {\"createText\":\"MyPosts_createText__xWvCB\",\"buttonAddPost\":\"MyPosts_buttonAddPost__msy9U\",\"addpost\":\"MyPosts_addpost__W58dj\"};","import React, {Dispatch} from 'react'\r\nimport Post from './Post/Post'\r\nimport s from './MyPosts.module.css'\r\nimport {profilePageType} from \"../../../Redux/profile_reducer\";\r\nimport {Formik} from \"formik\";\r\n\r\nexport const MyPostsForm = React.memo((props: {\r\n    createNewPost: (newPost: string) => void,\r\n}) => {\r\n    console.log('rerenderPost')\r\n    return <Formik\r\n        initialValues={{\r\n            newPost: '' as string\r\n        }}\r\n        validateOnBlur\r\n        onSubmit={(values, {resetForm}) => {\r\n            props.createNewPost(values.newPost)\r\n            console.log(values.newPost)\r\n            resetForm({values: undefined})\r\n        }}\r\n    >\r\n        {({\r\n              values,\r\n              handleBlur,\r\n              handleChange,\r\n              isValid,\r\n              handleSubmit,\r\n              dirty\r\n          }) => (\r\n            <div /*className={s.addpost}*/>\r\n                <input\r\n                    type={'input'}\r\n                    name={'newPost'}\r\n                    onChange={handleChange}\r\n                    placeholder={'Add text'}\r\n                    className={s.createText}\r\n                    value={values.newPost}\r\n                    onBlur={handleBlur}\r\n                />\r\n                <button\r\n                    className={s.buttonAddPost}\r\n                    disabled={!isValid && !dirty}\r\n                    onClick={() => {handleSubmit()}}\r\n                    type={'submit'}\r\n                >Add post\r\n                </button>\r\n            </div>\r\n        )}\r\n\r\n    </Formik>\r\n})","import React, {Dispatch, FC} from 'react'\r\nimport Post from './Post/Post'\r\nimport s from './MyPosts.module.css'\r\nimport {postsType} from \"../../../Redux/profile_reducer\";\r\nimport {MyPostsForm} from \"./MyPostsForm\";\r\n\r\ntype PropsType = {\r\n    posts: Array<postsType>,\r\n    createNewPost: (NewPost: string) => void,\r\n}\r\n\r\nconst MyPosts: FC<PropsType> = (props) => {\r\n    let postElements = props.posts.map(\r\n        (p) => <Post message={p.message} likeCount={p.likeCount}  key={p.id}/>\r\n    );\r\n    console.log('Rerender')\r\n    return (\r\n        <div>\r\n            <MyPostsForm\r\n                createNewPost={props.createNewPost}\r\n            />\r\n            <div className={s.post}>\r\n                {postElements}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyPosts","import React from 'react'\r\nimport {\r\n    AddPostActionCreator,\r\n} from \"../../../Redux/profile_reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {AddStateType} from \"../../../Redux/reduxStore\";\r\nimport {DispatchType} from \"../../../Redux/Types\";\r\n\r\nlet mapStateToProps = (state: AddStateType) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch: DispatchType) => {\r\n    return {\r\n        createNewPost: (newPost: string) => {\r\n            dispatch(AddPostActionCreator(newPost))\r\n        },\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer","// extracted by mini-css-extract-plugin\nexport default {\"topImg\":\"Profile_topImg__IBFWK\",\"topImgDiv\":\"Profile_topImgDiv__FO8Hw\",\"avatarImg\":\"Profile_avatarImg__edtWN\"};","import s from './../Profile.module.css';\r\nimport React, {ChangeEvent, FC, useEffect, useState} from 'react';\r\n\r\ntype PropsType = {\r\n    status: string\r\n    putStatusThunkCreator: (status: string) => void\r\n}\r\n\r\nexport const ProfileStatus: FC<PropsType> = (props) => {\r\n    let [editMode, setEditMode] = useState(false)\r\n\r\n    let activeStatusInput = () => setEditMode(true)\r\n\r\n    let deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.putStatusThunkCreator(status)\r\n    }\r\n\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    let onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setStatus(e.currentTarget.value)\r\n    };\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status)\r\n    }, [props.status]);\r\n\r\n    return (\r\n        <div>  {\r\n            !editMode &&\r\n                <div>\r\n            <span onDoubleClick={activeStatusInput} >{props.status || 'status'}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n            <input\r\n                onChange={onStatusChange}\r\n                autoFocus={true}\r\n                onBlur={deactivateEditMode}\r\n                value={status}/>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n/*\r\nexport class ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activeStatusInput = () => {\r\n        this.setState(\r\n            {editMode: true}\r\n        )\r\n    }\r\n\r\n    deactivateEditMode = () => {\r\n        this.setState(\r\n            {editMode: false}\r\n        );\r\n        this.props.putStatusThunkCreator(this.state.status)\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        });\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div>  {\r\n                !this.state.editMode &&\r\n                <div>\r\n                    <span onDoubleClick={this.activeStatusInput} >{this.props.status || 'status'}</span>\r\n                </div>\r\n            }\r\n                { this.state.editMode &&\r\n                <div>\r\n                    <input\r\n                        onChange={this.onStatusChange}\r\n                        autoFocus={true}\r\n                        onBlur={this.deactivateEditMode}\r\n                        value={this.state.status}/>\r\n                </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}*/\r\n","import React, {FC} from 'react';\r\nimport s from './../Profile.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport {ProfileStatus} from \"./ProfileStatus\";\r\n\r\ntype PropsType = {\r\n    profile: null | any\r\n    putStatusThunkCreator: () => void\r\n    status: string\r\n}\r\n\r\nconst ProfileInfo: FC<PropsType> = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader />\r\n    }\r\n    return <div>\r\n        <div className={s.topImgDiv}>\r\n            <img className={s.topImg}\r\n                 src='https://tech-touch.ru/wp-content/uploads/2013/06/skachat-panoramnye-oboi-dlya-ios-7-gory-1.jpg'/>\r\n        </div>\r\n        <div>\r\n            <img className={s.avatarImg}\r\n                 src={props.profile.photos.large} />\r\n\r\n                 discription\r\n\r\n        </div>\r\n        <ProfileStatus status={props.status} putStatusThunkCreator={props.putStatusThunkCreator}/>\r\n        Main Content;\r\n    </div>\r\n}\r\n\r\nexport default ProfileInfo","import React, {FC} from 'react';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer'\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\ntype PropsType = {\r\n    profile: any | null\r\n    putStatusThunkCreator: () => void\r\n    status: string\r\n}\r\n\r\nconst Profile: FC<PropsType> = (props) => {\r\n    return <div>\r\n        <ProfileInfo profile={props.profile} putStatusThunkCreator={props.putStatusThunkCreator} status={props.status}/>\r\n        <MyPostsContainer />\r\n    </div>\r\n}\r\n\r\nexport default Profile","import React, {FC} from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    getStatusThunkCreator,\r\n    putStatusThunkCreator,\r\n    setUserProfile,\r\n    userProfileThunkCreator\r\n} from \"../../Redux/profile_reducer\";\r\nimport {AddStateType} from \"../../Redux/reduxStore\";\r\nimport {\r\n    useLocation,\r\n    useNavigate,\r\n    useParams,\r\n} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthNavigate} from \"../hoc/witAuthNavigate\";\r\nimport set = Reflect.set;\r\n\r\nfunction withRouter(Component: FC) {\r\n    function ComponentWithRouterProp(props: any) {\r\n        let location = useLocation();\r\n        let navigate = useNavigate();\r\n        let params = useParams();\r\n        return (\r\n            <Component\r\n                {...props}\r\n                router={{ location, navigate, params }}\r\n            />\r\n        );\r\n    }\r\n\r\n    return ComponentWithRouterProp;\r\n}\r\n\r\nclass ProfileContainer extends React.Component<any, any> {\r\n\r\n    componentDidMount(): void {\r\n        let userId: number = this.props.router.params.userId\r\n        if (!userId) {userId = 25265}\r\n        this.props.userProfileThunkCreator(userId)\r\n        this.props.getStatusThunkCreator(userId)\r\n    }\r\n\r\n    render(): React.ReactNode {\r\n        return <Profile {...this.props} profile={this.props.profile} status={this.props.status} putStatusThunkCreator={this.props.putStatusThunkCreator}/>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: AddStateType) => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withRouter,\r\n    connect (mapStateToProps, {setUserProfile, userProfileThunkCreator, getStatusThunkCreator, putStatusThunkCreator}),\r\n    withAuthNavigate\r\n)(ProfileContainer)","import React, {FC} from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {Navigate} from 'react-router-dom';\r\nimport {AddStateType} from \"../../Redux/reduxStore\";\r\n\r\nlet mapStateToProps = (state: AddStateType) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\nexport const withAuthNavigate = (Component: FC<any>) => {\r\n\r\n    class NavigateComponent extends React.Component<{isAuth: boolean}> {\r\n        render() {\r\n            if (!this.props.isAuth) {\r\n                return <Navigate to={'/login'}/>\r\n            }\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectWithAuthNavigate = connect(mapStateToProps)(NavigateComponent)\r\n\r\n    return ConnectWithAuthNavigate\r\n}\r\n"],"names":["props","className","s","src","message","likeCount","MyPostsForm","React","console","log","initialValues","newPost","validateOnBlur","onSubmit","values","resetForm","createNewPost","undefined","handleBlur","handleChange","isValid","handleSubmit","dirty","type","name","onChange","placeholder","value","onBlur","disabled","onClick","postElements","posts","map","p","id","connect","state","profilePage","newPostText","dispatch","AddPostActionCreator","MyPosts","ProfileStatus","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","e","currentTarget","autoFocus","putStatusThunkCreator","profile","photos","large","Preloader","Reflect","set","ProfileContainer","userId","this","router","params","userProfileThunkCreator","getStatusThunkCreator","compose","Component","location","useLocation","navigate","useNavigate","useParams","setUserProfile","withAuthNavigate","mapStateToProps","isAuth","auth","NavigateComponent","to"],"sourceRoot":""}
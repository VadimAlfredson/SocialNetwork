{"version":3,"file":"static/js/517.41869aa9.chunk.js","mappings":"oOACA,EAA6B,0BAA7B,EAAoE,0BAApE,EAA4G,2BAA5G,EAAqJ,2BAArJ,EAAgM,6BAAhM,EAA2O,2BAA3O,EAAsR,6BAAtR,EAA8T,wBAA9T,EAA+V,sBAA/V,EAAoY,4BAApY,EAA6a,0B,SC8G7a,EAtGsB,SAACA,GACnB,IAAMC,GAASC,EAAAA,EAAAA,KAAe,SAAAC,GAAK,OAAIA,EAAMC,KAAKH,MAAM,IAClDI,GAAaH,EAAAA,EAAAA,KAAe,SAAAC,GAAK,OAAIA,EAAMC,KAAKC,UAAU,IAC1DC,GAAeJ,EAAAA,EAAAA,KAAe,SAAAC,GAAK,OAAIA,EAAMC,KAAKE,YAAY,IAC9DC,GAAWC,EAAAA,EAAAA,MAEjBC,GAA0BC,EAAAA,EAAAA,UAAiB,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAvCN,EAAKQ,EAAA,GAAEE,EAAQF,EAAA,GAItB,IAHAG,EAAAA,EAAAA,YAAU,WACNX,IAAUG,EAAeO,EAASP,GAAgBS,QAAQC,IAAI,YAClE,GAAG,CAACV,EAAcD,IACdJ,EACA,OAAOgB,EAAAA,EAAAA,KAACC,EAAAA,GAAQ,CAACC,GAAI,cAGzB,IAAMC,EAAmBC,EAAAA,KAAaC,MAAM,CACxCC,MAAOF,EAAAA,KAAaG,SAAS,YAAYD,MAAM,iBAAiBE,UAAU,iBAC1EC,SAAUL,EAAAA,KAAaG,SAAS,cAEpC,OAAOP,EAAAA,EAAAA,KAACU,EAAAA,GAAM,CACVC,cAAe,CACXL,MAAO,GACPG,SAAU,GACVG,UAAU,EACVC,QAAS,IAEbC,gBAAc,EACdC,SAAW,SAAAC,GAEPlB,QAAQC,IAAIiB,GACZ1B,GAAS2B,EAAAA,EAAAA,IAAkBD,EAAOV,MAAOU,EAAOP,SAAUO,EAAOJ,SAAUI,EAAOH,SACtF,EACAV,iBAAkBA,EAAiBe,SAElC,SAAAC,GAAA,IACKH,EAAMG,EAANH,OACAI,EAAMD,EAANC,OACAC,EAAOF,EAAPE,QACAC,EAAUH,EAAVG,WACAC,EAAYJ,EAAZI,aACAC,EAAOL,EAAPK,QACAC,EAAYN,EAAZM,aACKN,EAALO,MAAK,OAEPC,EAAAA,EAAAA,MAAA,OAAAT,SAAA,EACIlB,EAAAA,EAAAA,KAAA,OAAK4B,UAAWC,EAAeX,SAAmB,IAAhB7B,EAA+BA,EAAT,QACxDW,EAAAA,EAAAA,KAAA,SACI4B,UAAWP,EAAQf,OAASc,EAAOd,MAAQuB,EAAgBA,EAC3DC,KAAM,QACNC,KAAM,QACNC,SAAUT,EACVU,OAAQX,EACRY,MAAOlB,EAAOV,MACd6B,YAAa,UACdd,EAAQf,OAASc,EAAOd,QAASN,EAAAA,EAAAA,KAAA,KAAG4B,UAAWC,EAASX,SAAEE,EAAOd,SAAWN,EAAAA,EAAAA,KAAA,UAC/EA,EAAAA,EAAAA,KAAA,SACI4B,UAAYP,EAAQZ,UAAYW,EAAOX,SAAYoB,EAAgBA,EACnEC,KAAM,WACNC,KAAM,WACNC,SAAUT,EACVU,OAAQX,EACRY,MAAOlB,EAAOP,SACd0B,YAAa,aACdd,EAAQZ,UAAYW,EAAOX,WAAYT,EAAAA,EAAAA,KAAA,KAAG4B,UAAWC,EAASX,SAAEE,EAAOX,YAAcT,EAAAA,EAAAA,KAAA,UACxFA,EAAAA,EAAAA,KAAA,OAAK4B,UAAWC,EAAgBX,UAC5BlB,EAAAA,EAAAA,KAAA,OAAK4B,UAAWC,EAAWX,UACvBlB,EAAAA,EAAAA,KAAA,SACI8B,KAAM,WACNC,KAAM,WACNC,SAAUT,EACVU,OAAQX,SAKpBtB,EAAAA,EAAAA,KAAA,SACCZ,IACGuC,EAAAA,EAAAA,MAAA,OAAKC,UAAWxC,GAAcyC,EAAcX,SAAA,EACxClB,EAAAA,EAAAA,KAAA,OAAK4B,UAAWC,EAAcO,IAAKhD,KACnCY,EAAAA,EAAAA,KAAA,SAEI8B,KAAM,OACNC,KAAM,UACNC,SAAUT,EACVU,OAAQX,EACRY,MAAOlB,EAAOH,WAChBb,EAAAA,EAAAA,KAAA,aAGVA,EAAAA,EAAAA,KAAA,UACI4B,UAAaR,EAAOd,OAAUc,EAAOX,SAA4BoB,EAAhBA,EACjDQ,UAAWb,EACXc,QAAS,WACLb,GACJ,EACAK,KAAM,SAASZ,SAClB,aAEC,GAGlB,EC5FA,EAbc,WACV,OAAOS,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAaX,SAAA,EACpClB,EAAAA,EAAAA,KAAA,MAAAkB,SAAI,YACJlB,EAAAA,EAAAA,KAACuC,EAAS,KACNvC,EAAAA,EAAAA,KAAA,UAEA2B,EAAAA,EAAAA,MAAA,OAAAT,SAAA,EACIlB,EAAAA,EAAAA,KAAA,OAAAkB,SAAK,+BACLlB,EAAAA,EAAAA,KAAA,OAAAkB,SAAK,wBAGjB,C","sources":["webpack://react-vadim/./src/components/login/login.module.css?e6ba","components/login/formLogin.tsx","components/login/login.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"loginBlock\":\"login_loginBlock__GrLby\",\"inputLogin\":\"login_inputLogin__rVtz0\",\"errorsInput\":\"login_errorsInput__H32qx\",\"buttonLogin\":\"login_buttonLogin__-NSsZ\",\"buttonDisable\":\"login_buttonDisable__TOL7c\",\"displayNone\":\"login_displayNone__XyTaE\",\"checkboxBlock\":\"login_checkboxBlock__YB3NM\",\"checkbox\":\"login_checkbox__uPAX8\",\"errors\":\"login_errors__YOsLk\",\"messageError\":\"login_messageError__ob3Ev\",\"imgCaptcha\":\"login_imgCaptcha__s2fvW\"};","import React, {FC, useEffect, useState} from \"react\";\r\nimport {Formik} from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport {loginThunkCreator} from \"../../Redux/reducers/auth_reducers\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {useAppDispatch, useAppSelector} from \"../../Redux/reduxStore\";\r\nimport s from './login.module.css';\r\n\r\n\r\nconst LoginForm: FC = (props) => {\r\n    const isAuth = useAppSelector(state => state.auth.isAuth)\r\n    const captchaURL = useAppSelector(state => state.auth.captchaURL)\r\n    const messageError = useAppSelector(state => state.auth.messageError)\r\n    const dispatch = useAppDispatch()\r\n    \r\n    const [state, setState] = useState<string>('')\r\n    useEffect(() => {\r\n        state !== messageError ? setState(messageError) : console.log('useEffect')\r\n    }, [messageError, captchaURL])\r\n    if (isAuth) {\r\n        return <Navigate to={\"/profile/\"}/>\r\n    }\r\n\r\n    const validationSchema = yup.object().shape({\r\n        email: yup.string().required('Required').email('Invalid email').typeError('Invalid email'),\r\n        password: yup.string().required('Required')\r\n    })\r\n    return <Formik\r\n        initialValues={{\r\n            email: '',\r\n            password: '',\r\n            checkbox: false,\r\n            captcha: '',\r\n        }}\r\n        validateOnBlur\r\n        onSubmit={(values => {\r\n            debugger\r\n            console.log(values)\r\n            dispatch(loginThunkCreator(values.email, values.password, values.checkbox, values.captcha))\r\n        })}\r\n        validationSchema={validationSchema}\r\n    >\r\n        {({\r\n              values,\r\n              errors,\r\n              touched,\r\n              handleBlur,\r\n              handleChange,\r\n              isValid,\r\n              handleSubmit,\r\n              dirty\r\n          }) => (\r\n            <div>\r\n                <div className={s.messageError}>{(messageError != '' || null) && messageError}</div>\r\n                <input\r\n                    className={touched.email && errors.email ? s.errorsInput : s.inputLogin}\r\n                    type={'email'}\r\n                    name={'email'}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    value={values.email}\r\n                    placeholder={'email'}\r\n                />{touched.email && errors.email && <p className={s.errors}>{errors.email}</p>}<br/>\r\n                <input\r\n                    className={(touched.password && errors.password) ? s.errorsInput : s.inputLogin}\r\n                    type={'password'}\r\n                    name={'password'}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    value={values.password}\r\n                    placeholder={'password'}\r\n                />{touched.password && errors.password && <p className={s.errors}>{errors.password}</p>}<br/>\r\n                <div className={s.checkboxBlock}>\r\n                    <div className={s.checkbox}>\r\n                        <input\r\n                            type={'checkbox'}\r\n                            name={'checkbox'}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            /*value={values.checkbox}*/\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <br/>\r\n                {captchaURL &&\r\n                    <div className={captchaURL && s.displayNone}>\r\n                        <img className={s.imgCaptcha} src={captchaURL}/>\r\n                        <input\r\n                            /*className={touched.captcha && errors.captcha ? s.errorsInput : s.inputLogin}*/\r\n                            type={'text'}\r\n                            name={'captcha'}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            value={values.captcha}\r\n                        /><br/>\r\n                    </div>\r\n                }\r\n                <button\r\n                    className={(!errors.email && !errors.password) ? s.buttonLogin : s.buttonDisable}\r\n                    disabled={!isValid}\r\n                    onClick={() => {\r\n                        handleSubmit()\r\n                    }}\r\n                    type={'submit'}\r\n                >log in\r\n                </button>\r\n            </div>\r\n        )}\r\n    </Formik>\r\n};\r\n\r\nexport default LoginForm\r\n","import React from 'react';\r\nimport LoginForm from \"./formLogin\";\r\nimport s from './login.module.css';\r\n\r\nconst Login = () => {\r\n    return <div className={s.loginBlock}>\r\n    <h3>Log in</h3>\r\n    <LoginForm />\r\n        <br/>\r\n\r\n        <div>\r\n            <div>Email: free@samuraijs.com</div>\r\n            <div>Password: free</div>\r\n        </div>\r\n    </div>\r\n};\r\n\r\nexport default Login"],"names":["props","isAuth","useAppSelector","state","auth","captchaURL","messageError","dispatch","useAppDispatch","_useState","useState","_useState2","_slicedToArray","setState","useEffect","console","log","_jsx","Navigate","to","validationSchema","yup","shape","email","required","typeError","password","Formik","initialValues","checkbox","captcha","validateOnBlur","onSubmit","values","loginThunkCreator","children","_ref","errors","touched","handleBlur","handleChange","isValid","handleSubmit","dirty","_jsxs","className","s","type","name","onChange","onBlur","value","placeholder","src","disabled","onClick","LoginForm"],"sourceRoot":""}
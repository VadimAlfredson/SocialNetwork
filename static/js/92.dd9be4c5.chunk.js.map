{"version":3,"file":"static/js/92.dd9be4c5.chunk.js","mappings":"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","sources":["webpack://react-vadim/./src/components/Users/users.module.css?9211","webpack://react-vadim/./src/components/common/Paginator/paginator.module.css?28dc","components/common/Paginator/Paginator.tsx","components/Users/formSearchUsers.tsx","components/Users/Users.tsx","components/Users/UsersContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"usersComponent\":\"users_usersComponent__8nRZo\",\"itemUser\":\"users_itemUser__x5owb\",\"avatar\":\"users_avatar__erVMZ\",\"infoUser\":\"users_infoUser__y2HtR\",\"followButton\":\"users_followButton__ExoVv\",\"massageButton\":\"users_massageButton__-K1Un\",\"buttonStyle\":\"users_buttonStyle__jG05x\",\"nameUser\":\"users_nameUser__9hBV1\",\"statusUser\":\"users_statusUser__F2WyE\",\"navLinkToLogin\":\"users_navLinkToLogin__wH+jC\",\"formSearchBlock\":\"users_formSearchBlock__2WRRL\",\"searchInput\":\"users_searchInput__2r7sY\",\"searchButton\":\"users_searchButton__ZGCpm\",\"searchCheckbox\":\"users_searchCheckbox__LqUAR\",\"searchText\":\"users_searchText__DnfT0\"};","// extracted by mini-css-extract-plugin\nexport default {\"activePage\":\"paginator_activePage__eWc4N\",\"paginator\":\"paginator_paginator__QVHI9\",\"pageNumber\":\"paginator_pageNumber__7A1XW\"};","import React, {FC, useState} from \"react\";\r\nimport s from \"../Paginator/paginator.module.css\"\r\nimport {useAppSelector} from \"../../../Redux/reduxStore\";\r\n\r\ntype PropsType = {\r\n    onPageChange: (p: number, pageSize: number, term: string, friend?: boolean) => void\r\n}\r\n\r\nlet Paginator: FC<PropsType> = (props) => {\r\n    const pageSize =  useAppSelector(state => state.users.pageSize)\r\n    const totalUsersCount = useAppSelector(state => state.users.totalUsersCount)\r\n    const currentPage = useAppSelector(state => state.users.currentPage)\r\n    const term = useAppSelector(state => state.users.term)\r\n    const friend = useAppSelector(state => state.users.friends)\r\n    let pageCount = Math.ceil(totalUsersCount / pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pageCount; i++) {\r\n        pages.push(i)\r\n    }\r\n    ;\r\n    let portionSize = 5\r\n    let portionCount = Math.ceil(pageCount / portionSize)\r\n    let [portionNumber, setPortionNumber] = useState(1)\r\n    let leftPortionNumber = (portionNumber - 1) * portionSize + 1\r\n    let rightPortionNumber = portionNumber * portionSize\r\n    return (\r\n        <div className={s.paginator}>\r\n            {portionNumber > 1 &&\r\n                pages\r\n                    .filter(p => p === 1)\r\n                    .map(p => {\r\n                            // @ts-ignore\r\n                            return <span className={currentPage === p ? s.activePage : s.pageNumber}\r\n                                         onClick={() => {\r\n                                             props.onPageChange(p, pageSize, term)\r\n                                         }} key={p}\r\n                            >{p}</span>\r\n                        }\r\n                    )\r\n            }\r\n            {portionNumber > 1 &&\r\n                <button className={s.pageNumber} onClick={() => {setPortionNumber(portionNumber - 1)}}>-5</button>\r\n            }\r\n            {pages\r\n                .filter(p => p >= leftPortionNumber && p <= rightPortionNumber)\r\n                .map(p => {\r\n                        // @ts-ignore\r\n                        return <span className={props.currentPage === p ? s.activePage : s.pageNumber}\r\n                                     onClick={() => {\r\n                                         if (friend) {\r\n                                             props.onPageChange(p, pageSize, term, friend)}\r\n                                         else {props.onPageChange(p, pageSize, term)}\r\n                                     }} key={p}\r\n                        >{p}</span>\r\n                    }\r\n                )}\r\n\r\n            {portionCount > portionNumber &&\r\n                <button className={s.pageNumber}\r\n                        onClick={() => {setPortionNumber(portionNumber + 1)}}\r\n                >+5</button>\r\n            }\r\n            {portionCount > portionNumber &&\r\n                pages\r\n                    .filter(p => p === pageCount)\r\n                    .map(p => {\r\n                            // @ts-ignore\r\n                            return <span className={currentPage === p ? s.activePage : s.pageNumber}\r\n                                         onClick={() => {\r\n                                             props.onPageChange(p, pageSize, term)\r\n                                         }} key={p}\r\n                            >{p}</span>\r\n                        }\r\n                    )}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Paginator","import React, {FC, useEffect, useState} from \"react\";\r\nimport {Formik} from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport s from './users.module.css';\r\nimport {useAppSelector} from \"../../Redux/reduxStore\";\r\n\r\ntype PropsType = {\r\n    onUsersChange: (pageNumber: number, pageSize: number, term: string, friends: boolean) => void\r\n}\r\n\r\nconst FormSearchUsers: FC<PropsType> = (props) => {\r\n    const pageSize =  useAppSelector(state => state.users.pageSize)\r\n    const validationSchema = yup.object().shape({\r\n        search: yup.string(),\r\n    })\r\n\r\n    return <Formik\r\n        initialValues={{\r\n            search: '',\r\n            subscriptionsCheckbox: false,\r\n        }}\r\n        validateOnBlur\r\n        onSubmit={(values => {\r\n            console.log(values)\r\n            props.onUsersChange(1, pageSize, values.search, values.subscriptionsCheckbox)\r\n        })}\r\n        validationSchema={validationSchema}\r\n    >\r\n        {({\r\n              values,\r\n              errors,\r\n              touched,\r\n              handleBlur,\r\n              handleChange,\r\n              isValid,\r\n              handleSubmit,\r\n              dirty\r\n          }) => (\r\n            <div className={s.formSearchBlock}>\r\n                <input\r\n                    className={s.searchInput}\r\n                    type={'text'}\r\n                    name={'search'}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    value={values.search}\r\n                    placeholder={'text'}\r\n                />\r\n                <button\r\n                    className={s.searchButton}\r\n                    /*disabled={!isValid}*/\r\n                    onClick={() => {\r\n                        handleSubmit()\r\n                    }}\r\n                    type={'submit'}\r\n                >Search\r\n                </button>\r\n                <div className={s.searchCheckbox}>\r\n                    <div className={''}>\r\n                        <input\r\n                            type={'checkbox'}\r\n                            name={'subscriptionsCheckbox'}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className={s.searchText}>Only subscriptions</div>\r\n            </div>\r\n        )}\r\n    </Formik>\r\n};\r\n\r\nexport default FormSearchUsers\r\n","import React, {FC, useEffect, useState} from \"react\";\r\nimport {UserType} from \"../../Redux/users_reducers\";\r\nimport s from \"../Users/users.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {putDialogUserThunkCreator} from \"../../Redux/dialogs_reducer\";\r\nimport FormSearchUsers from \"./formSearchUsers\";\r\nimport {useAppSelector} from \"../../Redux/reduxStore\";\r\n\r\ntype PropsType = {\r\n    onUsersChange: (pageNumber: number, pageSize: number, term: string, friend?: boolean) => void\r\n    onFollowChange: (id: number, followed: boolean) => void\r\n    onDialogUserChange: (userId: number) => void\r\n}\r\n\r\nlet Users: FC<PropsType> = (props) => {\r\n    const users = useAppSelector(state => state.users.users)\r\n    const followingInProgress = useAppSelector(state => state.users.followingInProgress)\r\n    const isAuth = useAppSelector(state => state.auth.isAuth)\r\n    const isFetching = useAppSelector(state => state.users.isFetching)\r\n    const [state, setState] = useState(false)\r\n    useEffect(() => {\r\n        state != isAuth ? setState(isAuth) : console.log('useEffect')\r\n    }, [isAuth])\r\n    return (\r\n        <div className={s.usersComponent}>\r\n            <Paginator\r\n                onPageChange={props.onUsersChange}\r\n            />\r\n            <FormSearchUsers\r\n                onUsersChange={props.onUsersChange}\r\n            />\r\n            {isFetching ? <Preloader/> :\r\n                <div>\r\n                    {\r\n                        users.map((u: UserType) => <div className={s.itemUser} key={u.id}>\r\n                            <div className={s.avatar}>\r\n                                <NavLink to={'/profile/' + u.id}>\r\n                                    <img src={u.photos.small !== null ? u.photos.small :\r\n                                        'https://shapka-youtube.ru/wp-content/uploads/2021/02/avatarka-dlya-skaypa-dlya-parney.jpg'\r\n                                    } alt={'картинка'}/>\r\n                                </NavLink>\r\n                            </div>\r\n                            <div className={s.followButton}>\r\n                                {isAuth ?\r\n                                    <button className={s.buttonStyle}\r\n                                            disabled={followingInProgress.includes(u.id)}\r\n                                            onClick={() => (props.onFollowChange(u.id, u.followed))\r\n                                            }>{u.followed ? 'Unfollow' : 'Follow'}\r\n                                    </button> : <NavLink className={s.navLinkToLogin} to={\"../login\"}>\r\n                                        Register to subscribe\r\n                                    </NavLink>}\r\n                            </div>\r\n                            <div className={s.massageButton}>\r\n                                {isAuth &&\r\n                                    <button className={s.buttonStyle}\r\n                                            onClick={() => {\r\n                                                props.onDialogUserChange(u.id)\r\n                                            }}>Message\r\n                                    </button>}\r\n                            </div>\r\n\r\n                            <div className={s.infoUser}>\r\n                                <div className={s.nameUser}>{u.name}</div>\r\n                                <div className={s.statusUser}>{u.status}</div>\r\n                            </div>\r\n                        </div>)}\r\n                </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users","import React, {FC, useEffect} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Users from \"./Users\";\r\nimport {RootState, useAppSelector} from \"../../Redux/reduxStore\";\r\nimport {\r\n    followed,\r\n    setCurrentPage,\r\n    toggleIsFetching,\r\n    setTotalUsersCount,\r\n    setUsers,\r\n    toggleIsFollowing,\r\n    getUsersThunkCreator,\r\n    onChangeUsersThunkCreator,\r\n    onFollowChangeThunkCreator, UserType,\r\n} from \"../../Redux/users_reducers\";\r\nimport {compose} from \"redux\";\r\nimport {putDialogUserThunkCreator} from \"../../Redux/dialogs_reducer\";\r\n\r\ntype PropsType = {\r\n    getUsersThunkCreator: (currentPage: number, pageSize: number) => void\r\n    onChangeUsersThunkCreator: (pageNumber: number, pageSize: number, term: string, friend?: boolean) => void\r\n    onFollowChangeThunkCreator: (userId: number, follow: boolean) => void\r\n    putDialogUserThunkCreator: (userId: number) => {}\r\n}\r\n\r\n\r\nconst UsersContainer: FC<PropsType> = (props) => {\r\n    const pageSize =  useAppSelector(state => state.users.pageSize)\r\n    const currentPage = useAppSelector(state => state.users.currentPage)\r\n    useEffect(() => {\r\n        props.getUsersThunkCreator(currentPage, pageSize)}, []\r\n    )\r\n\r\n    let onUsersChange = (pageNumber: number, pageSize: number, term: string, friend?: boolean) => {\r\n        debugger\r\n        props.onChangeUsersThunkCreator(pageNumber, pageSize, term, friend)\r\n    }\r\n\r\n    let onFollowChange = (userId: number, follow: boolean) => {\r\n        props.onFollowChangeThunkCreator(userId, follow)\r\n    }\r\n\r\n    let onDialogUserChange = (userId: number) => {\r\n        props.putDialogUserThunkCreator(userId)\r\n    }\r\n\r\n        return <>\r\n            <Users\r\n                onUsersChange={onUsersChange}\r\n                onFollowChange={onFollowChange}\r\n                onDialogUserChange={onDialogUserChange}\r\n            />\r\n        </>\r\n\r\n\r\n}\r\n\r\nlet mapStateToProps = (state: RootState) => {\r\n    return {\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,\r\n        {\r\n            getUsersThunkCreator,\r\n            onChangeUsersThunkCreator,\r\n            onFollowChangeThunkCreator,\r\n            putDialogUserThunkCreator,\r\n        })\r\n)(UsersContainer)"],"names":["props","pageSize","useAppSelector","state","users","totalUsersCount","currentPage","term","friend","friends","pageCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionNumber","rightPortionNumber","className","s","filter","p","map","onClick","onPageChange","validationSchema","yup","shape","search","initialValues","subscriptionsCheckbox","validateOnBlur","onSubmit","values","console","log","onUsersChange","handleBlur","errors","touched","handleChange","handleSubmit","isValid","dirty","type","name","onChange","onBlur","value","placeholder","followingInProgress","isAuth","auth","isFetching","setState","useEffect","Preloader","u","to","id","src","photos","small","alt","disabled","includes","onFollowChange","followed","onDialogUserChange","status","compose","connect","getUsersThunkCreator","onChangeUsersThunkCreator","onFollowChangeThunkCreator","putDialogUserThunkCreator","pageNumber","userId","follow"],"sourceRoot":""}